[{"path":"http://epimodel.github.io/EpiModel/articles/Intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"EpiModel: Mathematical Modeling of Infectious Disease Dynamics","text":"EpiModel package provides tools simulating mathematical models infectious disease dynamics. Epidemic model classes include deterministic compartmental models, stochastic individual-contact models, stochastic network models. Network models use robust statistical methods temporal exponential-family random graph models (ERGMs) Statnet suite software packages R. Standard templates epidemic modeling include SI, SIR, SIS disease types. EpiModel features API extending templates address novel scientific research aims.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/Intro.html","id":"documentation","dir":"Articles","previous_headings":"","what":"Documentation","title":"EpiModel: Mathematical Modeling of Infectious Disease Dynamics","text":"vignette provides general orientation EpiModel tutorials documentation within package hosted elsewhere online. full-length tutorials may found EpiModel website (https://www.epimodel.org), also points Network Modeling Epidemics (NME) short-course (https://epimodel.github.io/sismid/). current version EpiModel v2.5.0. Within package, can consult extensive help documentation vignettes exported function: see latest updates EpiModel, consult NEWS file package, also summarized Github Releases (https://github.com/EpiModel/EpiModel/releases). interested stochastic network model class, suggest learning using EpiModel following sequence: best place start primary main methods paper, published Journal Statistical Software reference . , suggest work Network Modeling Epidemics course materials understand background network theory see run parameterize run built-network models. interested extending EpiModel novel research aims consult model extension materials NME course, look variety extension model templates EpiModel Gallery (https://github.com/EpiModel/EpiModel-Gallery). latest developments EpiModel related working network model inputs outputs, covered advanced topics vignettes within package: Working Model Parameters EpiModel Working Custom Attributes Summary Statistics EpiModel Working Network Objects EpiModel","code":"help(package = \"EpiModel\")"},{"path":"http://epimodel.github.io/EpiModel/articles/Intro.html","id":"getting-help","dir":"Articles","previous_headings":"","what":"Getting Help","title":"EpiModel: Mathematical Modeling of Infectious Disease Dynamics","text":"technical coding questions, non-technical conceptual modeling questions, EpiModel feature requests may posted Github issues main Github repository (https://github.com/EpiModel/EpiModel/issues).","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/Intro.html","id":"epimodel-citation","dir":"Articles","previous_headings":"","what":"EpiModel Citation","title":"EpiModel: Mathematical Modeling of Infectious Disease Dynamics","text":"using EpiModel teaching research, please include citation primary methods paper: Jenness SM, Goodreau SM Morris M. EpiModel: R Package Mathematical Modeling Infectious Disease Networks. Journal Statistical Software. 2018; 84(8): 1-47. doi: 10.18637/jss.v084.i08 (https://doi.org/10.18637/jss.v084.i08).","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"vignette discusses recent updates EpiModel working attributes summary statistics within stochastic network model class. material oriented towards custom models extension modules functions. information Extending EpiModel section Network Modeling Epidemics course materials. network simulations netsim, store data Main List Object (referred dat). vignette discuss three types data dat: Current Nodal Attributes Historical Nodal Attributes Epidemic Trackers","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"current-nodal-attributes","dir":"Articles","previous_headings":"","what":"Current Nodal Attributes","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"Attributes characteristics nodes (e.g., persons) model current time-step. default, every node unique_id active attribute used track node, well three attributes used epidemic modules: status disease status, entrTime time node entered population, exitTime time node left population. attributes can added name value, like age, must stored scalar values. work attribute vectors size number nodes model. attribute vectors, node identified Positional ID posit_id (.e., position vector). default attribute unique_id created node gives unique identification number allowing us refer nodes longer model. Deaths forms exit network disrupt positional ID impact unique ID.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"accessing-attributes","dir":"Articles","previous_headings":"Current Nodal Attributes > Working With Attributes","what":"Accessing Attributes","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"EpiModel::get_attr function extract vector given attribute. simplest form, can pull complete attribute vector dat like : call pull dat active attribute nodes. active vector size current number nodes. values either 1 0 depending whether node active . Trying extract attribute exist cause EpiModel::get_attr throw error.","code":"active <- EpiModel::get_attr(dat, \"active\")"},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"modifying-attributes","dir":"Articles","previous_headings":"Current Nodal Attributes > Working With Attributes","what":"Modifying Attributes","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"custom extension modules, usually want modify attributes. minimal module increments age nodes 1. Let’s break simple yet perfectly valid module. Pull age attribute vector previous section. Create vector new_age incrementing ages one. Update dat object EpiModel::set_attr function. Return Updated dat object. can see EpiModel::set_attr takes arguments: dat object update. name attribute vector interest (“age”). new values vector (new_age). using EpiModel::set_attr, several things note: function modify dat object, merely returns modified version assigned back dat. (Nicely, cause performance issues due way R handles shallow copies since version 3.1) new_age size equal number nodes network, function throw error.","code":"aging_module <- function(dat, at) {    # Extract current attribute   age <- EpiModel::get_attr(dat, \"age\")    # Aging process   new_age <- age + 1    # Output updated attributes   dat <- EpiModel::set_attr(dat, \"age\", new_age)    return(dat) }"},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"summary","dir":"Articles","previous_headings":"Current Nodal Attributes > Working With Attributes","what":"Summary","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"example describes recommended way work attribute: Extract attributes local vectors. Modify local vectors dynamic process (like aging). Update dat object revised local vectors. Return dat object end function. functions arguments described documentation: see help(\"net-accessor\", package = \"EpiModel\") details.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"historical-nodal-attributes","dir":"Articles","previous_headings":"","what":"Historical Nodal Attributes","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"Attributes described refer state node network current time-step. However, sometimes useful track happened nodes time. saving full history attributes consume much memory rarely necessary full-scale research models, EpiModel offers way record specific attribute specific nodes different time-steps. may useful diagnostic purposes (e.g., see dynamic process coded correctly) tracking limited set individual-level outcomes analysis. Attribute History efficient collection recorded attributes different time-steps. EpiModel functions record elements access convenient manner netsim simulation complete.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"recording-attribute-histories","dir":"Articles","previous_headings":"Historical Nodal Attributes > Working with Attribute Histories","what":"Recording Attribute Histories","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"following module records viral load infected nodes every 10 time steps. assume module part model defines updates two attributes time: status possible values “infected” “susceptible”. viral_load continuous number “infected” nodes NA otherwise. steps code follows: Check current time step multiple ten. yes, go step 2, otherwise skip step 5. Pull 2 attribute vectors interest (“status” “viral_load”). Store infected posit_ids infected nodes. Record viral_load infected nodes time label “viral_load”. Return dat object. EpiModel::record_attr_history takes five arguments: dat object. time step associated recording (, current time-step). label used attribute (“viral_load”). vector posit_ids referring nodes interest (infected). values recorded IDs (viral_load[infected]) Note EpiModel::record_attr_history requires set posit_ids. Internally, function convert unique_ids Attribute History affected nodes entering leaving population time. recording attribute histories, one must ensure record many values posit_ids. Otherwise, function throw error. however possible use one value attribute even record value multiple nodes. last situation actually uses less RAM. case, want record attribute histories sparingly storage can large, especially open population models many nodes run many time steps.","code":"viral_load_logger_module <- function(dat, at) {    # Run every 10 time steps   if (at %% 10 == 0) {      # Attributes     status <- EpiModel::get_attr(dat, \"status\")     viral_load <- EpiModel::get_attr(dat, \"viral_load\")      infected <- which(status == \"infected\")      dat <- EpiModel::record_attr_history(       dat, at,       \"viral_load\",       infected,       viral_load[infected]     )   }    # Output   return(dat) }"},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"accessing-the-attribute-histories","dir":"Articles","previous_headings":"Historical Nodal Attributes > Working with Attribute Histories","what":"Accessing the Attribute Histories","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"Attribute History meant accessed netsim simulation complete. point, can use EpiModel::get_attr_history function access histories recorded, like : attr_history object list data.frames. One attribute history recorded (use flexible list structure history may different dimension). Assume running two simulations, using module defined another one (shown) recording node switched infected recovered. get named list two data.frame’s: “viral_load” value column viral loads. “status” value column whether node became “infected” “recovered” given time-step.","code":"sim <- netsim(est, param, init, control) attr_history <- EpiModel::get_attr_history(sim) get_attr_history(sim)  # $viral_load #    sim step attribute    uids values # 1  1   10   viral_load   1001   2000 # 2  1   10   viral_load   1002   1878 # 3  1   20   viral_load   1001   1500 # 4  1   20   viral_load   1002    300 # 5  2   10   viral_load    401   2500 # 6  2   10   viral_load    402   1378 # 7  2   20   viral_load    401   1200 # 8  2   20   viral_load    402    100 # ... # # $status #    sim step attribute      uids     values # 1  1   22   status  1001   infected # 2  1   64   status  1002   infected # 3  1  110   status  1001  recovered # 4  1  220   status  1002  recovered # 5  2    7   status   401   infected # 6  2   15   status   402   infected # 7  2   20   status   401  recovered # 8  2  120   status   402  recovered # ..."},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"epidemic-trackers","dir":"Articles","previous_headings":"","what":"Epidemic Trackers","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"next type data stored dat called Epidemic Tracker. refers summary information population specific time step. information created stored time step; therefore epidemic trackers historical summary statistics. One example Epidemic Trackers num, present model, stores size population time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"working-with-epidemic-trackers-in-modules","dir":"Articles","previous_headings":"Epidemic Trackers","what":"Working With Epidemic Trackers in Modules","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"Inside module, Epidemic Trackers accessed modified functions EpiModel::get_epi EpiModel::set_epi. updated new version aging_module addition epidemic trackers. new module, addition incrementing age node one, also record two values Epidemic Trackers: mean age population change mean age compared previous step (calculated latter simulation complete mutate_epi, fly demonstrate get_epi). extract mean age previous time step using EpiModel::get_epi set second argument - 1. calculations complete, store mean_age age_change dat using EpiModel::set_epi. Similarly EpiModel::set_attr, dat modified directly need assigned back . Also, value store must scalar. Trying access Epidemic Trackers exist results error.","code":"aging_track_module <- function(dat, at) {    # Attributes   age <- EpiModel::get_attr(dat, \"age\")    # Aging process   new_age <- age + 1    # Calculate summary statistics   mean_age <- mean(new_age)   prev_mean_age <- EpiModel::get_epi(dat, at - 1, \"mean_age\")   age_change <- mean_age - prev_mean_age    # Update nodal attributes   dat <- EpiModel::set_attr(dat, \"age\", new_age)    # Update epidemic trackers   dat <- set_epi(dat, \"mean_age\", at, mean_age)   dat <- set_epi(dat, \"age_change\", at, age_change)    return(dat) }"},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"accessing-epidemic-trackers-after-a-simulation","dir":"Articles","previous_headings":"Epidemic Trackers","what":"Accessing Epidemic Trackers After a Simulation","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"Epidemic Trackers usually main quantities interest simulation completed. access simply calling .data.frame netsim object using plot summary functions within EpiModel. Note also can perform derived summary statistic calculations netsim call complete EpiModel::mutate_epi.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"custom-epidemic-trackers","dir":"Articles","previous_headings":"Epidemic Trackers","what":"Custom Epidemic Trackers","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"can useful create small Epidemic Trackers outside modules use need . EpiModel automatically run custom trackers passed .tracker.list argument control.net.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"writing-tracker-functions","dir":"Articles","previous_headings":"Epidemic Trackers > Custom Epidemic Trackers","what":"Writing Tracker Functions","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"call tracker function function takes dat arguments outputs scalar value. Every tracker function run EpiModel::netsim time step. epi_s_num function defined tracker function. calculates time step number susceptible nodes network. next example tracker function calculates proportion population infected time step. Let’s look element : recommend write tracker functions using format: Define needed_attributes variable containing vector attribute names: example: “status” “active”. Use EpiModel::get_attr_list(dat, needed_attributes) work environment objects need. helps clarify tracker simplify debugging. save result call output. last statement expression stored output. must scalar. return(output), calculated inside construct.","code":"epi_s_num <- function(dat) {   needed_attributes <- c(\"status\")   output <- with(get_attr_list(dat, needed_attributes), {     sum(status == \"s\", na.rm = TRUE)   })   return(output) } epi_prop_infected <- function(dat) {   # we need two attributes for our calculation: `status` and `active`   needed_attributes <- c(\"status\", \"active\")   # we use `with` to simplify code   output <- with(EpiModel::get_attr_list(dat, needed_attributes), {     pop <- active == 1    # we only look at active nodes     cond <- status == \"i\" # which are infected      # how many are `infected` among the `active`     sum(cond & pop, na.rm = TRUE) / sum(pop, na.rm = TRUE)   })   return(output) }"},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"using-custom-tracker-functions","dir":"Articles","previous_headings":"Epidemic Trackers > Custom Epidemic Trackers","what":"Using custom tracker functions","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"functionality enabled passing tracker functions named list control.net: .tracker.list. Let’s make simple SI epidemic model added trackers: function must named .tracker.list list. name given used identify tracker function epi list name corresponding column data.frame produced .data.frame(sim) sim netsim object. Note: .trackers list, put epi_prop_infected epi_s_num without parentheses end. store function result calling function. Important: trackers Always run end simulation step. value outputted reflect state simulation modules performed tasks.","code":"# Create the `tracker.list` list some.trackers <- list(   prop_infected = epi_prop_infected,   s_num         = epi_s_num )  control <- EpiModel::control.net(   type = \"SI\",   nsims = 1,   nsteps = 50,   verbose = FALSE,   .tracker.list = some.trackers )  param <- EpiModel::param.net(   inf.prob = 0.3,   act.rate = 0.1 )  nw <- network_initialize(n = 50) nw <- set_vertex_attribute(nw, \"race\", rbinom(50, 1, 0.5)) est <- EpiModel::netest(   nw,   formation = ~edges,   target.stats = 25,   coef.diss = dissolution_coefs(~offset(edges), 10, 0),   verbose = FALSE ) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  init <- EpiModel::init.net(i.num = 10) sim <- EpiModel::netsim(est, param, init, control)  d <- as.data.frame(sim)  knitr::kable(tail(d, n = 15))"},{"path":"http://epimodel.github.io/EpiModel/articles/attributes-and-summary-statistics.html","id":"record-any-object-advanced-debugging","dir":"Articles","previous_headings":"","what":"Record Any Object (Advanced Debugging)","title":"Working with Custom Attributes and Summary Statistics in EpiModel","text":"working complex research-level models, sometimes want inspect state object without stopping simulation. function EpiModel::record_raw_object allows user save object simulation. module, look age population mean age 50, create data.frame called obj containing age status attribute vectors store Raw Record. Raw Record can accessed final netsim object debugging purposes.","code":"introspect_module <- function(dat, at) {   # Attributes   age <- get_attr(dat, \"age\")    if (mean(age, na.rm = TRUE) > 50) {     obj <- data.frame(         age = age,         status = EpiModel::get_attr(dat, \"status\")     )     dat <- EpiModel::record_raw_object(dat, at, \"old pop\", obj)   }    return(dat) } sim <- netsim(est, param, init, control) sim[[\"raw.records\"]][[1]]"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Working with Model Parameters in EpiModel","text":"model, parameters input variables used define aspects system behavior. basic built-SIS (Susceptible-Infected-Susceptible) model, parameters act rate, infection probability recovery rate. simple models, parameters single fixed values change course simulation. complex models, may want flexibility model parameterization. Therefore, vignette, demonstrate implement: Scenarios: sets parameters changed simulation, either start specific timestep. Random parameters: distributions possible values rather single fixed value. Time-varying parameters control settings: scenarios functionality provides straightforward way implement time-varying parameters, direct functionality demonstrated advanced users seeking implement time-varying parameters control settings.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"scenarios","dir":"Articles","previous_headings":"","what":"Scenarios","title":"Working with Model Parameters in EpiModel","text":"Scenarios can defined single set parameters used particular model run. example use simple SIS model demonstrate scenarios work. First, set model normally.","code":"set.seed(10)  nw <- network_initialize(n = 200) est <- netest(nw,   formation = ~edges, target.stats = 60,   coef.diss = dissolution_coefs(~offset(edges), 10, 0),   verbose = FALSE ) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  param <- param.net(inf.prob = 0.9, rec.rate = 0.01, act.rate = 2) init <- init.net(i.num = 10) control <- control.net(type = \"SIS\", nsims = 1, nsteps = 250, verbose = FALSE)"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"scenario-definitions","dir":"Articles","previous_headings":"Scenarios","what":"Scenario Definitions","title":"Working with Model Parameters in EpiModel","text":"define scenarios, make use EpiModel::create_scenario_list function. takes specially formatted data.frame input outputs list scenarios usable EpiModel. use tibble::tribble function create data.frame . data frame construction methods work long resulting data.frame properly formatted. data.frame scenarios must formatted follows. First, two required columns: - .scenario.id: identifier scenario - .: changes apply simulation number parameters columns. must start letter contain letters, numbers .. Underscores _ accepted. cell left empty (NA), EpiModel assume want set parameter NA. NA mean value remain unmodified. data.frame , three rows share .scenario.id. means EpiModel consider single scenario multiple events occur simulation. go scenarios.df list usable scenarios run: now named list scenarios. run scenarios, combine results plot number susceptible infected time show happened. , loop 3 scenarios use EpiModel::use_scenario function create new sc.param object used simulation parameters. see “multiple_changes” scenarios, received two messages, time step 100 200, telling us parameters changed simulation. scenarios silent changes occurred simulation began. Now can merge plot results:  can see initial_change scenario, epidemic speed slower base “scenario” reduced infection probability former. “multiple_changes” scenario shows different expected results: - first epidemic slow infection probability low recovery rate high. - step 100, apply values “base” scenario. Thus epidemic trajectory increases. - step 200, reduce infection probability increase recovery rate, results quick epidemic extinction. scenarios simplified demonstrate scenario system. research paper implementing idea multiple time-varying parameter changes published Journal Infectious Disease. code can found .","code":"suppressMessages(library(dplyr))  scenarios.df <- tribble(   ~.scenario.id, ~.at, ~inf.prob, ~rec.rate,   \"base\", 0, 0.9, 0.01,   \"initial_change\", 0, 0.2, 0.01,   \"multiple_changes\", 0, 0.1, 0.04,   \"multiple_changes\", 100, 0.9, 0.01,   \"multiple_changes\", 200, 0.1, 0.1 )  knitr::kable(scenarios.df) scenarios.list <- create_scenario_list(scenarios.df) str(scenarios.list, max.level = 2) #> List of 3 #>  $ base            :List of 2 #>   ..$ id                 : chr \"base\" #>   ..$ .param.updater.list:List of 1 #>  $ initial_change  :List of 2 #>   ..$ id                 : chr \"initial_change\" #>   ..$ .param.updater.list:List of 1 #>  $ multiple_changes:List of 2 #>   ..$ id                 : chr \"multiple_changes\" #>   ..$ .param.updater.list:List of 3 # creation of a list that will hold the result of the simulations d_list <- vector(mode = \"list\", length = length(scenarios.list)) names(d_list) <- names(scenarios.list)  for (scenario in scenarios.list) {   # the id of the scenario is stored into `scenario$id`   print(scenario$id)    sc.param <- use_scenario(param, scenario)   sim <- netsim(est, sc.param, init, control)   # conversion to `data.frame` and storage of the scenario name in it   d_sim <- as.data.frame(sim)   d_sim[[\"scenario\"]] <- scenario$id   d_list[[scenario$id]] <- d_sim } #> [1] \"base\" #> [1] \"initial_change\" #> [1] \"multiple_changes\" #>  #>  A MESSAGE occured in module 'epimodel.internal' at step 100 #>  #>  #> At timestep = 100 the following parameters were modified: #> 'inf.prob', 'rec.rate' #>  #>  A MESSAGE occured in module 'epimodel.internal' at step 200 #>  #>  #> At timestep = 200 the following parameters were modified: #> 'inf.prob', 'rec.rate' plot(d_list$base$time, d_list$base$i.num,      type = \"l\", col = 1, lwd = 2, ylim = c(0, 250)) lines(d_list$initial_change$time, d_list$initial_change$i.num,       type = \"l\", col = 2, lwd = 2) lines(d_list$multiple_changes$time, d_list$multiple_changes$i.num,       type = \"l\", col = 3, lwd = 2) abline(v = c(100, 200), lty = 2) legend(\"topleft\", legend = names(d_list),        col = 1:3, lwd = 2, cex = 0.9, bty = \"n\")"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"scenarios-with-parameter-vectors","dir":"Articles","previous_headings":"Scenarios","what":"Scenarios with Parameter Vectors","title":"Working with Model Parameters in EpiModel","text":"full-scale modeling projects, often vectors parameters. example, may parameter, hiv.test.rate, vector length 3 containing weekly probabilities HIV screening Black, Hispanic White persons, respectively. parameters can still use scenarios approach described . case, must define column element modified parameter end numerical value order lies vector: example, \\_1, \\_2 \\_3 B, H, W rates. looks like: One thing note must pass values sub-parameter scenarios.df. example, even value HIV screening rate Hispanic persons (second value vector) changing across scenarios, still necessary define hiv.test.rate_2. working lot parameters, recommended store scenarios.df CSV Excel file parameters can easily shared edited.","code":"scenarios.df <- tribble(   ~.scenario.id, ~.at, ~hiv.test.rate_1, ~hiv.test.rate_2, ~hiv.test.rate_3,   \"base\", 0, 0.001, 0.001, 0.001,   \"initial_change\", 0, 0.002, 0.001, 0.002,   \"multiple_changes\", 0, 0.002, 0.001, 0.002,   \"multiple_changes\", 100, 0.004, 0.001, 0.004,   \"multiple_changes\", 200, 0.008, 0.001, 0.008 ) knitr::kable(scenarios.df)"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"parameters-input-via-table","dir":"Articles","previous_headings":"","what":"Parameters Input Via Table","title":"Working with Model Parameters in EpiModel","text":"Similar scenarios, param.net function creates param object netsim allows inputting model parameters data.frame table. allows user pass many parameters , work spreadsheet track update parameters use EpiModel. data.frame parameters must specifically formatted first 3 columns must : 1. ‘param’: name parameter. non-scalar parameter (vector length > 1), end parameter name position vector (e.g., \"p_1\", \"p_2\", …). 2. ‘value’: value parameter (value parameter Nth position non-scalar). 3. ‘type’: character string containing either \"numeric\", \"logical\", \"character\" define parameter object class. addition 3 columns, data.frame can contain number columns, details source columns document parameter meta-data. However, extra columns used EpiModel. example, inputting parameters data.frame via tribble. practice, parameters may stored Excel file CSV file imported data.frame using usual read functions. use table parameters param.net, pass table parameters via data.frame.params argument param.net. Note parameters may also combined named parameters outside table, maximum flexibility. example, also pass two extra parameters, .param act.rate. Note param object printed, parameters processed expected.","code":"df_params <- tribble(   ~param, ~value, ~type,   \"hiv.test.rate_1\",  \"0.003\",        \"numeric\",   \"hiv.test.rate_2\",  \"0.102\",        \"numeric\",   \"hiv.test.rate_3\",  \"0.492\",        \"numeric\",   \"prep.require.lnt\", \"TRUE\",         \"logical\",   \"group_1\",          \"first\",        \"character\",   \"group_2\",          \"second\",       \"character\" ) knitr::kable(df_params) param <- param.net(data.frame.params = df_params,                    other.param = c(5, 10), act.rate = 1) param #> Fixed Parameters #> --------------------------- #> hiv.test.rate = 0.003 0.102 0.492 #> prep.require.lnt = TRUE #> group = first second #> act.rate = 1 #> other.param = 5 10"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"random-parameters","dir":"Articles","previous_headings":"","what":"Random Parameters","title":"Working with Model Parameters in EpiModel","text":"demonstrated work fixed time-varying parameters . One may also interested working distributions parameters may follow parametric non-parametric form. example, may want sample range values probability infection given contact simulation model, instead using single value across simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"the-model","dir":"Articles","previous_headings":"Random Parameters","what":"The Model","title":"Working with Model Parameters in EpiModel","text":"EpiModel now includes functionality input distributions parameters network models. demonstrate simple SI model. parameter list, define four parameters: inf.prob, remain single fixed value, also act.rate, dummy.param, dummy.strat.param, fixed defined random. dummy.strat.param parameter two elements; vector approach may used, example, stratify parameter subpopulation (e.g., race-stratified HIV screening rate example ). last line prints summary model object. can see value parameters “Fixed Parameters” section. Note additional groups parameter defined automatically EpiModel part “SI” model definition.","code":"nw <- network_initialize(n = 50)  est <- netest(   nw, formation = ~edges,   target.stats = 25,   coef.diss = dissolution_coefs(~offset(edges), 10, 0),   verbose = FALSE ) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  param <- param.net(   inf.prob = 0.3,   act.rate = 0.5,   dummy.param = 4,   dummy.strat.param = c(0, 1) )  init <- init.net(i.num = 10) control <- control.net(type = \"SI\", nsims = 1, nsteps = 5, verbose = FALSE) mod <- netsim(est, param, init, control) mod #> EpiModel Simulation #> ======================= #> Model class: netsim #>  #> Simulation Summary #> ----------------------- #> Model type: SI #> No. simulations: 1 #> No. time steps: 5 #> No. NW groups: 1 #>  #> Fixed Parameters #> --------------------------- #> inf.prob = 0.3 #> act.rate = 0.5 #> dummy.param = 4 #> dummy.strat.param = 0 1 #> groups = 1 #>  #> Model Output #> ----------------------- #> Variables: s.num i.num num si.flow #> Networks: sim1 #> Transmissions: sim1 #>  #> Formation Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges     25     16.8    -32.8  1.114  -7.364            NA          2.49 #>  #>  #> Duration Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges     10    8.697  -13.032   0.27  -4.819            NA         0.605 #>  #> Dissolution Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges    0.1    0.065  -34.615  0.022  -1.608            NA         0.048"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"adding-random-parameters","dir":"Articles","previous_headings":"Random Parameters","what":"Adding Random Parameters","title":"Working with Model Parameters in EpiModel","text":"allow parameters drawn distribution random values, use random.params argument param.net. two ways defining parameters random, distribution values random parameters draw randomly draw .","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"generator-functions","dir":"Articles","previous_headings":"Random Parameters > Adding Random Parameters","what":"Generator Functions","title":"Working with Model Parameters in EpiModel","text":"first option define generator function parameter want declare random. kept inf.prob parameter fixed 0.3, defined list object called .randoms containing 3 elements: act.rate uses param_random function factory defined EpiModel (see ?EpiModel::param_random). case, simulation sample one three defined values vector equal probability. dummy.param function argument returns random value beta distribution. dummy.strat.param function argument returns 2 values sampled normal distributions, different means standard deviations. element named parameter fill MUST function taking argument outputting vector right size parameter: size 1 act.rate dummy.param; size 2 dummy.strat.param. Note print parameter list running model, includes random parameter definitions functions, sampled values yet realized. rest model run , although increase simulation count three demonstrate parameter stochasticity. running 3 simulations can see inf.prob still displayed “Fixed Parameters” section. three parameters displayed “Random Parameters” section: act.rate dummy.param now 3 values associated , one per simulation. dummy.strat.param <list> value simulation vector size 2. easily inspect parameter values, can use get_param_set function: parameters can merged epidemic data, easy analysis relationship parameters outputs:","code":"my.randoms <- list(   act.rate = param_random(c(0.25, 0.5, 0.75)),   dummy.param = function() rbeta(1, 1, 2),   dummy.strat.param = function() {     c(rnorm(1, 0.05, 0.01),       rnorm(1, 0.15, 0.03))   } )  param <- param.net(   inf.prob = 0.3,   random.params = my.randoms )  param #> Fixed Parameters #> --------------------------- #> inf.prob = 0.3 #>  #> Random Parameters #> (Not drawn yet) #> --------------------------- #> act.rate = <function> #> dummy.param = <function> #> dummy.strat.param = <function> control <- control.net(type = \"SI\", nsims = 3, nsteps = 5, verbose = FALSE) mod <- netsim(est, param, init, control)  mod #> EpiModel Simulation #> ======================= #> Model class: netsim #>  #> Simulation Summary #> ----------------------- #> Model type: SI #> No. simulations: 3 #> No. time steps: 5 #> No. NW groups: 1 #>  #> Fixed Parameters #> --------------------------- #> inf.prob = 0.3 #> groups = 1 #>  #> Random Parameters #> --------------------------- #> act.rate = 0.5 0.75 0.25 #> dummy.param = 0.5293276 0.2734432 0.11582 #> dummy.strat.param = <list> #>  #> Model Output #> ----------------------- #> Variables: s.num i.num num si.flow #> Networks: sim1 ... sim3 #> Transmissions: sim1 ... sim3 #>  #> Formation Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges     25   21.667  -13.333  1.022  -3.262          4.46         3.958 #>  #>  #> Duration Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges     10    8.977  -10.226  0.387  -2.642         1.593         1.499 #>  #> Dissolution Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges    0.1    0.114   13.774  0.015   0.938         0.029         0.057 all.params <- get_param_set(mod) all.params #>   sim inf.prob vital groups act.rate dummy.param dummy.strat.param_1 #> 1   1      0.3 FALSE      1     0.50   0.5293276          0.05392462 #> 2   2      0.3 FALSE      1     0.75   0.2734432          0.04759042 #> 3   3      0.3 FALSE      1     0.25   0.1158200          0.05619374 #>   dummy.strat.param_2 #> 1           0.1511654 #> 2           0.1293028 #> 3           0.1918158 epi <- as.data.frame(mod) left_join(epi, all.params) #> Joining with `by = join_by(sim)` #>    sim time s.num i.num num si.flow inf.prob vital groups act.rate dummy.param #> 1    1    1    40    10  50      NA      0.3 FALSE      1     0.50   0.5293276 #> 2    1    2    40    10  50       0      0.3 FALSE      1     0.50   0.5293276 #> 3    1    3    36    14  50       4      0.3 FALSE      1     0.50   0.5293276 #> 4    1    4    34    16  50       2      0.3 FALSE      1     0.50   0.5293276 #> 5    1    5    34    16  50       0      0.3 FALSE      1     0.50   0.5293276 #> 6    2    1    40    10  50      NA      0.3 FALSE      1     0.75   0.2734432 #> 7    2    2    39    11  50       1      0.3 FALSE      1     0.75   0.2734432 #> 8    2    3    38    12  50       1      0.3 FALSE      1     0.75   0.2734432 #> 9    2    4    36    14  50       2      0.3 FALSE      1     0.75   0.2734432 #> 10   2    5    36    14  50       0      0.3 FALSE      1     0.75   0.2734432 #> 11   3    1    40    10  50      NA      0.3 FALSE      1     0.25   0.1158200 #> 12   3    2    40    10  50       0      0.3 FALSE      1     0.25   0.1158200 #> 13   3    3    40    10  50       0      0.3 FALSE      1     0.25   0.1158200 #> 14   3    4    40    10  50       0      0.3 FALSE      1     0.25   0.1158200 #> 15   3    5    39    11  50       1      0.3 FALSE      1     0.25   0.1158200 #>    dummy.strat.param_1 dummy.strat.param_2 #> 1           0.05392462           0.1511654 #> 2           0.05392462           0.1511654 #> 3           0.05392462           0.1511654 #> 4           0.05392462           0.1511654 #> 5           0.05392462           0.1511654 #> 6           0.04759042           0.1293028 #> 7           0.04759042           0.1293028 #> 8           0.04759042           0.1293028 #> 9           0.04759042           0.1293028 #> 10          0.04759042           0.1293028 #> 11          0.05619374           0.1918158 #> 12          0.05619374           0.1918158 #> 13          0.05619374           0.1918158 #> 14          0.05619374           0.1918158 #> 15          0.05619374           0.1918158"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"parameter-sets","dir":"Articles","previous_headings":"Random Parameters > Adding Random Parameters","what":"Parameter Sets","title":"Working with Model Parameters in EpiModel","text":"drawback generator function approach produce correlated parameter sets. instance, may want dummy.param dummy.strat.param related one another within single simulation. might also use external method generating parameter sets, Latin hypercube sampling multiple parameters. , need pre-define data.frame parameter values. example, five parameter sets: now data.frame 5 rows 3 columns. row contains set parameters values used together single simulation model. way keep relationship value. first column data.frame named dummy.param, similar name parameter. dummy.start.param need two columns parameter contains two values. achieve , name two columns dummy.start.param_1 dummy.strat.param_2. value underscore informs EpiModel combine values vector (note uses syntax stratified parameters within model scenarios described ). turn means underscore symbol allowed proper parameter names. set rest parameters. related.param saved .randoms list special reserved name param.random.set. inf.prob parameter remains fixed, act.rate parameter remains random independent sample, now set two remaining parameters passed correlated parameters param.random_set. output similar saw generator functions defined . See correlated parameter sets sampled together data frame parameters.","code":"n <- 5  related.param <- data.frame(   dummy.param = rbeta(n, 1, 2) )  related.param$dummy.strat.param_1 <- related.param$dummy.param + rnorm(n) related.param$dummy.strat.param_2 <- related.param$dummy.param * 2 + rnorm(n)  related.param #>   dummy.param dummy.strat.param_1 dummy.strat.param_2 #> 1  0.40042189           1.6831189           1.0748786 #> 2  0.73021770           2.3839536           1.3420617 #> 3  0.05306671           0.6405278          -0.7281755 #> 4  0.90490846          -1.3179645          -0.4500947 #> 5  0.48049243           0.7020599           2.3109663 my.randoms <- list(   act.rate = param_random(c(0.25, 0.5, 0.75)),   param.random.set = related.param  )  param <- param.net(   inf.prob = 0.3,   random.params = my.randoms )  param #> Fixed Parameters #> --------------------------- #> inf.prob = 0.3 #>  #> Random Parameters #> (Not drawn yet) #> --------------------------- #> act.rate = <function> #> param.random.set = <data.frame> ( dimensions: 5 3 ) control <- control.net(type = \"SI\", nsims = 3, nsteps = 5, verbose = FALSE) mod <- netsim(est, param, init, control)  mod #> EpiModel Simulation #> ======================= #> Model class: netsim #>  #> Simulation Summary #> ----------------------- #> Model type: SI #> No. simulations: 3 #> No. time steps: 5 #> No. NW groups: 1 #>  #> Fixed Parameters #> --------------------------- #> inf.prob = 0.3 #> groups = 1 #>  #> Random Parameters #> --------------------------- #> dummy.param = 0.9049085 0.4804924 0.4004219 #> dummy.strat.param = <list> #> act.rate = 0.75 0.75 0.75 #>  #> Model Output #> ----------------------- #> Variables: s.num i.num num si.flow #> Networks: sim1 ... sim3 #> Transmissions: sim1 ... sim3 #>  #> Formation Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges     25   25.933    3.733  0.502   1.859         0.757         1.944 #>  #>  #> Duration Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges     10    9.584   -4.158  0.183  -2.275          0.68         0.708 #>  #> Dissolution Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges    0.1    0.114    14.49  0.011    1.27         0.022         0.044 related.param #>   dummy.param dummy.strat.param_1 dummy.strat.param_2 #> 1  0.40042189           1.6831189           1.0748786 #> 2  0.73021770           2.3839536           1.3420617 #> 3  0.05306671           0.6405278          -0.7281755 #> 4  0.90490846          -1.3179645          -0.4500947 #> 5  0.48049243           0.7020599           2.3109663 get_param_set(mod) #>   sim inf.prob vital groups dummy.param dummy.strat.param_1 dummy.strat.param_2 #> 1   1      0.3 FALSE      1   0.9049085          -1.3179645          -0.4500947 #> 2   2      0.3 FALSE      1   0.4804924           0.7020599           2.3109663 #> 3   3      0.3 FALSE      1   0.4004219           1.6831189           1.0748786 #>   act.rate #> 1     0.75 #> 2     0.75 #> 3     0.75"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"time-varying-parameters-and-control-settings-advanced","dir":"Articles","previous_headings":"","what":"Time-Varying Parameters and Control Settings (Advanced)","title":"Working with Model Parameters in EpiModel","text":"Within EpiModel, scenarios described uses updater module implement parameter changes given time step. section describes mechanisms function use directly scenarios approach flexible enough, also like time-varying control settings.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"parameter-updaters","dir":"Articles","previous_headings":"Time-Varying Parameters and Control Settings (Advanced)","what":"Parameter Updaters","title":"Working with Model Parameters in EpiModel","text":"define parameters change simulation, need define updater lists. updater list two named elements: , time step change take place, param named list parameters update. example: defines updater change value inf.prob parameter 0.3 value act.rate parameter 0.5. change happen time step 10. want, multiple parameter changes, can write list updaters: example, define two updaters, one occurs time step 100 one time step 125. demonstrated , values inf.prob act.rate change values 0.1 established param.netat beginning time series.","code":"list(   at = 10,   param = list(     inf.prob = 0.3,     act.rate = 0.5   ) ) #> $at #> [1] 10 #>  #> $param #> $param$inf.prob #> [1] 0.3 #>  #> $param$act.rate #> [1] 0.5 # Create a `list.of.updaters` list.of.updaters <- list(   # this is one updater   list(     at = 100,     param = list(       inf.prob = 0.3,       act.rate = 0.3     )   ),   # this is another updater   list(     at = 125,     param = list(       inf.prob = 0.01     )   ) )"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"incorporating-updaters","dir":"Articles","previous_headings":"Time-Varying Parameters and Control Settings (Advanced)","what":"Incorporating Updaters","title":"Working with Model Parameters in EpiModel","text":"set complete example closed population SI model using parameters updaters defined . Note parameter updaters get passed param.net special .param.updater.list argument. Next, run model simple network structure: model plot demonstrates inflection points epidemic trajectory two parameter change points defined .","code":"param <- param.net(  inf.prob = 0.1,  act.rate = 0.1,  .param.updater.list = list.of.updaters ) init <- init.net(i.num = 10) control <- control.net(  type = \"SI\",  nsims = 1,  nsteps = 200,  verbose = FALSE ) nw <- network_initialize(n = 100) est <- netest(   nw,   formation = ~edges,   target.stats = 50,   coef.diss = dissolution_coefs(~offset(edges), 10, 0),   verbose = FALSE ) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE. mod <- netsim(est, param, init, control) #>  #>  A MESSAGE occured in module 'epimodel.internal' at step 100 #>  #>  #> At timestep = 100 the following parameters were modified: #> 'inf.prob', 'act.rate' #>  #>  A MESSAGE occured in module 'epimodel.internal' at step 125 #>  #>  #> At timestep = 125 the following parameters were modified: #> 'inf.prob' plot(mod, mean.smooth = FALSE) abline(v = c(100, 125), lty = 2, col = \"grey50\")"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"verbosity","dir":"Articles","previous_headings":"Time-Varying Parameters and Control Settings (Advanced) > Incorporating Updaters","what":"Verbosity","title":"Working with Model Parameters in EpiModel","text":"creating parameter updater, one can add optional verbose element list. TRUE, EpiModel output message` describing changes performed occurred.","code":"list(   at = 10,   param = list(     inf.prob = 0.3,     act.rate = 0.5   ),   verbose = TRUE ) #> $at #> [1] 10 #>  #> $param #> $param$inf.prob #> [1] 0.3 #>  #> $param$act.rate #> [1] 0.5 #>  #>  #> $verbose #> [1] TRUE"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"relative-parameter-changes","dir":"Articles","previous_headings":"Time-Varying Parameters and Control Settings (Advanced) > Incorporating Updaters","what":"Relative Parameter Changes","title":"Working with Model Parameters in EpiModel","text":"may useful configure changes respect current value instead fixed new value. possible demonstrated inf.prob. updater set value act.rate 0.5 . , inf.prob define function (function call). case, apply function current value act.rate. consider previous example act.rate set 0.1 param.net, new value obtained adding log odds 2 original value inf.prob: plogis(qlogis(0.1) + log(2)): 0.1818182. Whereas previous value inf.prob 0.10, updated value 0.18.","code":"list(   at = 10,   param = list(     inf.prob = function(x) plogis(qlogis(x) + log(2)),     act.rate = 0.5   ) ) #> $at #> [1] 10 #>  #> $param #> $param$inf.prob #> function (x)  #> plogis(qlogis(x) + log(2)) #>  #> $param$act.rate #> [1] 0.5"},{"path":"http://epimodel.github.io/EpiModel/articles/model-parameters.html","id":"time-varying-control-settings","dir":"Articles","previous_headings":"Time-Varying Parameters and Control Settings (Advanced)","what":"Time-Varying Control Settings","title":"Working with Model Parameters in EpiModel","text":"Similar time-varying parameters, can use time-varying controls. work way. control updater defined list lists. example sets two control updaters, one turns network resimulation timestep 100 another toggling model verbosity step 125. list..updaters gets passed control.net special .control.updater.list argument.","code":"# Create a `list.of.updaters` list.of.updaters <- list(   # this is one updater   list(     at = 100,     control = list(       resimulate.network = FALSE     )   ),   # this is another updater   list(     at = 125,     control = list(       verbose = FALSE     )   ) ) control <- control.net(  type = \"SI\",  nsims = 1,  nsteps = 200,  verbose = TRUE,  .control.updater.list = list.of.updaters )"},{"path":"http://epimodel.github.io/EpiModel/articles/network-objects.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Working with Network Objects in EpiModel","text":"vignette discusses mechanisms usable inside EpiModel network models custom modules. information Extending EpiModel section Network Modeling Epidemics course materials. Inside simulation, networks stored dat$run$nw. Ultimately vignette describe multiple aspects working network objects.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/network-objects.html","id":"cumulative-edgelist","dir":"Articles","previous_headings":"","what":"Cumulative Edgelist","title":"Working with Network Objects in EpiModel","text":"cumulative edgelist refers historical list edges network time step start stopped. list allows query current relationships (contacts, partnerships, etc.) well past ones.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/network-objects.html","id":"using-the-cumulative-edgelist","dir":"Articles","previous_headings":"Cumulative Edgelist","what":"Using the Cumulative Edgelist","title":"Working with Network Objects in EpiModel","text":"creation update cumulative edgelist done EpiModel::update_cumulative_edgelist function. function takes 3 arguments: dat: Main List Object. network: number network create cumulative edgelist (multi-layer network simulations). truncate: number time steps inactive edge removed cumulative edgelist (saves computer memory large-scale simulations). function returns modified version dat needs assigned back. following snippet update cumulative edgelist networks used model remove edges ended 100 steps ago. complete model, code need run end initialization module time-step resimulation networks.","code":"dat <- update_cumulative_edgelist(dat, network, truncate = Inf) for (n_network in seq_along(dat$run$nw)) {   dat <- update_cumulative_edgelist(dat, n_network, truncate = 100) }"},{"path":"http://epimodel.github.io/EpiModel/articles/network-objects.html","id":"accessing-the-cumulative-edgelist","dir":"Articles","previous_headings":"Cumulative Edgelist","what":"Accessing the Cumulative Edgelist","title":"Working with Network Objects in EpiModel","text":"Cumulative edge-list refers nodes Unique Ids. See help(\"unique_id-tools\", package = \"EpiModel\") information.","code":""},{"path":"http://epimodel.github.io/EpiModel/articles/network-objects.html","id":"for-a-specific-network","dir":"Articles","previous_headings":"Cumulative Edgelist > Accessing the Cumulative Edgelist","what":"For a Specific Network","title":"Working with Network Objects in EpiModel","text":"Accessing cumulative edge-list given network done using EpiModel::get_cumulative_edgelist function. returned el_cuml object tibble four columns: head: unique_id first node edge. tail: unique_id second node edge. start: time-step edge created. stop: last time-step edge active. EpiModel::get_cumulative_edgelist always return tibble 4 columns, even cumulative edgelist calculated particular network edges present. cases, tibble rows keep correct column structure. stop column always contain NA edge currently active. edge present anymore, stop column edge contains last step edge active. means edge stop value existed start stop inclusive. makes coherent R treats indexes vector instance (1 length(vector) inclusive).","code":"el_cuml <- get_cumulative_edgelist(dat, network)"},{"path":"http://epimodel.github.io/EpiModel/articles/network-objects.html","id":"for-multiple-networks","dir":"Articles","previous_headings":"Cumulative Edgelist > Accessing the Cumulative Edgelist","what":"For Multiple Networks","title":"Working with Network Objects in EpiModel","text":"often want get cumulative edgelist several networks one. EpiModel::get_cumulative_edgelists_df function provide functionality. networks argument can vector network position NULL. latter case, networks selected. output function similar EpiModel::get_cumulative_edgelist addition network column, indicating edge networks exists .","code":"el_cumls <- get_cumulative_edgelists_df(dat, networks = NULL)"},{"path":"http://epimodel.github.io/EpiModel/articles/network-objects.html","id":"contact-tracing","dir":"Articles","previous_headings":"Cumulative Edgelist","what":"Contact Tracing","title":"Working with Network Objects in EpiModel","text":"typical use cumulative edgelist trace contacts node given number steps. EpiModel::get_partners function simplifies process: call “indexes” nodes whose partners (contacts) want extract. arguments : dat: get_cumulative_edgelists_df. index_posit_ids: list positional Ids indexes interest. networks: get_cumulative_edgelists_df. truncate: similar truncate argument update_cumulative_edgelist argument filter partnerships age. .active.nodes: set TRUE, partnership inactive nodes removed. output similar get_cumulative_edgelists_df first two columns called index partner contains Unique Ids indexes given argument first column partners second one. Note refer indexes interest Positional Ids index partners columns contains Unique Ids can refer nodes longer network.","code":"partner_list <- get_partners(     dat,     index_posit_ids,     networks = NULL,     truncate = Inf,     only.active.nodes = FALSE )"},{"path":"http://epimodel.github.io/EpiModel/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Samuel Jenness. Maintainer, author. Steven M. Goodreau. Author. Martina Morris. Author. Adrien Le Guillou. Author. Chad Klumb. Author. Skye Bender-deMoll. Contributor.","code":""},{"path":"http://epimodel.github.io/EpiModel/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jenness SM, Goodreau SM, Morris M. EpiModel: R Package Mathematical Modeling Infectious Disease Networks. Journal Statistical Software. 2018; 84(8): 1-47. DOI: 10.18637/jss.v084.i08.","code":"@Article{,   title = {{EpiModel}: An {R} Package for Mathematical Modeling of Infectious Disease over Networks},   author = {Samuel M. Jenness and Steven M. Goodreau and Martina Morris},   journal = {Journal of Statistical Software},   year = {2018},   volume = {84},   number = {8},   pages = {1--47},   doi = {10.18637/jss.v084.i08},   keywords = {mathematical model, infectious disease, epidemiology, networks, R}, }"},{"path":"http://epimodel.github.io/EpiModel/index.html","id":"epimodel","dir":"","previous_headings":"","what":"Mathematical Modeling of Infectious Disease Dynamics","title":"Mathematical Modeling of Infectious Disease Dynamics","text":"Tools simulating mathematical models infectious disease dynamics. Epidemic model classes include deterministic compartmental models, stochastic individual-contact models, stochastic network models. Network models use robust statistical methods exponential-family random graph models (ERGMs) Statnet suite software packages R. Standard templates epidemic modeling include SI, SIR, SIS disease types. EpiModel features easy application programming interface (API) extending templates address novel scientific research aims.","code":""},{"path":"http://epimodel.github.io/EpiModel/index.html","id":"lead-authors","dir":"","previous_headings":"","what":"Lead Authors","title":"Mathematical Modeling of Infectious Disease Dynamics","text":"Additional contributors EpiModel listed contributors page.","code":""},{"path":"http://epimodel.github.io/EpiModel/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mathematical Modeling of Infectious Disease Dynamics","text":"current release version can found CRAN installed : install development version, use remotes package:","code":"install.packages(\"EpiModel\", dependencies = TRUE) if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"EpiModel/EpiModel\")"},{"path":"http://epimodel.github.io/EpiModel/index.html","id":"documentation-and-support","dir":"","previous_headings":"","what":"Documentation and Support","title":"Mathematical Modeling of Infectious Disease Dynamics","text":"Website. main website EpiModel, tutorials supporting files, : http://www.epimodel.org/. Methods Paper. good place start learning EpiModel main methods paper published Journal Statistical Software. available : https://doi.org/10.18637/jss.v084.i08. Summer Course. Network Modeling Epidemics annual summer workshop/course teach statistical theory, software tools, applied modeling methods using EpiModel. now part Summer Institute Statistics Modeling Infectious Diseases (SISMID) Emory University. course materials open-source updated annually around time course. Getting Help. Users encouraged use Github issues repository place ask questions (technical coding questions conceptual modeling questions), report bugs, request new features & functionality. Broader modeling questions can posted Discussions board .","code":""},{"path":"http://epimodel.github.io/EpiModel/index.html","id":"the-epimodel-gallery","dir":"","previous_headings":"","what":"The EpiModel Gallery","title":"Mathematical Modeling of Infectious Disease Dynamics","text":"EpiModel Gallery contains templates extensions EpiModel, now focused network-based mathematical modeling class. continuing add new examples gallery, encourage users either file requests new examples else contribute directly.","code":""},{"path":"http://epimodel.github.io/EpiModel/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Mathematical Modeling of Infectious Disease Dynamics","text":"using EpiModel teaching research, please include citation main methods paper: Jenness SM, Goodreau SM Morris M. EpiModel: R Package Mathematical Modeling Infectious Disease Networks. Journal Statistical Software. 2018; 84(8): 1-47. doi: 10.18637/jss.v084.i08 Please also send us email  used EpiModel work can add citation .","code":""},{"path":"http://epimodel.github.io/EpiModel/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Mathematical Modeling of Infectious Disease Dynamics","text":"primary support development software tools statistical methods two National Institutes Health (NIH) grants. applied research projects using EpiModel received funding NIH Centers Disease Control Prevention (CDC). team also receives institutional support center-level NIH grants. full list funding support can found .","code":""},{"path":"http://epimodel.github.io/EpiModel/index.html","id":"epimodel-in-the-scientific-literature","dir":"","previous_headings":"","what":"EpiModel in the Scientific Literature","title":"Mathematical Modeling of Infectious Disease Dynamics","text":"EpiModel extension packages used following scientific journal articles. list articles can accessed wiki page Zotero. (aware others, send us email samuel.m.jenness@emory.edu included list.)","code":""},{"path":"http://epimodel.github.io/EpiModel/index.html","id":"copyright","dir":"","previous_headings":"","what":"Copyright","title":"Mathematical Modeling of Infectious Disease Dynamics","text":"materials distributed GPL-3 license, following copyright attribution requirements listed LICENSE document .","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/EpiModel-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mathematical Modeling of Infectious Disease Dynamics — EpiModel-package","text":"EpiModel software package provides tools building, solving, visualizing mathematical models infectious disease dynamics. tools allow users simulate epidemic models multiple frameworks pedagogical purposes (\"base models\") novel research purposes (\"extension models\").","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/EpiModel-package.html","id":"model-classes-and-infectious-disease-types","dir":"Reference","previous_headings":"","what":"Model Classes and Infectious Disease Types","title":"Mathematical Modeling of Infectious Disease Dynamics — EpiModel-package","text":"EpiModel provides functionality three classes epidemic models: Deterministic Compartmental Models: continuous-time models solved using ordinary differential equations. EpiModel allows easy specification sensitivity analyses compare multiple scenarios model across different parameter values. Stochastic Individual Contact Models: novel class individual-based, microsimulation models developed add random variation components transmission system, infection recovery vital dynamics (arrivals departures). Stochastic Network Models: underlying statistical framework temporal exponential random graph models (ERGMs) recently developed Statnet suite software R, network models epidemics simulate edge (e.g., partnership) formation dissolution stochastically according specified statistical model, disease spread across network. EpiModel supports three infectious disease types run across three classes. Susceptible-Infectious (SI): two-state disease life-long infection without recovery. HIV/AIDS one example, although case common model infection stages separate compartments. Susceptible-Infectious-Recovered (SIR): three-stage disease one life-long recovery immunity infection. Measles one example, modern models disease also require consideration vaccination patterns population. Susceptible-Infectious-Susceptible (SIS): two-stage disease one may transition back forth susceptible infected states throughout life. Examples include bacterial sexually transmitted diseases like gonorrhea. basic disease types may extended arbitrarily complex way simulate specific diseases research questions.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/EpiModel-package.html","id":"model-parameterization-and-simulation","dir":"Reference","previous_headings":"","what":"Model Parameterization and Simulation","title":"Mathematical Modeling of Infectious Disease Dynamics — EpiModel-package","text":"EpiModel uses three model setup functions model class input necessary parameters, initial conditions, control settings: param.dcm, param.icm, param.net used input epidemic parameters three model classes. Parameters include rate contacts acts actors, probability transmission per contact, recovery demographic rates models include transitions. init.dcm, init.icm, init.net used input initial conditions class. main conditions limited numbers , applicable, specific agents population infected recovered simulation outset. control.dcm, control.icm, control.net used specify remaining control settings simulation. core controls base model types include disease type, number time steps, number simulations. Controls also used input new model functions (DCMs) new model modules (ICMs network models) allow user simulate fully original epidemic models EpiModel. See documentation specific control functions help pages. models parameterized, functions simulating epidemic models : dcm deterministic compartmental models. icm individual contact models. Network models simulated three-step process: netest estimates statistical model network structure (.e., partnerships form dissolve time given parameterization processes). function wrapper around ergm tergm functions ergm tergm packages. current statistical framework model simulation called \"egocentric inference\": target statistics summarizing formation dissolution processes collected egocentric sample population. netdx runs diagnostics dynamic model fit simulating base network time ensure model fits targets formation dissolution. netsim simulates stochastic network epidemic models, given network model fit netest. function requires model fit object along parameters, initial conditions, control settings defined .","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/EpiModel-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mathematical Modeling of Infectious Disease Dynamics — EpiModel-package","text":"EpiModel website https://www.epimodel.org/, source code https://github.com/EpiModel/EpiModel. Bug reports feature requests welcome. primary methods paper EpiModel published Journal Statistical Software. use EpiModel research teaching purposes, please cite reference: Jenness SM, Goodreau SM, Morris M. EpiModel: R Package Mathematical Modeling Infectious Disease Networks. Journal Statistical Software. 2018; 84(8): 1-47. doi:10.18637/jss.v084.i08 . also developed two extension packages modeling specific disease dynamics. HIV bacterial sexually transmitted infections, developed EpiModelHIV, available Github https://github.com/EpiModel/EpiModelHIV. COVID-19, developed EpiModelCOVID, available https://github.com/EpiModel/EpiModelCOVID.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/EpiModel-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mathematical Modeling of Infectious Disease Dynamics — EpiModel-package","text":"Maintainer: Samuel Jenness samuel.m.jenness@emory.edu Authors: Steven M. Goodreau goodreau@uw.edu Martina Morris morrism@uw.edu Adrien Le Guillou contact@aleguillou.org Chad Klumb cklumb@gmail.com contributors: Skye Bender-deMoll skyebend@uw.edu [contributor]","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.absdiffby.html","id":null,"dir":"Reference","previous_headings":"","what":"Definition for absdiffby ERGM Term — InitErgmTerm.absdiffby","title":"Definition for absdiffby ERGM Term — InitErgmTerm.absdiffby","text":"function defines initializes absdiffby ERGM term allows representing homophily respect non-binary attribute (e.g., age) differentially binary attribute (e.g., sex).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.absdiffby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for absdiffby ERGM Term — InitErgmTerm.absdiffby","text":"","code":"InitErgmTerm.absdiffby(nw, arglist, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.absdiffby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for absdiffby ERGM Term — InitErgmTerm.absdiffby","text":"nw object class network. arglist list arguments specified ergm.userterms package framework. ... Additional data passed function specified ergm.userterms package framework.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.absdiffby.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Definition for absdiffby ERGM Term — InitErgmTerm.absdiffby","text":"ERGM user term written allow age-based homophily partnership formation asymmetric sex. absdiff component targets age-based homophily component allows structured binary attribute \"male\", order enforce offset average difference. allows, example, average age difference partnerships, males (average) older females.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.absdiffnodemix.html","id":null,"dir":"Reference","previous_headings":"","what":"Definition for absdiffnodemix ERGM Term — InitErgmTerm.absdiffnodemix","title":"Definition for absdiffnodemix ERGM Term — InitErgmTerm.absdiffnodemix","text":"function defines initializes absdiffnodemix ERGM term allows targeting homophily based non-binary attribute (e.g., age) combinations binary attribute (e.g., race).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.absdiffnodemix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for absdiffnodemix ERGM Term — InitErgmTerm.absdiffnodemix","text":"","code":"InitErgmTerm.absdiffnodemix(nw, arglist, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.absdiffnodemix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for absdiffnodemix ERGM Term — InitErgmTerm.absdiffnodemix","text":"nw object class network. arglist list arguments specified ergm.userterms package framework. ... Additional data passed function specified ergm.userterms package framework.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.absdiffnodemix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Definition for absdiffnodemix ERGM Term — InitErgmTerm.absdiffnodemix","text":"ERGM user term written allow age-based homophily partnership formation heterogeneous race. absdiff component targets distribution age mixing continuous variable, nodemix component differentiates black-black, black-white, white-white couples.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.fuzzynodematch.html","id":null,"dir":"Reference","previous_headings":"","what":"Definition for fuzzynodematch ERGM Term — InitErgmTerm.fuzzynodematch","title":"Definition for fuzzynodematch ERGM Term — InitErgmTerm.fuzzynodematch","text":"function defines initializes fuzzynodematch ERGM term allows generalized homophily.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.fuzzynodematch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Definition for fuzzynodematch ERGM Term — InitErgmTerm.fuzzynodematch","text":"","code":"InitErgmTerm.fuzzynodematch(nw, arglist, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.fuzzynodematch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Definition for fuzzynodematch ERGM Term — InitErgmTerm.fuzzynodematch","text":"nw object class network. arglist list arguments specified ergm.userterms package framework. ... Additional data passed function specified ergm.userterms package framework.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/InitErgmTerm.fuzzynodematch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Definition for fuzzynodematch ERGM Term — InitErgmTerm.fuzzynodematch","text":"ERGM user term written allow generalized homophily.attr term argument specify character vertex attribute encoding \"venues\" associated node.  split argument specify string separates different \"venues\" attribute value node, handled strsplit fixed = TRUE. example, split \"|\" (default), attribute value given node \"a12|b476\", associated venues node \"a12\" \"b476\".  empty string \"\" interpreted \"venues\". binary term argument FALSE (default), change statistic -toggle number unique venues associated nodes (informally speaking, described number venues two nodes \"match\"); binary TRUE, change statistic -toggle 1 venue associated nodes, 0 otherwise.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/add_vertices.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Version of network::add.vertices for Edgelist-formatted Network — add_vertices","title":"Fast Version of network::add.vertices for Edgelist-formatted Network — add_vertices","text":"function performs simple operation updating edgelist attribute n tracks total network size implicit edgelist representation network.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/add_vertices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast Version of network::add.vertices for Edgelist-formatted Network — add_vertices","text":"","code":"add_vertices(el, nv)"},{"path":"http://epimodel.github.io/EpiModel/reference/add_vertices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Version of network::add.vertices for Edgelist-formatted Network — add_vertices","text":"el two-column matrix current edges (edgelist) attribute variable n containing total current network size. nv integer equal number nodes add network size given time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/add_vertices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Version of network::add.vertices for Edgelist-formatted Network — add_vertices","text":"Returns matrix current edges, el, population size attribute updated based number new vertices specified nv.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/add_vertices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast Version of network::add.vertices for Edgelist-formatted Network — add_vertices","text":"function used EpiModel modules add vertices (nodes) edgelist object account entries population (e.g., births -migration).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/add_vertices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast Version of network::add.vertices for Edgelist-formatted Network — add_vertices","text":"","code":"if (FALSE) { # \\dontrun{ library(\"EpiModel\") nw <- network_initialize(100) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20) x <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)  param <- param.net(inf.prob = 0.3) init <- init.net(i.num = 10) control <- control.net(type = \"SI\", nsteps = 100, nsims = 5,                        tergmLite = TRUE)  # networkLite representation after initialization dat <- crosscheck.net(x, param, init, control) dat <- initialize.net(x, param, init, control)  # Check current network size attributes(dat$el[[1]])$n  # Add 10 vertices dat$el[[1]] <- add_vertices(dat$el[[1]], 10)  # Check new network size attributes(dat$el[[1]])$n } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/apportion_lr.html","id":null,"dir":"Reference","previous_headings":"","what":"Apportion Using the Largest Remainder Method — apportion_lr","title":"Apportion Using the Largest Remainder Method — apportion_lr","text":"Apportions vector values given specified frequency distribution values length output robust rounding instabilities.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/apportion_lr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apportion Using the Largest Remainder Method — apportion_lr","text":"","code":"apportion_lr(vector.length, values, proportions, shuffled = FALSE)"},{"path":"http://epimodel.github.io/EpiModel/reference/apportion_lr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apportion Using the Largest Remainder Method — apportion_lr","text":"vector.length Length output vector. values Values output vector. proportions Proportion distribution one number value. must sum 1. shuffled TRUE, randomly shuffle order vector.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/apportion_lr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apportion Using the Largest Remainder Method — apportion_lr","text":"vector length vector.length containing apportioned values values.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/apportion_lr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apportion Using the Largest Remainder Method — apportion_lr","text":"","code":"if (FALSE) { # \\dontrun{ ## Example 1: Without rounding apportioned_vec_1 <- apportion_lr(4, c(1, 2, 3, 4, 5),                                      c(0.25, 0, 0.25, 0.25, 0.25))  ## Example 2: With rounding apportioned_vec_2 <- apportion_lr(5, c(1, 2, 3, 4, 5),                                      c(0.21, 0, 0.29, 0.25, 0.25)) } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.2g.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrivals: netsim Module — arrivals.2g.net","title":"Arrivals: netsim Module — arrivals.2g.net","text":"function simulates new arrivals network use netsim simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.2g.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrivals: netsim Module — arrivals.2g.net","text":"","code":"arrivals.2g.net(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.2g.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrivals: netsim Module — arrivals.2g.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.2g.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrivals: netsim Module — arrivals.2g.net","text":"updated netsim_dat main list object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.icm.bip.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrivals: Bipartite icm Module — arrivals.icm.bip","title":"Arrivals: Bipartite icm Module — arrivals.icm.bip","text":"function simulates arrival use icm simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.icm.bip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrivals: Bipartite icm Module — arrivals.icm.bip","text":"","code":"arrivals.icm.bip(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.icm.bip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrivals: Bipartite icm Module — arrivals.icm.bip","text":"dat Main icm_dat class data object passed icm simulations. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.icm.bip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrivals: Bipartite icm Module — arrivals.icm.bip","text":"updated icm_dat class main data object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrivals: icm Module — arrivals.icm","title":"Arrivals: icm Module — arrivals.icm","text":"function simulates arrival use icm simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrivals: icm Module — arrivals.icm","text":"","code":"arrivals.icm(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrivals: icm Module — arrivals.icm","text":"dat Main icm_dat class data object passed icm simulations. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrivals: icm Module — arrivals.icm","text":"updated icm_dat class main data object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrivals: netsim Module — arrivals.net","title":"Arrivals: netsim Module — arrivals.net","text":"function simulates new arrivals network use netsim simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrivals: netsim Module — arrivals.net","text":"","code":"arrivals.net(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrivals: netsim Module — arrivals.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrivals.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrivals: netsim Module — arrivals.net","text":"updated netsim_dat main list object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/arrive_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrive New Nodes to the netsim_dat Object — arrive_nodes","title":"Arrive New Nodes to the netsim_dat Object — arrive_nodes","text":"Arrive New Nodes netsim_dat Object","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrive_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrive New Nodes to the netsim_dat Object — arrive_nodes","text":"","code":"arrive_nodes(dat, nArrivals)"},{"path":"http://epimodel.github.io/EpiModel/reference/arrive_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrive New Nodes to the netsim_dat Object — arrive_nodes","text":"dat netsim_dat object nArrivals number new nodes arrive","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrive_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrive New Nodes to the netsim_dat Object — arrive_nodes","text":"updated netsim_dat object nArrivals new nodes added","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/arrive_nodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arrive New Nodes to the netsim_dat Object — arrive_nodes","text":"nArrivals new nodes added network data stored netsim_dat object. tergmLite FALSE, nodes activated current timestep onward. Attributes new nodes must set separately. Note function supports arriving new nodes; returning active state nodes previously active network supported.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.dcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Model Data for Deterministic Compartmental Models — as.data.frame.dcm","title":"Extract Model Data for Deterministic Compartmental Models — as.data.frame.dcm","text":"function extracts model run object class dcm data frame using generic .data.frame function.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.dcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Model Data for Deterministic Compartmental Models — as.data.frame.dcm","text":"","code":"# S3 method for class 'dcm' as.data.frame(x, row.names = NULL, optional = FALSE, run, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.dcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Model Data for Deterministic Compartmental Models — as.data.frame.dcm","text":"x EpiModel object class dcm. row.names See .data.frame.default. optional See .data.frame.default. run Run number model; used multiple-run sensitivity models. specified, output data runs stacked data frame. ... See .data.frame.default.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.dcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Model Data for Deterministic Compartmental Models — as.data.frame.dcm","text":"data frame containing data x.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.dcm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Model Data for Deterministic Compartmental Models — as.data.frame.dcm","text":"Model output dcm simulations available data frame helper function. output data frame include columns time, size compartment, overall population size (sum compartment sizes), size flow. models multiple runs (.e., varying parameters - see example ), default run parameter specified output runs single stacked data frame.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.dcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Model Data for Deterministic Compartmental Models — as.data.frame.dcm","text":"","code":"## Example 1: One-group SIS model with varying act.rate param <- param.dcm(inf.prob = 0.2, act.rate = seq(0.05, 0.5, 0.05),                    rec.rate = 1/50) init <- init.dcm(s.num = 500, i.num = 1) control <- control.dcm(type = \"SIS\", nsteps = 10) mod1 <- dcm(param, init, control) as.data.frame(mod1) #>     run time    s.num     i.num     si.flow    is.flow num #> 1     1    1 500.0000 1.0000000 0.009930306 0.01990013 501 #> 2     1    2 500.0100 0.9900302 0.009831499 0.01970174 501 #> 3     1    3 500.0198 0.9801599 0.009733674 0.01950532 501 #> 4     1    4 500.0296 0.9703883 0.009636823 0.01931086 501 #> 5     1    5 500.0393 0.9607142 0.009540936 0.01911835 501 #> 6     1    6 500.0489 0.9511368 0.009446003 0.01892776 501 #> 7     1    7 500.0583 0.9416551 0.009352014 0.01873907 501 #> 8     1    8 500.0677 0.9322680 0.009258961 0.01855227 501 #> 9     1    9 500.0770 0.9229747 0.009166833 0.01836734 501 #> 10    1   10 500.0862 0.9137742 0.009166833 0.01836734 501 #> 11    2    1 500.0000 1.0000000 0.019959682 0.01999960 501 #> 12    2    2 500.0000 0.9999601 0.019958887 0.01999880 501 #> 13    2    3 500.0001 0.9999202 0.019958092 0.01999800 501 #> 14    2    4 500.0001 0.9998803 0.019957297 0.01999721 501 #> 15    2    5 500.0002 0.9998403 0.019956502 0.01999641 501 #> 16    2    6 500.0002 0.9998004 0.019955707 0.01999561 501 #> 17    2    7 500.0002 0.9997605 0.019954912 0.01999481 501 #> 18    2    8 500.0003 0.9997206 0.019954118 0.01999401 501 #> 19    2    9 500.0003 0.9996807 0.019953323 0.01999322 501 #> 20    2   10 500.0004 0.9996408 0.019953323 0.01999322 501 #> 21    3    1 500.0000 1.0000000 0.030089115 0.02009973 501 #> 22    3    2 499.9900 1.0099894 0.030389067 0.02030051 501 #> 23    3    3 499.9799 1.0200779 0.030691985 0.02050328 501 #> 24    3    4 499.9697 1.0302667 0.030997897 0.02070806 501 #> 25    3    5 499.9594 1.0405565 0.031306833 0.02091488 501 #> 26    3    6 499.9491 1.0509484 0.031618821 0.02112375 501 #> 27    3    7 499.9386 1.0614435 0.031933892 0.02133469 501 #> 28    3    8 499.9280 1.0720427 0.032252076 0.02154772 501 #> 29    3    9 499.9173 1.0827471 0.032573401 0.02176287 501 #> 30    3   10 499.9064 1.0935576 0.032573401 0.02176287 501 #> 31    4    1 500.0000 1.0000000 0.040319599 0.02020053 501 #> 32    4    2 499.9799 1.0201191 0.041129087 0.02060692 501 #> 33    4    3 499.9594 1.0406412 0.041954724 0.02102147 501 #> 34    4    4 499.9384 1.0615745 0.042796828 0.02144431 501 #> 35    4    5 499.9171 1.0829270 0.043655722 0.02187562 501 #> 36    4    6 499.8953 1.1047071 0.044531739 0.02231557 501 #> 37    4    7 499.8731 1.1269233 0.045425213 0.02276433 501 #> 38    4    8 499.8504 1.1495842 0.046336487 0.02322206 501 #> 39    4    9 499.8273 1.1726986 0.047265913 0.02368896 501 #> 40    4   10 499.8037 1.1962755 0.047265913 0.02368896 501 #> 41    5    1 500.0000 1.0000000 0.050652141 0.02030199 501 #> 42    5    2 499.9696 1.0303501 0.052186144 0.02091813 501 #> 43    5    3 499.9384 1.0616182 0.053766337 0.02155290 501 #> 44    5    4 499.9062 1.0938316 0.055394094 0.02220686 501 #> 45    5    5 499.8730 1.1270188 0.057070828 0.02288058 501 #> 46    5    6 499.8388 1.1612091 0.058797994 0.02357467 501 #> 47    5    7 499.8036 1.1964324 0.060577091 0.02428972 501 #> 48    5    8 499.7673 1.2327198 0.062409658 0.02502637 501 #> 49    5    9 499.7299 1.2701031 0.064297279 0.02578527 501 #> 50    5   10 499.6914 1.3086151 0.064297279 0.02578527 501 #> 51    6    1 500.0000 1.0000000 0.061087754 0.02040414 501 #> 52    6    2 499.9593 1.0406836 0.063567589 0.02123420 501 #> 53    6    3 499.9170 1.0830170 0.066147533 0.02209792 501 #> 54    6    4 499.8729 1.1270666 0.068831582 0.02299665 501 #> 55    6    5 499.8271 1.1729016 0.071623886 0.02393179 501 #> 56    6    6 499.7794 1.2205936 0.074528756 0.02490483 501 #> 57    6    7 499.7298 1.2702176 0.077550673 0.02591727 501 #> 58    6    8 499.6781 1.3218510 0.080694288 0.02697070 501 #> 59    6    9 499.6244 1.3755746 0.083964434 0.02806677 501 #> 60    6   10 499.5685 1.4314722 0.083964434 0.02806677 501 #> 61    7    1 500.0000 1.0000000 0.071627466 0.02050697 501 #> 62    7    2 499.9489 1.0511205 0.075280927 0.02155522 501 #> 63    7    3 499.8952 1.1048462 0.079119721 0.02265688 501 #> 64    7    4 499.8387 1.1613091 0.083153143 0.02381465 501 #> 65    7    5 499.7794 1.2206475 0.087390941 0.02503139 501 #> 66    7    6 499.7170 1.2830071 0.091843342 0.02631005 501 #> 67    7    7 499.6515 1.3485404 0.096521070 0.02765378 501 #> 68    7    8 499.5826 1.4174077 0.101435370 0.02906587 501 #> 69    7    9 499.5102 1.4897772 0.106598031 0.03054974 501 #> 70    7   10 499.4342 1.5658255 0.106598031 0.03054974 501 #> 71    8    1 500.0000 1.0000000 0.082272308 0.02061048 501 #> 72    8    2 499.9383 1.0616618 0.087333822 0.02188125 501 #> 73    8    3 499.8729 1.1271144 0.092705033 0.02323013 501 #> 74    8    4 499.8034 1.1965893 0.098404673 0.02466189 501 #> 75    8    5 499.7297 1.2703321 0.104452584 0.02618158 501 #> 76    8    6 499.6514 1.3486031 0.110869772 0.02779457 501 #> 77    8    7 499.5683 1.4316783 0.117678477 0.02950653 501 #> 78    8    8 499.4801 1.5198502 0.124902240 0.03132351 501 #> 79    8    9 499.3866 1.6134290 0.132565973 0.03325187 501 #> 80    8   10 499.2873 1.7127431 0.132565973 0.03325187 501 #> 81    9    1 500.0000 1.0000000 0.093023327 0.02071469 501 #> 82    9    2 499.9277 1.0723086 0.099734099 0.02221239 501 #> 83    9    3 499.8502 1.1498303 0.106926344 0.02381805 501 #> 84    9    4 499.7671 1.2329386 0.114634208 0.02553939 501 #> 85    9    5 499.6780 1.3220335 0.122894202 0.02738470 501 #> 86    9    6 499.5825 1.4175430 0.131745353 0.02936283 501 #> 87    9    7 499.4801 1.5199255 0.141229367 0.03148327 501 #> 88    9    8 499.3703 1.6296716 0.151390806 0.03375617 501 #> 89    9    9 499.2527 1.7473062 0.162277263 0.03619239 501 #> 90    9   10 499.1266 1.8733911 0.162277263 0.03619239 501 #> 91   10    1 500.0000 1.0000000 0.103881575 0.02081960 501 #> 92   10    2 499.9169 1.0830620 0.112489747 0.02254872 501 #> 93   10    3 499.8270 1.1730030 0.121807299 0.02442101 501 #> 94   10    4 499.7296 1.2703893 0.131892009 0.02644825 501 #> 95   10    5 499.6242 1.3758331 0.142806244 0.02864317 501 #> 96   10    6 499.5100 1.4899961 0.154617300 0.03101954 501 #> 97   10    7 499.3864 1.6135939 0.167397776 0.03359223 501 #> 98   10    8 499.2526 1.7473994 0.181225955 0.03637733 501 #> 99   10    9 499.1078 1.8922481 0.196186222 0.03939219 501 #> 100  10   10 498.9510 2.0490421 0.196186222 0.03939219 501 as.data.frame(mod1, run = 1) #>    run time    s.num     i.num     si.flow    is.flow num #> 1    1    1 500.0000 1.0000000 0.009930306 0.01990013 501 #> 2    1    2 500.0100 0.9900302 0.009831499 0.01970174 501 #> 3    1    3 500.0198 0.9801599 0.009733674 0.01950532 501 #> 4    1    4 500.0296 0.9703883 0.009636823 0.01931086 501 #> 5    1    5 500.0393 0.9607142 0.009540936 0.01911835 501 #> 6    1    6 500.0489 0.9511368 0.009446003 0.01892776 501 #> 7    1    7 500.0583 0.9416551 0.009352014 0.01873907 501 #> 8    1    8 500.0677 0.9322680 0.009258961 0.01855227 501 #> 9    1    9 500.0770 0.9229747 0.009166833 0.01836734 501 #> 10   1   10 500.0862 0.9137742 0.009166833 0.01836734 501 as.data.frame(mod1, run = 10) #>    run time    s.num    i.num   si.flow    is.flow num #> 1   10    1 500.0000 1.000000 0.1038816 0.02081960 501 #> 2   10    2 499.9169 1.083062 0.1124897 0.02254872 501 #> 3   10    3 499.8270 1.173003 0.1218073 0.02442101 501 #> 4   10    4 499.7296 1.270389 0.1318920 0.02644825 501 #> 5   10    5 499.6242 1.375833 0.1428062 0.02864317 501 #> 6   10    6 499.5100 1.489996 0.1546173 0.03101954 501 #> 7   10    7 499.3864 1.613594 0.1673978 0.03359223 501 #> 8   10    8 499.2526 1.747399 0.1812260 0.03637733 501 #> 9   10    9 499.1078 1.892248 0.1961862 0.03939219 501 #> 10  10   10 498.9510 2.049042 0.1961862 0.03939219 501  ## Example 2: Two-group SIR model with vital dynamics param <- param.dcm(inf.prob = 0.2, inf.prob.g2 = 0.1,                    act.rate = 3, balance = \"g1\",                    rec.rate = 1/50, rec.rate.g2 = 1/50,                    a.rate = 1/100, a.rate.g2 = NA,                    ds.rate = 1/100, ds.rate.g2 = 1/100,                    di.rate = 1/90, di.rate.g2 = 1/90,                    dr.rate = 1/100, dr.rate.g2 = 1/100) init <- init.dcm(s.num = 500, i.num = 1, r.num = 0,                  s.num.g2 = 500, i.num.g2 = 1, r.num.g2 = 0) control <- control.dcm(type = \"SIR\", nsteps = 10) mod2 <- dcm(param, init, control) as.data.frame(mod2) #>    time    s.num     i.num      r.num s.num.g2  i.num.g2   r.num.g2    si.flow #> 1     1 500.0000  1.000000 0.00000000 500.0000  1.000000 0.00000000  0.6956944 #> 2     2 499.3175  1.654896 0.02610779 499.6193  1.356308 0.02314214  0.9683946 #> 3     3 498.3704  2.558561 0.06726741 499.0138  1.927958 0.05517913  1.3911960 #> 4     4 497.0118  3.851292 0.12960355 498.0930  2.800201 0.10109329  2.0247675 #> 5     5 495.0361  5.728883 0.22248700 496.7194  4.103195 0.16793811  2.9577317 #> 6     6 492.1513  8.468474 0.35985371 494.6902  6.028843 0.26586939  4.3143671 #> 7     7 487.9449 12.461179 0.56209206 491.7134  8.853692 0.40956118  6.2614805 #> 8     8 481.8422 18.250486 0.85862307 487.3770 12.967442 0.62012165  9.0093775 #> 9     9 473.0651 26.570405 1.29123344 481.1156 18.903705 0.92758946 12.7966119 #> 10   10 460.6056 38.367368 1.91801153 472.1838 27.363408 1.37396802 12.7966119 #>       ir.flow   a.flow  ds.flow    di.flow      dr.flow si.flow.g2 ir.flow.g2 #> 1  0.02622751 5.009993 4.996760 0.01457084 0.0001197282  0.3924783 0.02325207 #> 2  0.04161165 5.009975 4.988717 0.02311758 0.0004520193  0.6220793 0.03241927 #> 3  0.06329928 5.009946 4.977333 0.03516626 0.0009631428  0.9448588 0.04668126 #> 4  0.09461312 5.009903 4.960866 0.05256285 0.0017296721  1.4090334 0.06816864 #> 5  0.14023353 5.009838 4.936855 0.07790752 0.0028668137  2.0813106 0.10006879 #> 6  0.20678268 5.009743 4.901807 0.11487926 0.0045443299  3.0535515 0.14702269 #> 7  0.30353980 5.009603 4.850824 0.16863322 0.0070087866  4.4491919 0.21564154 #> 8  0.44322350 5.009398 4.777173 0.24623528 0.0106131318  6.4264337 0.31510923 #> 9  0.64263140 5.009099 4.671930 0.35701745 0.0158533222  9.1717556 0.45774804 #> 10 0.64263140 5.009099 4.671930 0.35701745 0.0158533222  9.1717556 0.45774804 #>    a.flow.g2 ds.flow.g2 di.flow.g2   dr.flow.g2      num   num.g2 #> 1   5.009993   4.998258 0.01291782 0.0001099331 501.0000 501.0000 #> 2   5.009975   4.993387 0.01801070 0.0003822785 500.9985 500.9987 #> 3   5.009946   4.985849 0.02593403 0.0007670955 500.9962 500.9969 #> 4   5.009903   4.974517 0.03787147 0.0013238256 500.9927 500.9943 #> 5   5.009838   4.957707 0.05559377 0.0021375038 500.9875 500.9905 #> 6   5.009743   4.932968 0.08167927 0.0033308964 500.9797 500.9849 #> 7   5.009603   4.896808 0.11980085 0.0050810708 500.9682 500.9767 #> 8   5.009398   4.844367 0.17506069 0.0076414259 500.9513 500.9646 #> 9   5.009099   4.769105 0.25430447 0.0113694776 500.9267 500.9469 #> 10  5.009099   4.769105 0.25430447 0.0113694776 500.8910 500.9212"},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Model Data for Stochastic Models — as.data.frame.icm","title":"Extract Model Data for Stochastic Models — as.data.frame.icm","text":"function extracts model simulations objects classes icm netsim data frame using generic .data.frame function.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Model Data for Stochastic Models — as.data.frame.icm","text":"","code":"# S3 method for class 'icm' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   out = \"vals\",   sim = NULL,   qval = NULL,   ... )  # S3 method for class 'netsim' as.data.frame(   x,   row.names = NULL,   optional = FALSE,   out = \"vals\",   sim = NULL,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Model Data for Stochastic Models — as.data.frame.icm","text":"x EpiModel object class icm netsim. row.names See .data.frame.default. optional See .data.frame.default. Data output data frame: \"mean\" row means across simulations, \"sd\" row standard deviations across simulations, \"qnt\" row quantiles level specified qval, \"vals\" values individual simulations. sim =\"vals\", simulation number output. specified, data simulations output. qval Quantile value required =\"qnt\". ... See .data.frame.default.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Model Data for Stochastic Models — as.data.frame.icm","text":"data frame containing data x.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.icm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Model Data for Stochastic Models — as.data.frame.icm","text":"methods work icm netsim class models. available output includes time-specific means, standard deviations, quantiles, simulation values (compartment flow sizes) stochastic model classes. Means, standard deviations, quantiles calculated taking row summary (.e., row data corresponds time step) across simulations model output.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.icm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Model Data for Stochastic Models — as.data.frame.icm","text":"","code":"## Stochastic ICM SIS model param <- param.icm(inf.prob = 0.8, act.rate = 2, rec.rate = 0.1) init <- init.icm(s.num = 500, i.num = 1) control <- control.icm(type = \"SIS\", nsteps = 10,                        nsims = 3, verbose = FALSE) mod <- icm(param, init, control)  # Default output all simulation runs, default to all in stacked data.frame as.data.frame(mod) #>    sim time s.num i.num num si.flow is.flow #> 1    1    1   500     1 501       0       0 #> 2    1    2   500     1 501       0       0 #> 3    1    3   500     1 501       1       1 #> 4    1    4   497     4 501       3       0 #> 5    1    5   493     8 501       7       3 #> 6    1    6   485    16 501      10       2 #> 7    1    7   462    39 501      29       6 #> 8    1    8   418    83 501      53       9 #> 9    1    9   326   175 501     112      20 #> 10   1   10   208   293 501     146      28 #> 11   2    1   500     1 501       0       0 #> 12   2    2   500     1 501       2       2 #> 13   2    3   500     1 501       0       0 #> 14   2    4   498     3 501       2       0 #> 15   2    5   493     8 501       6       1 #> 16   2    6   485    16 501       9       1 #> 17   2    7   470    31 501      21       6 #> 18   2    8   428    73 501      47       5 #> 19   2    9   351   150 501     101      24 #> 20   2   10   253   248 501     128      30 #> 21   3    1   500     1 501       0       0 #> 22   3    2   498     3 501       3       1 #> 23   3    3   495     6 501       4       1 #> 24   3    4   489    12 501       7       1 #> 25   3    5   471    30 501      22       4 #> 26   3    6   433    68 501      46       8 #> 27   3    7   354   147 501      98      19 #> 28   3    8   255   246 501     132      33 #> 29   3    9   150   351 501     141      36 #> 30   3   10    82   419 501     108      40 as.data.frame(mod, sim = 2) #>    sim time s.num i.num num si.flow is.flow #> 1    2    1   500     1 501       0       0 #> 2    2    2   500     1 501       2       2 #> 3    2    3   500     1 501       0       0 #> 4    2    4   498     3 501       2       0 #> 5    2    5   493     8 501       6       1 #> 6    2    6   485    16 501       9       1 #> 7    2    7   470    31 501      21       6 #> 8    2    8   428    73 501      47       5 #> 9    2    9   351   150 501     101      24 #> 10   2   10   253   248 501     128      30  # Time-specific means across simulations as.data.frame(mod, out = \"mean\") #>    time    s.num      i.num num    si.flow    is.flow #> 1     1 500.0000   1.000000 501   0.000000  0.0000000 #> 2     2 499.3333   1.666667 501   1.666667  1.0000000 #> 3     3 498.3333   2.666667 501   1.666667  0.6666667 #> 4     4 494.6667   6.333333 501   4.000000  0.3333333 #> 5     5 485.6667  15.333333 501  11.666667  2.6666667 #> 6     6 467.6667  33.333333 501  21.666667  3.6666667 #> 7     7 428.6667  72.333333 501  49.333333 10.3333333 #> 8     8 367.0000 134.000000 501  77.333333 15.6666667 #> 9     9 275.6667 225.333333 501 118.000000 26.6666667 #> 10   10 181.0000 320.000000 501 127.333333 32.6666667  # Time-specific standard deviations across simulations as.data.frame(mod, out = \"sd\") #>    time      s.num      i.num num   si.flow    is.flow #> 1     1   0.000000   0.000000   0  0.000000  0.0000000 #> 2     2   1.154701   1.154701   0  1.527525  1.0000000 #> 3     3   2.886751   2.886751   0  2.081666  0.5773503 #> 4     4   4.932883   4.932883   0  2.645751  0.5773503 #> 5     5  12.701706  12.701706   0  8.962886  1.5275252 #> 6     6  30.022214  30.022214   0 21.079216  3.7859389 #> 7     7  64.786830  64.786830   0 42.335958  7.5055535 #> 8     8  97.123633  97.123633   0 47.437678 15.1437556 #> 9     9 109.546033 109.546033   0 20.663978  8.3266640 #> 10   10  88.639720  88.639720   0 19.008770  6.4291005  # Time-specific quantile values across simulations as.data.frame(mod, out = \"qnt\", qval = 0.25) #>    time s.num i.num num si.flow is.flow #> 1     1 500.0   1.0 501     0.0     0.0 #> 2     2 499.0   1.0 501     1.0     0.5 #> 3     3 497.5   1.0 501     0.5     0.5 #> 4     4 493.0   3.5 501     2.5     0.0 #> 5     5 482.0   8.0 501     6.5     2.0 #> 6     6 459.0  16.0 501     9.5     1.5 #> 7     7 408.0  35.0 501    25.0     6.0 #> 8     8 336.5  78.0 501    50.0     7.0 #> 9     9 238.0 162.5 501   106.5    22.0 #> 10   10 145.0 270.5 501   118.0    29.0 as.data.frame(mod, out = \"qnt\", qval = 0.75) #>    time s.num i.num num si.flow is.flow #> 1     1 500.0   1.0 501     0.0     0.0 #> 2     2 500.0   2.0 501     2.5     1.5 #> 3     3 500.0   3.5 501     2.5     1.0 #> 4     4 497.5   8.0 501     5.0     0.5 #> 5     5 493.0  19.0 501    14.5     3.5 #> 6     6 485.0  42.0 501    28.0     5.0 #> 7     7 466.0  93.0 501    63.5    12.5 #> 8     8 423.0 164.5 501    92.5    21.0 #> 9     9 338.5 263.0 501   126.5    30.0 #> 10   10 230.5 356.0 501   137.0    35.0  if (FALSE) { # \\dontrun{ ## Stochastic SI Network Model nw <- network_initialize(n = 100) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20) est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)  param <- param.net(inf.prob = 0.5) init <- init.net(i.num = 10) control <- control.net(type = \"SI\", nsteps = 10, nsims = 3, verbose = FALSE) mod <- netsim(est, param, init, control)  # Same data extraction methods as with ICMs as.data.frame(mod) as.data.frame(mod, sim = 2) as.data.frame(mod, out = \"mean\") as.data.frame(mod, out = \"sd\") as.data.frame(mod, out = \"qnt\", qval = 0.25) as.data.frame(mod, out = \"qnt\", qval = 0.75) } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.netdx.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Timed Edgelists for netdx Objects — as.data.frame.netdx","title":"Extract Timed Edgelists for netdx Objects — as.data.frame.netdx","text":"function extracts timed edgelists objects class netdx data frame using generic .data.frame function.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.netdx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Timed Edgelists for netdx Objects — as.data.frame.netdx","text":"","code":"# S3 method for class 'netdx' as.data.frame(x, row.names = NULL, optional = FALSE, sim, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.netdx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Timed Edgelists for netdx Objects — as.data.frame.netdx","text":"x EpiModel object class netdx. row.names See .data.frame.default. optional See .data.frame.default. sim simulation number output. specified, data simulations output. ... See .data.frame.default.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.netdx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Timed Edgelists for netdx Objects — as.data.frame.netdx","text":"data frame containing data x.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.data.frame.netdx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Timed Edgelists for netdx Objects — as.data.frame.netdx","text":"","code":"# Initialize and parameterize the network model nw <- network_initialize(n = 100) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)  # Model estimation est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  # Simulate the network with netdx dx <- netdx(est, nsims = 3, nsteps = 10, keep.tedgelist = TRUE,             verbose = FALSE)  # Extract data from the first simulation as.data.frame(dx, sim = 1) #>    onset terminus tail head onset.censored terminus.censored duration edge.id #> 1      0        7    1   18          FALSE             FALSE        7       1 #> 2      0        5    1   62          FALSE             FALSE        5       2 #> 3      0        2    2   58          FALSE             FALSE        2       3 #> 4      0        1    2   88          FALSE             FALSE        1       4 #> 5      0        6    3   24          FALSE             FALSE        6       5 #> 6      0       11    3   90          FALSE              TRUE       11       6 #> 7      0       11    4   98          FALSE              TRUE       11       7 #> 8      0       11    5   13          FALSE              TRUE       11       8 #> 9      0       10    7   76          FALSE             FALSE       10       9 #> 10     0        4    8   51          FALSE             FALSE        4      10 #> 11     0        4   10   69          FALSE             FALSE        4      11 #> 12     0        6   10  100          FALSE             FALSE        6      12 #> 13     0       11   11   29          FALSE              TRUE       11      13 #> 14     0        3   11   66          FALSE             FALSE        3      14 #> 15     0       11   12   67          FALSE              TRUE       11      15 #> 16     0       11   16   44          FALSE              TRUE       11      16 #> 17     0       11   17   63          FALSE              TRUE       11      17 #> 18     0        4   18   48          FALSE             FALSE        4      18 #> 19     0       11   18   90          FALSE              TRUE       11      19 #> 20     0       11   18   94          FALSE              TRUE       11      20 #> 21     0       11   20   96          FALSE              TRUE       11      21 #> 22     0       11   21   63          FALSE              TRUE       11      22 #> 23     0       11   21   84          FALSE              TRUE       11      23 #> 24     0       11   22   23          FALSE              TRUE       11      24 #> 25     0       11   24   32          FALSE              TRUE       11      25 #> 26     0       11   27   89          FALSE              TRUE       11      26 #> 27     0       11   28   45          FALSE              TRUE       11      27 #> 28     0        1   29   68          FALSE             FALSE        1      28 #> 29     0       11   30   57          FALSE              TRUE       11      29 #> 30     0       11   30   73          FALSE              TRUE       11      30 #> 31     0       11   32   41          FALSE              TRUE       11      31 #> 32     0       11   32   46          FALSE              TRUE       11      32 #> 33     0       11   32   53          FALSE              TRUE       11      33 #> 34     0       11   32   66          FALSE              TRUE       11      34 #> 35     0        9   35   40          FALSE             FALSE        9      35 #> 36     0       11   35   88          FALSE              TRUE       11      36 #> 37     0       11   37   38          FALSE              TRUE       11      37 #> 38     0       11   37   62          FALSE              TRUE       11      38 #> 39     0       10   37   93          FALSE             FALSE       10      39 #> 40     0       11   38   41          FALSE              TRUE       11      40 #> 41     0       11   38   49          FALSE              TRUE       11      41 #> 42     0        2   38   62          FALSE             FALSE        2      42 #> 43     0       11   41   99          FALSE              TRUE       11      43 #> 44     0        6   42   78          FALSE             FALSE        6      44 #> 45     0       11   43   93          FALSE              TRUE       11      45 #> 46     0       11   44   69          FALSE              TRUE       11      46 #> 47     0       11   49   88          FALSE              TRUE       11      47 #> 48     0       11   52   78          FALSE              TRUE       11      48 #> 49     0       11   57   83          FALSE              TRUE       11      49 #> 50     0       10   68   97          FALSE             FALSE       10      50 #> 51     0        7   74   83          FALSE             FALSE        7      51 #> 52     0       11   74  100          FALSE              TRUE       11      52 #> 53     0        1   89   93          FALSE             FALSE        1      53 #> 54     0       11   90   91          FALSE              TRUE       11      54 #> 55     0        2   91   99          FALSE             FALSE        2      55 #> 56     0        5   93   97          FALSE             FALSE        5      56 #> 57     1        6   41   93          FALSE             FALSE        5      57 #> 58     1       10    9   86          FALSE             FALSE        9      58 #> 59     2       11   38   99          FALSE              TRUE        9      59 #> 60     2       11   39   99          FALSE              TRUE        9      60 #> 61     2       10   29   36          FALSE             FALSE        8      61 #> 62     3       11   38   94          FALSE              TRUE        8      62 #> 63     4       11   21   82          FALSE              TRUE        7      63 #> 64     4       11   75   90          FALSE              TRUE        7      64 #> 65     4       11   42   89          FALSE              TRUE        7      65 #> 66     4       11   12   28          FALSE              TRUE        7      66 #> 67     5        8   60   73          FALSE             FALSE        3      67 #> 68     6       11   12   83          FALSE              TRUE        5      68 #> 69     6       11   26   81          FALSE              TRUE        5      69 #> 70     7        8   58   62          FALSE             FALSE        1      70 #> 71     7       11    1   61          FALSE              TRUE        4      71 #> 72     7       11   32   69          FALSE              TRUE        4      72 #> 73     7       11   57   97          FALSE              TRUE        4      73 #> 74     7       11   54   75          FALSE              TRUE        4      74 #> 75     8       11   74   96          FALSE              TRUE        3      75 #> 76     8       11   33   97          FALSE              TRUE        3      76 #> 77     8       11   10   21          FALSE              TRUE        3      77 #> 78     8       11    6   79          FALSE              TRUE        3      78 #> 79     9       11   88   94          FALSE              TRUE        2      79 #> 80    10       11    5   92          FALSE              TRUE        1      80  # Extract data from all simulations as.data.frame(dx) #>     sim onset terminus tail head onset.censored terminus.censored duration #> 1     1     0        7    1   18          FALSE             FALSE        7 #> 2     1     0        5    1   62          FALSE             FALSE        5 #> 3     1     0        2    2   58          FALSE             FALSE        2 #> 4     1     0        1    2   88          FALSE             FALSE        1 #> 5     1     0        6    3   24          FALSE             FALSE        6 #> 6     1     0       11    3   90          FALSE              TRUE       11 #> 7     1     0       11    4   98          FALSE              TRUE       11 #> 8     1     0       11    5   13          FALSE              TRUE       11 #> 9     1     0       10    7   76          FALSE             FALSE       10 #> 10    1     0        4    8   51          FALSE             FALSE        4 #> 11    1     0        4   10   69          FALSE             FALSE        4 #> 12    1     0        6   10  100          FALSE             FALSE        6 #> 13    1     0       11   11   29          FALSE              TRUE       11 #> 14    1     0        3   11   66          FALSE             FALSE        3 #> 15    1     0       11   12   67          FALSE              TRUE       11 #> 16    1     0       11   16   44          FALSE              TRUE       11 #> 17    1     0       11   17   63          FALSE              TRUE       11 #> 18    1     0        4   18   48          FALSE             FALSE        4 #> 19    1     0       11   18   90          FALSE              TRUE       11 #> 20    1     0       11   18   94          FALSE              TRUE       11 #> 21    1     0       11   20   96          FALSE              TRUE       11 #> 22    1     0       11   21   63          FALSE              TRUE       11 #> 23    1     0       11   21   84          FALSE              TRUE       11 #> 24    1     0       11   22   23          FALSE              TRUE       11 #> 25    1     0       11   24   32          FALSE              TRUE       11 #> 26    1     0       11   27   89          FALSE              TRUE       11 #> 27    1     0       11   28   45          FALSE              TRUE       11 #> 28    1     0        1   29   68          FALSE             FALSE        1 #> 29    1     0       11   30   57          FALSE              TRUE       11 #> 30    1     0       11   30   73          FALSE              TRUE       11 #> 31    1     0       11   32   41          FALSE              TRUE       11 #> 32    1     0       11   32   46          FALSE              TRUE       11 #> 33    1     0       11   32   53          FALSE              TRUE       11 #> 34    1     0       11   32   66          FALSE              TRUE       11 #> 35    1     0        9   35   40          FALSE             FALSE        9 #> 36    1     0       11   35   88          FALSE              TRUE       11 #> 37    1     0       11   37   38          FALSE              TRUE       11 #> 38    1     0       11   37   62          FALSE              TRUE       11 #> 39    1     0       10   37   93          FALSE             FALSE       10 #> 40    1     0       11   38   41          FALSE              TRUE       11 #> 41    1     0       11   38   49          FALSE              TRUE       11 #> 42    1     0        2   38   62          FALSE             FALSE        2 #> 43    1     0       11   41   99          FALSE              TRUE       11 #> 44    1     0        6   42   78          FALSE             FALSE        6 #> 45    1     0       11   43   93          FALSE              TRUE       11 #> 46    1     0       11   44   69          FALSE              TRUE       11 #> 47    1     0       11   49   88          FALSE              TRUE       11 #> 48    1     0       11   52   78          FALSE              TRUE       11 #> 49    1     0       11   57   83          FALSE              TRUE       11 #> 50    1     0       10   68   97          FALSE             FALSE       10 #> 51    1     0        7   74   83          FALSE             FALSE        7 #> 52    1     0       11   74  100          FALSE              TRUE       11 #> 53    1     0        1   89   93          FALSE             FALSE        1 #> 54    1     0       11   90   91          FALSE              TRUE       11 #> 55    1     0        2   91   99          FALSE             FALSE        2 #> 56    1     0        5   93   97          FALSE             FALSE        5 #> 57    1     1        6   41   93          FALSE             FALSE        5 #> 58    1     1       10    9   86          FALSE             FALSE        9 #> 59    1     2       11   38   99          FALSE              TRUE        9 #> 60    1     2       11   39   99          FALSE              TRUE        9 #> 61    1     2       10   29   36          FALSE             FALSE        8 #> 62    1     3       11   38   94          FALSE              TRUE        8 #> 63    1     4       11   21   82          FALSE              TRUE        7 #> 64    1     4       11   75   90          FALSE              TRUE        7 #> 65    1     4       11   42   89          FALSE              TRUE        7 #> 66    1     4       11   12   28          FALSE              TRUE        7 #> 67    1     5        8   60   73          FALSE             FALSE        3 #> 68    1     6       11   12   83          FALSE              TRUE        5 #> 69    1     6       11   26   81          FALSE              TRUE        5 #> 70    1     7        8   58   62          FALSE             FALSE        1 #> 71    1     7       11    1   61          FALSE              TRUE        4 #> 72    1     7       11   32   69          FALSE              TRUE        4 #> 73    1     7       11   57   97          FALSE              TRUE        4 #> 74    1     7       11   54   75          FALSE              TRUE        4 #> 75    1     8       11   74   96          FALSE              TRUE        3 #> 76    1     8       11   33   97          FALSE              TRUE        3 #> 77    1     8       11   10   21          FALSE              TRUE        3 #> 78    1     8       11    6   79          FALSE              TRUE        3 #> 79    1     9       11   88   94          FALSE              TRUE        2 #> 80    1    10       11    5   92          FALSE              TRUE        1 #> 81    2     0       11    1   10          FALSE              TRUE       11 #> 82    2     0        2    2   97          FALSE             FALSE        2 #> 83    2     0        5    4   18          FALSE             FALSE        5 #> 84    2     0       11    4   41          FALSE              TRUE       11 #> 85    2     0        2    5   36          FALSE             FALSE        2 #> 86    2     0       11    5   45          FALSE              TRUE       11 #> 87    2     0        3    6   13          FALSE             FALSE        3 #> 88    2     0       11    6   63          FALSE              TRUE       11 #> 89    2     0        3    7   45          FALSE             FALSE        3 #> 90    2     0        4    8   29          FALSE             FALSE        4 #> 91    2     0        2    9   38          FALSE             FALSE        2 #> 92    2     0       11   11   75          FALSE              TRUE       11 #> 93    2     0        3   13   41          FALSE             FALSE        3 #> 94    2     0       11   16   88          FALSE              TRUE       11 #> 95    2     0       11   16   91          FALSE              TRUE       11 #> 96    2     0       11   22   55          FALSE              TRUE       11 #> 97    2     0       11   23   49          FALSE              TRUE       11 #> 98    2     0        2   25   51          FALSE             FALSE        2 #> 99    2     0        8   27   57          FALSE             FALSE        8 #> 100   2     0       11   28   77          FALSE              TRUE       11 #> 101   2     0        6   32   57          FALSE             FALSE        6 #> 102   2     0        7   34   52          FALSE             FALSE        7 #> 103   2     0       11   36   55          FALSE              TRUE       11 #> 104   2     0       11   37   87          FALSE              TRUE       11 #> 105   2     0       11   38   52          FALSE              TRUE       11 #> 106   2     0       11   39   87          FALSE              TRUE       11 #> 107   2     0       11   44   49          FALSE              TRUE       11 #> 108   2     0       11   47   93          FALSE              TRUE       11 #> 109   2     0        3   51   99          FALSE             FALSE        3 #> 110   2     0       11   52   69          FALSE              TRUE       11 #> 111   2     0       11   54   97          FALSE              TRUE       11 #> 112   2     0       11   63   96          FALSE              TRUE       11 #> 113   2     0       11   64   75          FALSE              TRUE       11 #> 114   2     0        2   67   68          FALSE             FALSE        2 #> 115   2     0       11   73   89          FALSE              TRUE       11 #> 116   2     0       11   73  100          FALSE              TRUE       11 #> 117   2     0       11   74   91          FALSE              TRUE       11 #> 118   2     0        6   76   77          FALSE             FALSE        6 #> 119   2     0        3   79   99          FALSE             FALSE        3 #> 120   2     0       10   81  100          FALSE             FALSE       10 #> 121   2     0       11   83  100          FALSE              TRUE       11 #> 122   2     0       11   87   98          FALSE              TRUE       11 #> 123   2     0       11   92   96          FALSE              TRUE       11 #> 124   2     0        3   92  100          FALSE             FALSE        3 #> 125   2     0       11   97   98          FALSE              TRUE       11 #> 126   2     1       11    1  100          FALSE              TRUE       10 #> 127   2     1       11   62   93          FALSE              TRUE       10 #> 128   2     1       11   58   62          FALSE              TRUE       10 #> 129   2     2       10   61   97          FALSE             FALSE        8 #> 130   2     2        7   52   65          FALSE             FALSE        5 #> 131   2     2       11   48   95          FALSE              TRUE        9 #> 132   2     3       11    8   53          FALSE              TRUE        8 #> 133   2     3       11   63   99          FALSE              TRUE        8 #> 134   2     3        7   54   61          FALSE             FALSE        4 #> 135   2     3        5    1   31          FALSE             FALSE        2 #> 136   2     4       11   15   17          FALSE              TRUE        7 #> 137   2     4        9   57   99          FALSE             FALSE        5 #> 138   2     5       11   24   53          FALSE              TRUE        6 #> 139   2     5       11   19   72          FALSE              TRUE        6 #> 140   2     6        7   24   85          FALSE             FALSE        1 #> 141   2     6       11   65   97          FALSE              TRUE        5 #> 142   2     6       11   44   65          FALSE              TRUE        5 #> 143   2     6       11    3    5          FALSE              TRUE        5 #> 144   2     7       11   26   66          FALSE              TRUE        4 #> 145   2     8       11   16   83          FALSE              TRUE        3 #> 146   2     8       11   22   73          FALSE              TRUE        3 #> 147   2     8       11   14   79          FALSE              TRUE        3 #> 148   2     9       10   27   50          FALSE             FALSE        1 #> 149   2    10       11   55   71          FALSE              TRUE        1 #> 150   3     0        8    4   12          FALSE             FALSE        8 #> 151   3     0       10    5   51          FALSE             FALSE       10 #> 152   3     0       11    6   49          FALSE              TRUE       11 #> 153   3     0        8    7   94          FALSE             FALSE        8 #> 154   3     0       11    8   18          FALSE              TRUE       11 #> 155   3     0        2    8   39          FALSE             FALSE        2 #> 156   3     0       11    9   86          FALSE              TRUE       11 #> 157   3     0       11   10   71          FALSE              TRUE       11 #> 158   3     0        8   10   78          FALSE             FALSE        8 #> 159   3     0        5   11   55          FALSE             FALSE        5 #> 160   3     0       11   11   88          FALSE              TRUE       11 #> 161   3     0        1   13   66          FALSE             FALSE        1 #> 162   3     0       11   14   41          FALSE              TRUE       11 #> 163   3     0       11   15   38          FALSE              TRUE       11 #> 164   3     0        8   16   99          FALSE             FALSE        8 #> 165   3     0        8   17   80          FALSE             FALSE        8 #> 166   3     0       11   18   79          FALSE              TRUE       11 #> 167   3     0       11   20   32          FALSE              TRUE       11 #> 168   3     0       10   21   92          FALSE             FALSE       10 #> 169   3     0        1   22   27          FALSE             FALSE        1 #> 170   3     0        9   22   37          FALSE             FALSE        9 #> 171   3     0       11   23   33          FALSE              TRUE       11 #> 172   3     0        1   24   43          FALSE             FALSE        1 #> 173   3     0        5   24   56          FALSE             FALSE        5 #> 174   3     0       11   25   42          FALSE              TRUE       11 #> 175   3     0       11   25   78          FALSE              TRUE       11 #> 176   3     0       11   27   59          FALSE              TRUE       11 #> 177   3     0       11   27   67          FALSE              TRUE       11 #> 178   3     0       11   32   73          FALSE              TRUE       11 #> 179   3     0       11   33   69          FALSE              TRUE       11 #> 180   3     0        7   34   85          FALSE             FALSE        7 #> 181   3     0       11   36   56          FALSE              TRUE       11 #> 182   3     0        1   38   39          FALSE             FALSE        1 #> 183   3     0        5   44   54          FALSE             FALSE        5 #> 184   3     0        2   45   48          FALSE             FALSE        2 #> 185   3     0       11   45   69          FALSE              TRUE       11 #> 186   3     0       10   47   74          FALSE             FALSE       10 #> 187   3     0       11   49   58          FALSE              TRUE       11 #> 188   3     0       11   49   88          FALSE              TRUE       11 #> 189   3     0       11   50   81          FALSE              TRUE       11 #> 190   3     0       11   53   80          FALSE              TRUE       11 #> 191   3     0        8   57   64          FALSE             FALSE        8 #> 192   3     0       11   59   75          FALSE              TRUE       11 #> 193   3     0       11   63   83          FALSE              TRUE       11 #> 194   3     0        4   65   68          FALSE             FALSE        4 #> 195   3     0        6   69   75          FALSE             FALSE        6 #> 196   3     0       11   70   88          FALSE              TRUE       11 #> 197   3     0       11   76   86          FALSE              TRUE       11 #> 198   3     0       11   83   95          FALSE              TRUE       11 #> 199   3     0       11   90   99          FALSE              TRUE       11 #> 200   3     1       10    3   16          FALSE             FALSE        9 #> 201   3     2       11   59   67          FALSE              TRUE        9 #> 202   3     2        7   38   97          FALSE             FALSE        5 #> 203   3     2       11   39   86          FALSE              TRUE        9 #> 204   3     2       11   70   91          FALSE              TRUE        9 #> 205   3     4       11   48   71          FALSE              TRUE        7 #> 206   3     4        7    7   75          FALSE             FALSE        3 #> 207   3     5       11   27   43          FALSE              TRUE        6 #> 208   3     5       11    5   55          FALSE              TRUE        6 #> 209   3     5       11    6   44          FALSE              TRUE        6 #> 210   3     5       11    2   16          FALSE              TRUE        6 #> 211   3     5       11    6   16          FALSE              TRUE        6 #> 212   3     6       11   23   91          FALSE              TRUE        5 #> 213   3     6       11   26   41          FALSE              TRUE        5 #> 214   3     6       11   45   81          FALSE              TRUE        5 #> 215   3     7        9    6   77          FALSE             FALSE        2 #> 216   3     7        9   69   87          FALSE             FALSE        2 #> 217   3     7       11   39   65          FALSE              TRUE        4 #> 218   3     7       11    9   27          FALSE              TRUE        4 #> 219   3     8       11   14   18          FALSE              TRUE        3 #> 220   3     8       11    2   25          FALSE              TRUE        3 #> 221   3    10       11   23   49          FALSE              TRUE        1 #> 222   3    10       11   44   87          FALSE              TRUE        1 #>     edge.id #> 1         1 #> 2         2 #> 3         3 #> 4         4 #> 5         5 #> 6         6 #> 7         7 #> 8         8 #> 9         9 #> 10       10 #> 11       11 #> 12       12 #> 13       13 #> 14       14 #> 15       15 #> 16       16 #> 17       17 #> 18       18 #> 19       19 #> 20       20 #> 21       21 #> 22       22 #> 23       23 #> 24       24 #> 25       25 #> 26       26 #> 27       27 #> 28       28 #> 29       29 #> 30       30 #> 31       31 #> 32       32 #> 33       33 #> 34       34 #> 35       35 #> 36       36 #> 37       37 #> 38       38 #> 39       39 #> 40       40 #> 41       41 #> 42       42 #> 43       43 #> 44       44 #> 45       45 #> 46       46 #> 47       47 #> 48       48 #> 49       49 #> 50       50 #> 51       51 #> 52       52 #> 53       53 #> 54       54 #> 55       55 #> 56       56 #> 57       57 #> 58       58 #> 59       59 #> 60       60 #> 61       61 #> 62       62 #> 63       63 #> 64       64 #> 65       65 #> 66       66 #> 67       67 #> 68       68 #> 69       69 #> 70       70 #> 71       71 #> 72       72 #> 73       73 #> 74       74 #> 75       75 #> 76       76 #> 77       77 #> 78       78 #> 79       79 #> 80       80 #> 81        1 #> 82        2 #> 83        3 #> 84        4 #> 85        5 #> 86        6 #> 87        7 #> 88        8 #> 89        9 #> 90       10 #> 91       11 #> 92       12 #> 93       13 #> 94       14 #> 95       15 #> 96       16 #> 97       17 #> 98       18 #> 99       19 #> 100      20 #> 101      21 #> 102      22 #> 103      23 #> 104      24 #> 105      25 #> 106      26 #> 107      27 #> 108      28 #> 109      29 #> 110      30 #> 111      31 #> 112      32 #> 113      33 #> 114      34 #> 115      35 #> 116      36 #> 117      37 #> 118      38 #> 119      39 #> 120      40 #> 121      41 #> 122      42 #> 123      43 #> 124      44 #> 125      45 #> 126      46 #> 127      47 #> 128      48 #> 129      49 #> 130      50 #> 131      51 #> 132      52 #> 133      53 #> 134      54 #> 135      55 #> 136      56 #> 137      57 #> 138      58 #> 139      59 #> 140      60 #> 141      61 #> 142      62 #> 143      63 #> 144      64 #> 145      65 #> 146      66 #> 147      67 #> 148      68 #> 149      69 #> 150       1 #> 151       2 #> 152       3 #> 153       4 #> 154       5 #> 155       6 #> 156       7 #> 157       8 #> 158       9 #> 159      10 #> 160      11 #> 161      12 #> 162      13 #> 163      14 #> 164      15 #> 165      16 #> 166      17 #> 167      18 #> 168      19 #> 169      20 #> 170      21 #> 171      22 #> 172      23 #> 173      24 #> 174      25 #> 175      26 #> 176      27 #> 177      28 #> 178      29 #> 179      30 #> 180      31 #> 181      32 #> 182      33 #> 183      34 #> 184      35 #> 185      36 #> 186      37 #> 187      38 #> 188      39 #> 189      40 #> 190      41 #> 191      42 #> 192      43 #> 193      44 #> 194      45 #> 195      46 #> 196      47 #> 197      48 #> 198      49 #> 199      50 #> 200      51 #> 201      52 #> 202      53 #> 203      54 #> 204      55 #> 205      56 #> 206      57 #> 207      58 #> 208      59 #> 209      60 #> 210      61 #> 211      62 #> 212      63 #> 213      64 #> 214      65 #> 215      66 #> 216      67 #> 217      68 #> 218      69 #> 219      70 #> 220      71 #> 221      72 #> 222      73"},{"path":"http://epimodel.github.io/EpiModel/reference/as.epi.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and Convert to epi.data.frame — as.epi.data.frame","title":"Validate and Convert to epi.data.frame — as.epi.data.frame","text":"methods ensures data.frame correctly formatted epi.data.frame","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.epi.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and Convert to epi.data.frame — as.epi.data.frame","text":"","code":"as.epi.data.frame(df)"},{"path":"http://epimodel.github.io/EpiModel/reference/as.epi.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and Convert to epi.data.frame — as.epi.data.frame","text":"df data.frame convert epi.data.frame","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.network.transmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert transmat Infection Tree into a network Object — as.network.transmat","title":"Convert transmat Infection Tree into a network Object — as.network.transmat","text":"Converts transmission matrix get_transmat function network::network class object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.network.transmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert transmat Infection Tree into a network Object — as.network.transmat","text":"","code":"# S3 method for class 'transmat' as.network(x, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/as.network.transmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert transmat Infection Tree into a network Object — as.network.transmat","text":"x object class transmat converted network class object. ... Unused.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.network.transmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert transmat Infection Tree into a network Object — as.network.transmat","text":"network::network object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.network.transmat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert transmat Infection Tree into a network Object — as.network.transmat","text":"converting transmat network object, functions copies edge attributes within transmission matrix ('', 'infDur', 'transProb', 'actRate', 'finalProb') edge attributes network.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.phylo.transmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert transmat Infection Tree into a phylo Object — as.phylo.transmat","title":"Convert transmat Infection Tree into a phylo Object — as.phylo.transmat","text":"Converts transmission matrix get_transmat function phylo class object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.phylo.transmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert transmat Infection Tree into a phylo Object — as.phylo.transmat","text":"","code":"# S3 method for class 'transmat' as.phylo(x, vertex.exit.times, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/as.phylo.transmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert transmat Infection Tree into a phylo Object — as.phylo.transmat","text":"x object class transmat, output get_transmat. vertex.exit.times Optional numeric vector providing time departure vertices, used scale lengths branches reaching tips. Index position vector corresponds network id. NA indicates departure, branch extend end tree. ... arguments (unused).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.phylo.transmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert transmat Infection Tree into a phylo Object — as.phylo.transmat","text":"phylo class object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.phylo.transmat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert transmat Infection Tree into a phylo Object — as.phylo.transmat","text":"Converts transmat object containing information history simulated infection ape::phylo object representation suitable plotting tree plot.phylo. infection event becomes 'node' (horizontal branch) resulting phylo tree, network vertex becomes 'tip' tree. infection events labeled vertex ID infector make possible trace path infection. infection timing information included position phylo-nodes, lines tips drawn max time value +1 (unless vertex.exit.times passed effectively assumes vertices active end simulation). transmat contains multiple infection seeds (multiple trees separate root nodes), function return list class multiPhylo, element phylo object. See read.tree.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as.phylo.transmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert transmat Infection Tree into a phylo Object — as.phylo.transmat","text":"","code":"set.seed(13)  # Fit a random mixing TERGM with mean degree of 1 and mean edge # duration of 20 time steps nw <- network_initialize(n = 100) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20) est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  # Parameterize the epidemic model as SI with one infected seed param <- param.net(inf.prob = 0.5) init <- init.net(i.num = 1) control <- control.net(type = \"SI\", nsteps = 40, nsims = 1, verbose = FALSE)  # Simulate the model mod1 <- netsim(est, param, init, control)  # Extract the transmission matrix tm <- get_transmat(mod1) head(tm, 15) #> # A tibble: 15 × 8 #> # Groups:   at, sus [15] #>       at   sus   inf network infDur transProb actRate finalProb #>    <dbl> <int> <int>   <int>  <dbl>     <dbl>   <dbl>     <dbl> #>  1     2     7    31       1      3       0.5       1       0.5 #>  2     2    94    31       1      3       0.5       1       0.5 #>  3     4    20    31       1      5       0.5       1       0.5 #>  4     4    33    94       1      2       0.5       1       0.5 #>  5     5    34    94       1      3       0.5       1       0.5 #>  6     5    72    33       1      1       0.5       1       0.5 #>  7     6     6    34       1      1       0.5       1       0.5 #>  8     6    36    72       1      1       0.5       1       0.5 #>  9     6    95    33       1      2       0.5       1       0.5 #> 10     7    40    34       1      2       0.5       1       0.5 #> 11     8     1    95       1      2       0.5       1       0.5 #> 12     8    48     7       1      6       0.5       1       0.5 #> 13     8    60    40       1      1       0.5       1       0.5 #> 14     8    68    95       1      2       0.5       1       0.5 #> 15     8    89     6       1      2       0.5       1       0.5  # Convert to phylo object and plot tmPhylo <- as.phylo.transmat(tm) par(mar = c(1,1,1,1)) plot(tmPhylo, show.node.label = TRUE,               root.edge = TRUE,               cex = 0.75)"},{"path":"http://epimodel.github.io/EpiModel/reference/as_cumulative_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to a cumulative_edgelist — as_cumulative_edgelist","title":"Convert an object to a cumulative_edgelist — as_cumulative_edgelist","text":"Convert object cumulative_edgelist","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as_cumulative_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to a cumulative_edgelist — as_cumulative_edgelist","text":"","code":"as_cumulative_edgelist(x)"},{"path":"http://epimodel.github.io/EpiModel/reference/as_cumulative_edgelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to a cumulative_edgelist — as_cumulative_edgelist","text":"x object converted cumulative edgelist","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as_cumulative_edgelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object to a cumulative_edgelist — as_cumulative_edgelist","text":"cumulative_edgelist object, data.frame least following columns: head, tail, start, stop.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as_cumulative_edgelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an object to a cumulative_edgelist — as_cumulative_edgelist","text":"edges active time start time stop included. stop NA, edge disolved simulation generated list.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as_tibble_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an Edgelist into a Tibble — as_tibble_edgelist","title":"Convert an Edgelist into a Tibble — as_tibble_edgelist","text":"Convert Edgelist Tibble","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as_tibble_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an Edgelist into a Tibble — as_tibble_edgelist","text":"","code":"as_tibble_edgelist(el)"},{"path":"http://epimodel.github.io/EpiModel/reference/as_tibble_edgelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an Edgelist into a Tibble — as_tibble_edgelist","text":"el edgelist matrix data frame form.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/as_tibble_edgelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an Edgelist into a Tibble — as_tibble_edgelist","text":"edgelist tibble form two columns named head tail.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/auto_update_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Vertex Attributes for Incoming Vertices — auto_update_attr","title":"Update Vertex Attributes for Incoming Vertices — auto_update_attr","text":"Updates vertex attributes network new nodes incoming network, based set rules attribute user specifies control.net.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/auto_update_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Vertex Attributes for Incoming Vertices — auto_update_attr","text":"","code":"auto_update_attr(dat, newNodes, curr.tab)"},{"path":"http://epimodel.github.io/EpiModel/reference/auto_update_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Vertex Attributes for Incoming Vertices — auto_update_attr","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. newNodes Vector nodal IDs incoming nodes current time step. curr.tab Current proportional distribution vertex attributes.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/auto_update_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Vertex Attributes for Incoming Vertices — auto_update_attr","text":"updated netsim_dat main list object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/brewer_ramp.html","id":null,"dir":"Reference","previous_headings":"","what":"RColorBrewer Color Ramp for EpiModel Plots — brewer_ramp","title":"RColorBrewer Color Ramp for EpiModel Plots — brewer_ramp","text":"Returns vector colors consistent high-brightness set colors RColorBrewer palette.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/brewer_ramp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RColorBrewer Color Ramp for EpiModel Plots — brewer_ramp","text":"","code":"brewer_ramp(n, plt, delete.lights = TRUE)"},{"path":"http://epimodel.github.io/EpiModel/reference/brewer_ramp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RColorBrewer Color Ramp for EpiModel Plots — brewer_ramp","text":"n Number colors return. plt RColorBrewer palette RColorBrewer::brewer.pal. delete.lights TRUE, delete lightest colors color palette; helps plotting many high-contrast palettes.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/brewer_ramp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RColorBrewer Color Ramp for EpiModel Plots — brewer_ramp","text":"vector length equal n range color values consistent RColorBrewer color palette.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/brewer_ramp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RColorBrewer Color Ramp for EpiModel Plots — brewer_ramp","text":"RColorBrewer provides easy access helpful color palettes, built-palettes limited set colors existing palette. function expands palette size number colors filling gaps. Also, colors within \"div\" \"seq\" set palettes whose colors light (close white) deleted default better visualization plots.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/brewer_ramp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RColorBrewer Color Ramp for EpiModel Plots — brewer_ramp","text":"","code":"# Shows a 100-color ramp for 4 RColorBrewer palettes par(mfrow = c(2, 2), mar=c(1, 1, 2, 1)) pals <- c(\"Spectral\", \"Greys\", \"Blues\", \"Set1\") for (i in seq_along(pals)) {  plot(1:100, 1:100, type = \"n\", axes = FALSE, main = pals[i])  abline(v = 1:100, lwd = 6, col = brewer_ramp(100, pals[i])) }"},{"path":"http://epimodel.github.io/EpiModel/reference/check_attr_lengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that All Attributes in the Main netsim_dat Object are of Equal Length — check_attr_lengths","title":"Check that All Attributes in the Main netsim_dat Object are of Equal Length — check_attr_lengths","text":"Check Attributes Main netsim_dat Object Equal Length","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/check_attr_lengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that All Attributes in the Main netsim_dat Object are of Equal Length — check_attr_lengths","text":"","code":"check_attr_lengths(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/check_attr_lengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that All Attributes in the Main netsim_dat Object are of Equal Length — check_attr_lengths","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/check_attr_lengths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that All Attributes in the Main netsim_dat Object are of Equal Length — check_attr_lengths","text":"invisible(TRUE) everything correct; error .","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/check_degdist_bal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Degree Distribution for Balance in Target Statistics — check_degdist_bal","title":"Check Degree Distribution for Balance in Target Statistics — check_degdist_bal","text":"Checks consistency implied network statistics two-group network group size group-specific degree distributions specified.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/check_degdist_bal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Degree Distribution for Balance in Target Statistics — check_degdist_bal","text":"","code":"check_degdist_bal(num.g1, num.g2, deg.dist.g1, deg.dist.g2)"},{"path":"http://epimodel.github.io/EpiModel/reference/check_degdist_bal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Degree Distribution for Balance in Target Statistics — check_degdist_bal","text":"num.g1 Number nodes group 1. num.g2 Number nodes group 2. deg.dist.g1 Vector fractional degree distribution group 1. deg.dist.g2 Vector fractional degree distribution group 2.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/check_degdist_bal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Degree Distribution for Balance in Target Statistics — check_degdist_bal","text":"function outputs number nodes degree 0 g, g length fractional degree distribution vector, given vector size group. utility used check balance implied degree given fractional distribution within two-group network simulations, degree-constrained counts must equal across groups.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/check_degdist_bal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Degree Distribution for Balance in Target Statistics — check_degdist_bal","text":"","code":"# An unbalanced distribution check_degdist_bal(num.g1 = 500, num.g2 = 500,                   deg.dist.g2 = c(0.40, 0.55, 0.03, 0.02),                   deg.dist.g1 = c(0.48, 0.41, 0.08, 0.03)) #> Degree Distribution Check #> ============================================= #>         g1.dist   g1.cnt   g2.dist   g2.cnt #> Deg0       0.48      240      0.40      200 #> Deg1       0.41      205      0.55      275 #> Deg2       0.08       40      0.03       15 #> Deg3       0.03       15      0.02       10 #> Edges      1.00      330      1.00      335 #> ============================================= #> ** Group 1 Edges < Group 2 Edges: -0.015 Rel Diff   # A balanced distribution check_degdist_bal(num.g1 = 500, num.g2 = 500,                   deg.dist.g1 = c(0.40, 0.55, 0.04, 0.01),                   deg.dist.g2 = c(0.48, 0.41, 0.08, 0.03)) #> Degree Distribution Check #> ============================================= #>         g1.dist   g1.cnt   g2.dist   g2.cnt #> Deg0       0.40      200      0.48      240 #> Deg1       0.55      275      0.41      205 #> Deg2       0.04       20      0.08       40 #> Deg3       0.01        5      0.03       15 #> Edges      1.00      330      1.00      330 #> ============================================= #> ** Edges balanced **"},{"path":"http://epimodel.github.io/EpiModel/reference/check_end_horizon_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the format of the end.horizon control — check_end_horizon_control","title":"Check the format of the end.horizon control — check_end_horizon_control","text":"Check format end.horizon control","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/check_end_horizon_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the format of the end.horizon control — check_end_horizon_control","text":"","code":"check_end_horizon_control(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/check_end_horizon_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the format of the end.horizon control — check_end_horizon_control","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/check_end_horizon_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the format of the end.horizon control — check_end_horizon_control","text":"TRUE invisibly succes, errors otherwise","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/color_tea.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a TEA Variable for Infection Status for ndtv Animations — color_tea","title":"Create a TEA Variable for Infection Status for ndtv Animations — color_tea","text":"Creates new color-named temporally-extended attribute (TEA) variable networkDynamic object containing disease status TEA numeric format.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/color_tea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a TEA Variable for Infection Status for ndtv Animations — color_tea","text":"","code":"color_tea(   nd,   old.var = \"testatus\",   old.sus = \"s\",   old.inf = \"i\",   old.rec = \"r\",   new.var = \"ndtvcol\",   new.sus,   new.inf,   new.rec,   verbose = TRUE )"},{"path":"http://epimodel.github.io/EpiModel/reference/color_tea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a TEA Variable for Infection Status for ndtv Animations — color_tea","text":"nd object class networkDynamic. old.var Old TEA variable name. old.sus Status value susceptible old TEA variable. old.inf Status value infected old TEA variable. old.rec Status value recovered old TEA variable. new.var New TEA variable name stored networkDynamic object. new.sus Status value susceptible new TEA variable. new.inf Status value infected new TEA variable. new.rec Status value recovered new TEA variable. verbose TRUE, print progress console.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/color_tea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a TEA Variable for Infection Status for ndtv Animations — color_tea","text":"updated object class networkDynamic.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/color_tea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a TEA Variable for Infection Status for ndtv Animations — color_tea","text":"ndtv package (https://cran.r-project.org/package=ndtv) produces animated visuals dynamic networks evolving edge structures nodal attributes. Nodal attribute dynamics ndtv movies require temporally extended attribute (TEA) containing standard R color node time step. default, EpiModel package uses TEAs store disease status history network model simulations run netsim. status TEA numeric format (0, 1, 2). color_tea function transforms numeric values disease status TEA TEA color values order visualize status changes ndtv. convention plot.netsim color susceptible nodes blue, infected nodes red, recovered nodes green. Alternate colors may specified using new.sus, new.inf, new.rec parameters, respectively. Using color_tea function netsim object requires TEAs disease status used networkDynamic object saved output: tergmListe must  set FALSE control.net.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/common_updater.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Either the ","title":"Update Either the ","text":"Update Either \"param\" \"control\" List","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/common_updater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Either the ","text":"","code":"common_updater(dat, type)"},{"path":"http://epimodel.github.io/EpiModel/reference/common_updater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Either the ","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. type Either \"param\" \"control\".","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/common_updater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Either the ","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/comp_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Compartment Diagram for Epidemic Models — comp_plot","title":"Plot Compartment Diagram for Epidemic Models — comp_plot","text":"Plots compartment flow diagram deterministic compartmental models, stochastic individual contact models, stochastic network models.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/comp_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Compartment Diagram for Epidemic Models — comp_plot","text":"","code":"comp_plot(x, at, digits, ...)  # S3 method for class 'netsim' comp_plot(x, at = 1, digits = 3, ...)  # S3 method for class 'icm' comp_plot(x, at = 1, digits = 3, ...)  # S3 method for class 'dcm' comp_plot(x, at = 1, digits = 3, run = 1, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/comp_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Compartment Diagram for Epidemic Models — comp_plot","text":"x EpiModel object class dcm, icm, netsim. Time step model statistics. digits Number significant digits print. ... Additional arguments passed plot (currently used). run Model run number, dcm class models multiple runs (sensitivity analyses).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/comp_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Compartment Diagram for Epidemic Models — comp_plot","text":"comp_plot function provides visual summary epidemic model specific time step. information contained comp_plot summary functions model, presented graphically compartment flow diagram. dcm class plots, specify model run number model contains multiple runs, sensitivity analysis. icm netsim class plots, run argument used; plots show means standard deviations across simulations specified time step. plots currently limited one-group models three model classes. functionality may expanded future software releases.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/comp_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Compartment Diagram for Epidemic Models — comp_plot","text":"","code":"## Example 1: DCM SIR model with varying act.rate param <- param.dcm(inf.prob = 0.2, act.rate = 5:7,                    rec.rate = 1/3, a.rate = 1/90, ds.rate = 1/100,                    di.rate = 1/35, dr.rate = 1/100) init <- init.dcm(s.num = 1000, i.num = 1, r.num = 0) control <- control.dcm(type = \"SIR\", nsteps = 25, verbose = FALSE) mod1 <- dcm(param, init, control) comp_plot(mod1, at = 25, run = 3)   ## Example 2: ICM SIR model with 3 simulations param <- param.icm(inf.prob = 0.2, act.rate = 3, rec.rate = 1/50,                    a.rate = 1/100, ds.rate = 1/100,                    di.rate = 1/90, dr.rate = 1/100) init <- init.icm(s.num = 500, i.num = 1, r.num = 0) control <- control.icm(type = \"SIR\", nsteps = 25,                        nsims = 3, verbose = FALSE) mod2 <- icm(param, init, control) comp_plot(mod2, at = 25, digits = 1)"},{"path":"http://epimodel.github.io/EpiModel/reference/control.dcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Settings for Deterministic Compartmental Models — control.dcm","title":"Control Settings for Deterministic Compartmental Models — control.dcm","text":"Sets controls deterministic compartmental models simulated dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.dcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Settings for Deterministic Compartmental Models — control.dcm","text":"","code":"control.dcm(   type,   nsteps,   dt = 1,   odemethod = \"rk4\",   dede = FALSE,   new.mod = NULL,   sens.param = TRUE,   print.mod = FALSE,   verbose = FALSE,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/control.dcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Settings for Deterministic Compartmental Models — control.dcm","text":"type Disease type modeled, choice \"SI\" Susceptible-Infected diseases, \"SIR\" Susceptible-Infected-Recovered diseases, \"SIS\" Susceptible-Infected-Susceptible diseases. nsteps Number time steps solve model vector times solve model . number time steps, must positive integer length 1. dt Time unit model solutions, default 1. Model solutions fractional time steps may obtained setting number 0 1. odemethod Ordinary differential equation (ODE) integration method, default \"Runge-Kutta 4\" method (see deSolve::ode options). dede TRUE, use delayed differential equation solver, allows time-lagged variables. new.mod running base model type, function new model simulated (see details). sens.param TRUE, evaluate arguments parameters length greater 1 sensitivity analyses, one model run per value parameter. FALSE, one model run parameters arbitrary length (model may error unless model function designed accomodate parameter vectors). print.mod TRUE, print model form console. verbose TRUE, print model progress console. ... additional control settings passed model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.dcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Settings for Deterministic Compartmental Models — control.dcm","text":"EpiModel object class control.dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.dcm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Control Settings for Deterministic Compartmental Models — control.dcm","text":"control.dcm sets required control settings deterministic compartmental models solved dcm function. Controls required base model types original models. base models, type argument necessary parameter default.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.dcm.html","id":"new-model-functions","dir":"Reference","previous_headings":"","what":"New Model Functions","title":"Control Settings for Deterministic Compartmental Models — control.dcm","text":"form model function base models may displayed print.mod argument set TRUE. case, model run. model forms may used templates write original model functions. new models may input solved dcm using new.mod argument, requires input model function.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/control.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Settings for Stochastic Individual Contact Models — control.icm","title":"Control Settings for Stochastic Individual Contact Models — control.icm","text":"Sets controls stochastic individual contact models simulated icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Settings for Stochastic Individual Contact Models — control.icm","text":"","code":"control.icm(   type,   nsteps,   nsims = 1,   initialize.FUN = initialize.icm,   infection.FUN = NULL,   recovery.FUN = NULL,   departures.FUN = NULL,   arrivals.FUN = NULL,   prevalence.FUN = NULL,   verbose = FALSE,   verbose.int = 0,   skip.check = FALSE,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/control.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Settings for Stochastic Individual Contact Models — control.icm","text":"type Disease type modeled, choice \"SI\" Susceptible-Infected diseases, \"SIR\" Susceptible-Infected-Recovered diseases, \"SIS\" Susceptible-Infected-Susceptible diseases. nsteps Number time steps solve model . must positive integer. nsims Number simulations run. initialize.FUN Module initialize model outset, default function initialize.icm. infection.FUN Module simulate disease infection, default function infection.icm. recovery.FUN Module simulate disease recovery, default function recovery.icm. departures.FUN Module simulate departures exits, default function departures.icm. arrivals.FUN Module simulate arrivals entries, default function arrivals.icm. prevalence.FUN Module calculate disease prevalence time step, default function prevalence.icm. verbose TRUE, print model progress console. verbose.int Time step interval printing progress console, 0 (default) prints completion status entire simulation positive integer x prints progress every x time steps. skip.check TRUE, skips default error checking structure consistency parameter values, initial conditions, control settings running base epidemic models. Setting FALSE recommended running models new modules specified. ... Additional control settings passed model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Settings for Stochastic Individual Contact Models — control.icm","text":"EpiModel object class control.icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.icm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Control Settings for Stochastic Individual Contact Models — control.icm","text":"control.icm sets required control settings stochastic individual contact model solved icm function. Controls required base model types passing original process modules. base models, type argument necessary parameter default.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.icm.html","id":"new-modules","dir":"Reference","previous_headings":"","what":"New Modules","title":"Control Settings for Stochastic Individual Contact Models — control.icm","text":"Base ICM models use set module functions specify individual agents population subjected infection, recovery, demographics, processes. Core modules listed .FUN arguments. module, default function used simulation. default infection module, example, contained infection.icm function. original models, one may substitute replacement module functions default functions. New modules may added workflow time step passing module function via ... argument.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/control.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Settings for Stochastic Network Models — control.net","title":"Control Settings for Stochastic Network Models — control.net","text":"Sets controls stochastic network models simulated netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Settings for Stochastic Network Models — control.net","text":"","code":"control.net(   type,   nsteps,   start = 1,   nsims = 1,   ncores = 1,   resimulate.network = FALSE,   tergmLite = FALSE,   cumulative.edgelist = FALSE,   truncate.el.cuml = 0,   attr.rules,   epi.by,   initialize.FUN = initialize.net,   resim_nets.FUN = resim_nets,   summary_nets.FUN = summary_nets,   infection.FUN = NULL,   recovery.FUN = NULL,   departures.FUN = NULL,   arrivals.FUN = NULL,   nwupdate.FUN = nwupdate.net,   prevalence.FUN = prevalence.net,   verbose.FUN = verbose.net,   module.order = NULL,   save.nwstats = TRUE,   nwstats.formula = \"formation\",   save.transmat = TRUE,   save.network,   save.run = FALSE,   save.cumulative.edgelist = FALSE,   save.other,   verbose = TRUE,   verbose.int = 1,   skip.check = FALSE,   raw.output = FALSE,   tergmLite.track.duration = FALSE,   set.control.ergm = control.simulate.formula(MCMC.burnin = 2e+05),   set.control.tergm = control.simulate.formula.tergm(),   save.diss.stats = TRUE,   dat.updates = NULL,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/control.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Settings for Stochastic Network Models — control.net","text":"type Disease type modeled, choice \"SI\" Susceptible-Infected diseases, \"SIR\" Susceptible-Infected-Recovered diseases, \"SIS\" Susceptible-Infected-Susceptible diseases. nsteps Number time steps simulate model . must positive integer equal final step simulation. simulation restarted start argument, number must least one greater argument's value. start models network resimulation, time point start simulation. restarted simulations, must one greater final time step prior simulation must less value nsteps. nsims total number disease simulations. ncores Number processor cores run multiple simulations , using foreach doParallel implementations. resimulate.network TRUE, resimulate network time step. required epidemic demographic processes impact network structure (e.g., vital dynamics). tergmLite Logical indicating usage either tergm (tergmLite = FALSE), tergmLite (tergmLite = TRUE). Default FALSE. cumulative.edgelist TRUE, calculates cumulative edgelist within network simulation module. used tergmLite used entire networkDynamic object used. truncate.el.cuml Number time steps cumulative edgelist retain. See help update_cumulative_edgelist options. attr.rules list containing  rules setting attributes incoming nodes, one list element per attribute set (see details ). epi.character vector length 1 containing nodal attribute subgroup stratified prevalence summary statistics calculated. nodal attribute must contained network model formation formula, otherwise ignored. initialize.FUN Module initialize model time 1, default function initialize.net. resim_nets.FUN Module resimulate network time step, default function resim_nets. summary_nets.FUN Module extract summary statistics network time step, default function summary_nets. infection.FUN Module simulate disease infection, default function infection.net. recovery.FUN Module simulate disease recovery, default function recovery.net. departures.FUN Module simulate departure exit, default function departures.net. arrivals.FUN Module simulate arrivals entries, default function arrivals.net. nwupdate.FUN Module handle updating network structure nodal attributes due exogenous epidemic model processes, default function nwupdate.net. prevalence.FUN Module calculate disease prevalence time step, default function prevalence.net. verbose.FUN Module print simulation progress screen, default function verbose.net. module.order character vector module names lists modules order evaluated within time step. NULL, modules evaluated follows: first new modules supplied ... order listed, built-modules order listed arguments . initialize.FUN always run first verbose.FUN always run last. save.nwstats TRUE, save network statistics data frame. statistics saved specified nwstats.formula argument. nwstats.formula right-hand sided ERGM formula includes network statistics interest, default formation formula terms. Supports multilayer specification. save.transmat TRUE, complete transmission matrix saved simulation end. save.network TRUE, networkDynamic networkLite object saved simulation end. save.run TRUE, run sublist dat saved, allowing simulation restart output. save.cumulative.edgelist TRUE, cumulative.edgelist saved simulation end. save.character vector elements netsim_dat main data list save simulation. One example base models attribute list, \"attr\", final time step. verbose TRUE, print model progress console. verbose.int Time step interval printing progress console, 0 prints completion status entire simulation positive integer x prints progress every x time steps. default print progress time step. skip.check TRUE, skips default error checking structure consistency parameter values, initial conditions, control settings running base epidemic models. Setting FALSE recommended running models new modules specified. raw.output TRUE, netsim output list raw data (one per simulation) instead cleaned formatted netsim object. tergmLite.track.duration TRUE, track duration information models tergmLite simulations. Supports multilayer specification. set.control.ergm Control arguments passed ergm::simulate_formula.network. netsim, used initializing network edapprox = TRUE. simulations netsim use tergm. Supports multilayer specification. set.control.tergm Control arguments passed tergm::simulate_formula.network. See help file netdx details examples specifying parameter. Supports multilayer specification. save.diss.stats TRUE, netsim compute save duration dissolution statistics plotting printing, provided save.network TRUE, tergmLite FALSE, dissolution model homogeneous. dat.updates Either NULL, single function taking arguments dat, , network, list functions length one greater number networks simulated, function list taking arguments dat . dat main netsim_dat class object, current timestep, network index indicating current position within sequence network (re)simulations time step. single function passed, called first network simulated network simulated, network = 0L first network simulated network = ith network simulated. list functions passed, first function called first network simulated, + 1th function called ith network simulated. (Note = 0L used initial cross-sectional simulations sim_nets_t1.) function(s) return netsim_dat object updates needed correctly represent network states calls simulate /summary. can useful nodal attributes appearing one network model depend nodal degrees different network. ... Additional control settings passed model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Settings for Stochastic Network Models — control.net","text":"EpiModel object class control.net.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Control Settings for Stochastic Network Models — control.net","text":"control.net sets required control settings network model solved netsim function. Controls required base model types passing original process modules. overview control settings base models, consult Network Modeling Epidemics course materials base models, type argument necessary parameter default.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.net.html","id":"the-attr-rules-argument","dir":"Reference","previous_headings":"","what":"The attr.rules Argument","title":"Control Settings for Stochastic Network Models — control.net","text":"attr.rules parameter used specify rules nodal attribute values incoming nodes set. rules necessary models incoming nodes (.e., arrivals). three rules available attribute value: current: new nodes assigned attribute proportion distribution attribute among existing nodes current time step. t1: new nodes assigned attribute proportion distribution attribute among nodes time 1 (, proportions set original network netest). Value: new nodes assigned specific value, variation. example, rules list attr.rules = list(race = \"t1\", sex = \"current\", status = \"s\") specifies race, sex, status attributes set incoming nodes. default, rule \"current\" attributes except status, case \"s\" (, incoming nodes susceptible).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.net.html","id":"checkpointing-simulations","dir":"Reference","previous_headings":"","what":"Checkpointing Simulations","title":"Control Settings for Stochastic Network Models — control.net","text":"netsim built-checkpoint system prevent losing computation work function interrupted (SIGINT, power loss, time limit exceeded computation cluster). enabled, simulation saved every .checkpoint.steps time steps. , checkpoint enabled simulation launched netsim, restart last checkpoint available saved data. enable checkpoint capabilities netsim, two control arguments set: .checkpoint.steps, positive number time steps run file save; .checkpoint.dir, path directory save checkpointed data. .checkpoint.dir directory exist, netsim attempt create first checkpoint save. two controls defined, one can simply re-run netsim arguments restart set simulations interrupted. Simulations checkpointed individually: example, 3 simulations run single core, first 2 finished, interruption occurs third, netsim restart third one last checkpoint. .checkpoint.compress argument can set overwrite compress argument saveRDS used save checkpointed data. current default saveRDS gunzip (gz), provides fast compression usually works well netsim objects. default, netsim reaches end simulations, checkpoint data directory content removed returning netsim object. .checkpoint.keep argument can set TRUE prevent removal inspect raw simulation objects.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.net.html","id":"new-modules","dir":"Reference","previous_headings":"","what":"New Modules","title":"Control Settings for Stochastic Network Models — control.net","text":"Base network models use set module functions specify individual nodes network subjected infection, recovery, demographics, processes. Core modules listed .FUN arguments. module, default function used simulation. default infection module, example, contained infection.net function. original models, one may substitute replacement module functions default functions. New modules may added workflow time step passing module function via ... argument. Consult Extending EpiModel section Network Modeling Epidemics course materials. One may remove existing modules, arrivals.FUN, workflow setting parameter value argument NULL.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/control.net.html","id":"end-horizon","dir":"Reference","previous_headings":"","what":"End Horizon","title":"Control Settings for Stochastic Network Models — control.net","text":"netsim implements \"End Horizon\" mechanism, set modules removed simulation specific time step. enabled end.horizon parameter control.net. parameter must receive list fields , time step end horizon occurs, modules, character vector names modules remove. (e.g `list(= 208, modules = c(\"arrivals.FUN\", \"infections.FUN\")))","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/copy_datattr_to_nwattr.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Vertex Attributes from the netsim_dat List to the Network Objects — copy_datattr_to_nwattr","title":"Copy Vertex Attributes from the netsim_dat List to the Network Objects — copy_datattr_to_nwattr","text":"Copies vertex attributes stored main attr list netsim_dat object network objects stored netsim_dat object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/copy_datattr_to_nwattr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Vertex Attributes from the netsim_dat List to the Network Objects — copy_datattr_to_nwattr","text":"","code":"copy_datattr_to_nwattr(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/copy_datattr_to_nwattr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Vertex Attributes from the netsim_dat List to the Network Objects — copy_datattr_to_nwattr","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/copy_datattr_to_nwattr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Vertex Attributes from the netsim_dat List to the Network Objects — copy_datattr_to_nwattr","text":"updated netsim_dat main list object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/copy_nwattr_to_datattr.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Vertex Attributes From Network to netsim_dat List — copy_nwattr_to_datattr","title":"Copy Vertex Attributes From Network to netsim_dat List — copy_nwattr_to_datattr","text":"Copies vertex attributes stored network object main attr list netsim_dat data object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/copy_nwattr_to_datattr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Vertex Attributes From Network to netsim_dat List — copy_nwattr_to_datattr","text":"","code":"copy_nwattr_to_datattr(dat, nw)"},{"path":"http://epimodel.github.io/EpiModel/reference/copy_nwattr_to_datattr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Vertex Attributes From Network to netsim_dat List — copy_nwattr_to_datattr","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. nw Network copy vertex attributes.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/copy_nwattr_to_datattr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Vertex Attributes From Network to netsim_dat List — copy_nwattr_to_datattr","text":"updated netsim_dat main list object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/create_dat_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Minimal netsim_dat Main List Object for a Network Model — create_dat_object","title":"Create a Minimal netsim_dat Main List Object for a Network Model — create_dat_object","text":"helper function populates netsim_dat main list object minimal required elements. parameters optional. none given resulting object shell list class netsim_dat different named elements defined empty lists.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/create_dat_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Minimal netsim_dat Main List Object for a Network Model — create_dat_object","text":"","code":"create_dat_object(   param = list(),   init = list(),   control = list(),   run = list() )"},{"path":"http://epimodel.github.io/EpiModel/reference/create_dat_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Minimal netsim_dat Main List Object for a Network Model — create_dat_object","text":"param EpiModel object class param.net. init EpiModel object class init.net. control EpiModel object class control.net. run list contains objects created netsim required step communication. list must preserved restarting models.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/create_dat_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Minimal netsim_dat Main List Object for a Network Model — create_dat_object","text":"netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/create_scenario_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a list of EpiModel scenarios from a data.frame of scenarios — create_scenario_list","title":"Make a list of EpiModel scenarios from a data.frame of scenarios — create_scenario_list","text":"EpiModel scenario allows one multiple set parameters applied model predefined timesteps. usually used researcher wants model counterfactuals using pre calibrated model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/create_scenario_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a list of EpiModel scenarios from a data.frame of scenarios — create_scenario_list","text":"","code":"create_scenario_list(scenarios.df)"},{"path":"http://epimodel.github.io/EpiModel/reference/create_scenario_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a list of EpiModel scenarios from a data.frame of scenarios — create_scenario_list","text":"scenarios.df data.frame","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/create_scenario_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a list of EpiModel scenarios from a data.frame of scenarios — create_scenario_list","text":"list EpiModel scenarios","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/create_scenario_list.html","id":"scenarios-df","dir":"Reference","previous_headings":"","what":"scenarios.df","title":"Make a list of EpiModel scenarios from a data.frame of scenarios — create_scenario_list","text":"scenarios.df data.frame values used parameters. must contain \".\" column, specifying changes occur. requires \"updater\" module EpiModel. See, vignette. \".\" value row less two, changes applied parameter list iteself. second mandatory column \".scenario.id\". used distinguish different scenarios. multiple rows share \".scenario.id\", resulting scenario contain one updater per row. permits modifying parameters multiple points time. (e.g. intervention limited time). column names must correspond either : name one parameter parameter size 1 name parameter \"_1\", \"_2\", \"N\" second part position value parameter size > 1. means parameter names contain underscore \"\". (e.g \".rate\", \"d.rate_1\", \"d.rate_2\")","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.dcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Checking of Inputs for Deterministic Compartmental Models — crosscheck.dcm","title":"Cross Checking of Inputs for Deterministic Compartmental Models — crosscheck.dcm","text":"function checks three parameter lists param.dcm, init.dcm, control.dcm consistent.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.dcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Checking of Inputs for Deterministic Compartmental Models — crosscheck.dcm","text":"","code":"crosscheck.dcm(param, init, control)"},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.dcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Checking of Inputs for Deterministic Compartmental Models — crosscheck.dcm","text":"param EpiModel object class param.dcm. init EpiModel object class init.dcm. control EpiModel object class control.dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.dcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Checking of Inputs for Deterministic Compartmental Models — crosscheck.dcm","text":"function returns objects.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Checking of Inputs for Stochastic Individual Contact Models — crosscheck.icm","title":"Cross Checking of Inputs for Stochastic Individual Contact Models — crosscheck.icm","text":"function checks three parameter lists param.icm, init.icm, control.icm consistent.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Checking of Inputs for Stochastic Individual Contact Models — crosscheck.icm","text":"","code":"crosscheck.icm(param, init, control)"},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Checking of Inputs for Stochastic Individual Contact Models — crosscheck.icm","text":"param EpiModel object class param.icm. init EpiModel object class init.icm. control EpiModel object class control.icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Checking of Inputs for Stochastic Individual Contact Models — crosscheck.icm","text":"function returns objects.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Checking of Inputs for Stochastic Network Models — crosscheck.net","title":"Cross Checking of Inputs for Stochastic Network Models — crosscheck.net","text":"function checks estimation object netest three parameter lists param.net, init.net, control.net consistent.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Checking of Inputs for Stochastic Network Models — crosscheck.net","text":"","code":"crosscheck.net(x, param, init, control)"},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Checking of Inputs for Stochastic Network Models — crosscheck.net","text":"x EpiModel object class netest. param EpiModel object class param.net. init EpiModel object class init.net. control EpiModel object class control.net.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/crosscheck.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Checking of Inputs for Stochastic Network Models — crosscheck.net","text":"function returns objects.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Deterministic Compartmental Models — dcm","title":"Deterministic Compartmental Models — dcm","text":"Solves deterministic compartmental epidemic models infectious disease.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deterministic Compartmental Models — dcm","text":"","code":"dcm(param, init, control)"},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deterministic Compartmental Models — dcm","text":"param Model parameters, object class param.dcm. init Initial conditions, object class init.dcm. control Control settings, object class control.dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deterministic Compartmental Models — dcm","text":"list class dcm following elements: param: epidemic parameters passed model param, additional parameters added necessary. control: control settings passed model control, additional controls added necessary. epi: list data frames, one epidemiological output model. Outputs base models always include size compartment, well flows , , compartments.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deterministic Compartmental Models — dcm","text":"dcm function uses ordinary differential equation solver deSolve package model disease deterministic compartmental system. parameterization models follows standard approach EpiModel, epidemic parameters, initial conditions, control settings. dcm function performs  modeling base model types original models new structures. Base model types include one-group two-group models disease types Susceptible-Infected (SI), Susceptible-Infected-Recovered (SIR), Susceptible-Infected-Susceptible (SIS). base original models require param, init, control inputs.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Deterministic Compartmental Models — dcm","text":"Soetaert K, Petzoldt T, Setzer W. Solving Differential Equations R: Package deSolve. Journal Statistical Software. 2010; 33(9): 1-25. doi:10.18637/jss.v033.i09 .","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deterministic Compartmental Models — dcm","text":"","code":"## Example 1: SI Model (One-Group) # Set parameters param <- param.dcm(inf.prob = 0.2, act.rate = 0.25) init <- init.dcm(s.num = 500, i.num = 1) control <- control.dcm(type = \"SI\", nsteps = 500) mod1 <- dcm(param, init, control) mod1 #> EpiModel Simulation #> ======================= #> Model class: dcm #>  #> Simulation Summary #> ----------------------- #> Model type: SI #> No. runs: 1 #> No. time steps: 500 #> No. groups: 1 #>  #> Model Parameters #> ----------------------- #> inf.prob = 0.2 #> act.rate = 0.25 #>  #> Model Output #> ----------------------- #> Variables: s.num i.num si.flow num plot(mod1)   ## Example 2: SIR Model with Vital Dynamics (One-Group) param <- param.dcm(inf.prob = 0.2, act.rate = 5,                    rec.rate = 1/3, a.rate = 1/90, ds.rate = 1/100,                    di.rate = 1/35, dr.rate = 1/100) init <- init.dcm(s.num = 500, i.num = 1, r.num = 0) control <- control.dcm(type = \"SIR\", nsteps = 500) mod2 <- dcm(param, init, control) mod2 #> EpiModel Simulation #> ======================= #> Model class: dcm #>  #> Simulation Summary #> ----------------------- #> Model type: SIR #> No. runs: 1 #> No. time steps: 500 #> No. groups: 1 #>  #> Model Parameters #> ----------------------- #> inf.prob = 0.2 #> act.rate = 5 #> rec.rate = 0.3333333 #> a.rate = 0.01111111 #> ds.rate = 0.01 #> di.rate = 0.02857143 #> dr.rate = 0.01 #>  #> Model Output #> ----------------------- #> Variables: s.num i.num r.num si.flow ir.flow a.flow  #> ds.flow di.flow dr.flow num plot(mod2)   ## Example 3: SIS Model with act.rate Sensitivity Parameter param <- param.dcm(inf.prob = 0.2, act.rate = seq(0.1, 0.5, 0.1),                    rec.rate = 1/50) init <- init.dcm(s.num = 500, i.num = 1) control <- control.dcm(type = \"SIS\", nsteps = 500) mod3 <- dcm(param, init, control) mod3 #> EpiModel Simulation #> ======================= #> Model class: dcm #>  #> Simulation Summary #> ----------------------- #> Model type: SIS #> No. runs: 5 #> No. time steps: 500 #> No. groups: 1 #>  #> Model Parameters #> ----------------------- #> inf.prob = 0.2 #> act.rate = 0.1 0.2 0.3 0.4 0.5 #> rec.rate = 0.02 #>  #> Model Output #> ----------------------- #> Variables: s.num i.num si.flow is.flow num plot(mod3)   ## Example 4: SI Model with Vital Dynamics (Two-Group) param <- param.dcm(inf.prob = 0.4,  inf.prob.g2 = 0.1,                    act.rate = 0.25, balance = \"g1\",                    a.rate = 1/100, a.rate.g2 = NA,                    ds.rate = 1/100, ds.rate.g2 = 1/100,                    di.rate = 1/50, di.rate.g2 = 1/50) init <- init.dcm(s.num = 500, i.num = 1,                  s.num.g2 = 500, i.num.g2 = 0) control <- control.dcm(type = \"SI\", nsteps = 500) mod4 <- dcm(param, init, control) mod4 #> EpiModel Simulation #> ======================= #> Model class: dcm #>  #> Simulation Summary #> ----------------------- #> Model type: SI #> No. runs: 1 #> No. time steps: 500 #> No. groups: 2 #>  #> Model Parameters #> ----------------------- #> inf.prob = 0.4 #> act.rate = 0.25 #> a.rate = 0.01 #> ds.rate = 0.01 #> di.rate = 0.02 #> inf.prob.g2 = 0.1 #> a.rate.g2 = NA #> ds.rate.g2 = 0.01 #> di.rate.g2 = 0.02 #> balance = g1 #>  #> Model Output #> ----------------------- #> Variables: s.num i.num s.num.g2 i.num.g2 si.flow a.flow  #> ds.flow di.flow si.flow.g2 a.flow.g2 ds.flow.g2 di.flow.g2  #> num num.g2 plot(mod4)"},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.mods.html","id":null,"dir":"Reference","previous_headings":"","what":"Deterministic Compartmental Model Functions — dcm.mods","title":"Deterministic Compartmental Model Functions — dcm.mods","text":"functions parameterize base deterministic compartmental models solved using dcm function.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.mods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deterministic Compartmental Model Functions — dcm.mods","text":"","code":"mod_SI_1g_cl(t, t0, parms)  mod_SI_1g_op(t, t0, parms)  mod_SI_2g_cl(t, t0, parms)  mod_SI_2g_op(t, t0, parms)  mod_SIR_1g_cl(t, t0, parms)  mod_SIR_1g_op(t, t0, parms)  mod_SIR_2g_cl(t, t0, parms)  mod_SIR_2g_op(t, t0, parms)  mod_SIS_1g_cl(t, t0, parms)  mod_SIS_1g_op(t, t0, parms)  mod_SIS_2g_cl(t, t0, parms)  mod_SIS_2g_op(t, t0, parms)"},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.mods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deterministic Compartmental Model Functions — dcm.mods","text":"t Time vector, passed model function internally dcm via control settings control.dcm. t0 Initial conditions model, passed model function internally dcm via initial conditions init.dcm. parms Model parameters, passed model function internally dcm via parameter settings param.dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dcm.mods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deterministic Compartmental Model Functions — dcm.mods","text":"help page shows names base deterministic compartmental model functions supported EpiModel. Base models already programmed interally within software. model functions may printed see internal structure, either directly console using print.mod argument control.dcm. naming convention models listed follows format: mod_<disease type>_<number groups>_<vital dynamics>. supported disease types SI, SIS, SIR; number groups 1 2; vital dynamic options closed (fixed population composition) open (arrivals departures).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dedup_cumulative_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Deduplicate a cumulative edgelist by combining overlapping edges — dedup_cumulative_edgelist","title":"Deduplicate a cumulative edgelist by combining overlapping edges — dedup_cumulative_edgelist","text":"Deduplicate cumulative edgelist combining overlapping edges","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dedup_cumulative_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deduplicate a cumulative edgelist by combining overlapping edges — dedup_cumulative_edgelist","text":"","code":"dedup_cumulative_edgelist(el)"},{"path":"http://epimodel.github.io/EpiModel/reference/dedup_cumulative_edgelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deduplicate a cumulative edgelist by combining overlapping edges — dedup_cumulative_edgelist","text":"el cumulative edgelist potentially overlapping edges","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dedup_cumulative_edgelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deduplicate a cumulative edgelist by combining overlapping edges — dedup_cumulative_edgelist","text":"cumulative edgelist overlapping edges","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Elements from Attribute List — delete_attr","title":"Delete Elements from Attribute List — delete_attr","text":"Deletes elements main attribute list.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Elements from Attribute List — delete_attr","text":"","code":"delete_attr(dat, ids)"},{"path":"http://epimodel.github.io/EpiModel/reference/delete_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete Elements from Attribute List — delete_attr","text":"dat Either netsim_dat class object passed netsim simulations, main data object passed icm simulations. ids ID numbers delete list.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete Elements from Attribute List — delete_attr","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Edges That Include Specified Vertices — delete_edges","title":"Remove Edges That Include Specified Vertices — delete_edges","text":"Given current two-column matrix edges vector vertex IDs, function removes rows edgelist IDs present.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Edges That Include Specified Vertices — delete_edges","text":"","code":"delete_edges(el, vid)"},{"path":"http://epimodel.github.io/EpiModel/reference/delete_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Edges That Include Specified Vertices — delete_edges","text":"el two-column matrix current edges (edgelist). vid vector vertex IDs whose edges deleted edgelist.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Edges That Include Specified Vertices — delete_edges","text":"Returns updated edgelist object, edges including specified vertices removed.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_vertices.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Version of network::delete.vertices for Edgelist-formatted Network — delete_vertices","title":"Fast Version of network::delete.vertices for Edgelist-formatted Network — delete_vertices","text":"Given current two-column matrix edges vector IDs delete matrix, function first removes rows edgelist IDs present permutes downward index IDs edgelist numerically larger IDs deleted.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_vertices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast Version of network::delete.vertices for Edgelist-formatted Network — delete_vertices","text":"","code":"delete_vertices(el, vid)"},{"path":"http://epimodel.github.io/EpiModel/reference/delete_vertices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Version of network::delete.vertices for Edgelist-formatted Network — delete_vertices","text":"el two-column matrix current edges (edgelist) attribute variable n containing total current network size. vid vector IDs delete edgelist.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_vertices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Version of network::delete.vertices for Edgelist-formatted Network — delete_vertices","text":"Returns updated edgelist object, el, edges deleted vertices removed edgelist ID numbers remaining edges permuted downward.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_vertices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast Version of network::delete.vertices for Edgelist-formatted Network — delete_vertices","text":"function used EpiModel modules remove vertices (nodes) edgelist object account exits population (e.g., deaths -migration).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/delete_vertices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast Version of network::delete.vertices for Edgelist-formatted Network — delete_vertices","text":"","code":"if (FALSE) { # \\dontrun{ library(\"EpiModel\") set.seed(12345) nw <- network_initialize(100) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20) x <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)  param <- param.net(inf.prob = 0.3) init <- init.net(i.num = 10) control <- control.net(type = \"SI\", nsteps = 100, nsims = 5,                        tergmLite = TRUE)  # Set seed for reproducibility set.seed(123456)  # networkLite representation structure after initialization dat <- crosscheck.net(x, param, init, control) dat <- initialize.net(x, param, init, control)  # Current edges head(dat$el[[1]], 20)  # Remove nodes 1 and 2 nodes.to.delete <- 1:2 dat$el[[1]] <- delete_vertices(dat$el[[1]], nodes.to.delete)  # Newly permuted edges head(dat$el[[1]], 20) } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/depart_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Depart Nodes from the netsim_dat Object — depart_nodes","title":"Depart Nodes from the netsim_dat Object — depart_nodes","text":"Depart Nodes netsim_dat Object","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/depart_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Depart Nodes from the netsim_dat Object — depart_nodes","text":"","code":"depart_nodes(dat, departures)"},{"path":"http://epimodel.github.io/EpiModel/reference/depart_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Depart Nodes from the netsim_dat Object — depart_nodes","text":"dat netsim_dat object departures vertex ids nodes depart","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/depart_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Depart Nodes from the netsim_dat Object — depart_nodes","text":"updated netsim_dat object nodes departures departed","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/depart_nodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Depart Nodes from the netsim_dat Object — depart_nodes","text":"tergmLite FALSE, vertex ids departures deactivated (current timestep onward) networkDynamic stored dat$nw. tergmLite TRUE, vertex ids departures deleted dat$el, dat$attr, dat$net_attr.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/departures.2g.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Departures: netsim Module — departures.2g.net","title":"Departures: netsim Module — departures.2g.net","text":"function simulates departure use netsim simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/departures.2g.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Departures: netsim Module — departures.2g.net","text":"","code":"departures.2g.net(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/departures.2g.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Departures: netsim Module — departures.2g.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/departures.2g.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Departures: netsim Module — departures.2g.net","text":"updated netsim_dat main list object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/departures.icm.bip.html","id":null,"dir":"Reference","previous_headings":"","what":"Departure: Bipartite icm Module — departures.icm.bip","title":"Departure: Bipartite icm Module — departures.icm.bip","text":"function simulates departure use icm simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/departures.icm.bip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Departure: Bipartite icm Module — departures.icm.bip","text":"","code":"departures.icm.bip(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/departures.icm.bip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Departure: Bipartite icm Module — departures.icm.bip","text":"dat Main icm_dat class data object passed icm simulations. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/departures.icm.bip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Departure: Bipartite icm Module — departures.icm.bip","text":"updated icm_dat class main data object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/departures.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Departure: icm Module — departures.icm","title":"Departure: icm Module — departures.icm","text":"function simulates departure use icm simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/departures.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Departure: icm Module — departures.icm","text":"","code":"departures.icm(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/departures.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Departure: icm Module — departures.icm","text":"dat Main icm_dat class data object passed icm simulations. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/departures.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Departure: icm Module — departures.icm","text":"updated icm_dat class main data object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/departures.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Departures: netsim Module — departures.net","title":"Departures: netsim Module — departures.net","text":"function simulates departure use netsim simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/departures.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Departures: netsim Module — departures.net","text":"","code":"departures.net(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/departures.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Departures: netsim Module — departures.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/departures.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Departures: netsim Module — departures.net","text":"updated netsim_dat main list object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/discord_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Discordant Edgelist — discord_edgelist","title":"Discordant Edgelist — discord_edgelist","text":"function returns data.frame discordant edgelist, defined set edges status two partners one susceptible one infected.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/discord_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discordant Edgelist — discord_edgelist","text":"","code":"discord_edgelist(dat, at, network = 1, infstat = \"i\", include.network = FALSE)"},{"path":"http://epimodel.github.io/EpiModel/reference/discord_edgelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discordant Edgelist — discord_edgelist","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step. network case models multiple networks, network pull current edgelist . Default network = 1. infstat Character vector disease status values considered infectious, defining SI pairs. include.network network value included final column discordant edgelist?","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/discord_edgelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discordant Edgelist — discord_edgelist","text":"function returns data.frame following columns: time: time step queried. sus: ID number susceptible partner. inf: ID number infectious partner. output function added transmission data.frame object requested output netsim simulations save.trans=TRUE argument.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/discord_edgelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Discordant Edgelist — discord_edgelist","text":"internal function works within parent infection.net function pull current edgelist dynamic network object, look disease status head tails edge, subset list edges one susceptible one infected node. EpiModel v2.0.3 extended function allowing flexibility definition disease status counts infectious, infstat parameter. extension models multiple infectious states, can vector length greater 1: infstat = c(\"\", \"\").","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/dissolution_coefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Dissolution Coefficients for Stochastic Network Models — dissolution_coefs","title":"Dissolution Coefficients for Stochastic Network Models — dissolution_coefs","text":"Calculates dissolution coefficients, given dissolution model average edge duration, pass offsets ERGM/TERGM model fit netest.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dissolution_coefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dissolution Coefficients for Stochastic Network Models — dissolution_coefs","text":"","code":"dissolution_coefs(dissolution, duration, d.rate = 0)"},{"path":"http://epimodel.github.io/EpiModel/reference/dissolution_coefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dissolution Coefficients for Stochastic Network Models — dissolution_coefs","text":"dissolution Right-hand sided STERGM dissolution formula (see netest). See list supported dissolution models. duration vector mean edge durations arbitrary time units. d.rate Departure exit rate population, single homogeneous rate applies entire population.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dissolution_coefs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dissolution Coefficients for Stochastic Network Models — dissolution_coefs","text":"list class disscoef following elements: dissolution: right-hand sided STERGM dissolution formula passed function call. duration: mean edge durations passed function. coef.crude: mean durations transformed logit coefficients. coef.adj: crude coefficients adjusted risk departure edge persistence, d.rate argument supplied. coef.form.corr: corrections subtracted formation coefficients. d.rate: departure rate. diss.model.type: form dissolution model; options include edgesonly, nodematch, nodemix.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dissolution_coefs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dissolution Coefficients for Stochastic Network Models — dissolution_coefs","text":"function performs two calculations dissolution coefficients used network model estimated netest: Transformation: mean durations edges network mathematically transformed logit coefficients. Adjustment: dynamic network simulation open population (departures), necessary adjust coefficients; upward adjustment accounts departure competing risk edge dissolution. current dissolution models supported function network model estimation netest follows: ~offset(edges): homogeneous dissolution model edge duration partnerships. requires specifying one duration value. ~offset(edges) + offset(nodematch(\"<attr>\")): heterogeneous model edge duration varies whether nodes dyad similar values specified attribute. duration vector now contain two values: first mean edge duration non-matched dyads, second duration matched dyads. ~offset(edges) + offset(nodemix(\"<attr>\")): heterogeneous model extends nodematch model include non-binary attributes homophily. duration vector first contain base value, values every possible combination term.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/dissolution_coefs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dissolution Coefficients for Stochastic Network Models — dissolution_coefs","text":"","code":"## Homogeneous dissolution model with no departures dissolution_coefs(dissolution = ~offset(edges), duration = 25) #> Dissolution Coefficients #> ======================= #> Dissolution Model: ~offset(edges) #> Target Statistics: 25 #> Crude Coefficient: 3.178054 #> Mortality/Exit Rate: 0 #> Adjusted Coefficient: 3.178054  ## Homogeneous dissolution model with departures dissolution_coefs(dissolution = ~offset(edges), duration = 25,                   d.rate = 0.001) #> Dissolution Coefficients #> ======================= #> Dissolution Model: ~offset(edges) #> Target Statistics: 25 #> Crude Coefficient: 3.178054 #> Mortality/Exit Rate: 0.001 #> Adjusted Coefficient: 3.229321  ## Heterogeneous dissolution model in which same-race edges have ## shorter duration compared to mixed-race edges, with no departures dissolution_coefs(dissolution = ~offset(edges) + offset(nodematch(\"race\")),                   duration = c(20, 10)) #> Dissolution Coefficients #> ======================= #> Dissolution Model: ~offset(edges) + offset(nodematch(\"race\")) #> Target Statistics: 20 10 #> Crude Coefficient: 2.944439 -0.7472144 #> Mortality/Exit Rate: 0 #> Adjusted Coefficient: 2.944439 -0.7472144  ## Heterogeneous dissolution model in which same-race edges have ## shorter duration compared to mixed-race edges, with departures dissolution_coefs(dissolution = ~offset(edges) + offset(nodematch(\"race\")),                   duration = c(20, 10), d.rate = 0.001) #> Dissolution Coefficients #> ======================= #> Dissolution Model: ~offset(edges) + offset(nodematch(\"race\")) #> Target Statistics: 20 10 #> Crude Coefficient: 2.944439 -0.7472144 #> Mortality/Exit Rate: 0.001 #> Adjusted Coefficient: 2.98524 -0.7678231  if (FALSE) { # \\dontrun{ ## Extended example for differential homophily by age group # Set up the network with nodes categorized into 5 age groups nw <- network_initialize(n = 1000) age.grp <- sample(1:5, 1000, TRUE) nw <- set_vertex_attribute(nw, \"age.grp\", age.grp)  # durations = non-matched, age.grp1 & age.grp1, age.grp2 & age.grp2, ... # TERGM will include differential homophily by age group with nodematch term # Target stats for the formation model are overall edges, and then the number # matched within age.grp 1, age.grp 2, ..., age.grp 5 form <- ~edges + nodematch(\"age.grp\", diff = TRUE) target.stats <- c(450, 100, 125, 40, 80, 100)  # Target stats for the dissolution model are duration of non-matched edges, # then duration of edges matched within age.grp 1, age.grp 2, ..., age.grp 5 durs <- c(60, 30, 80, 100, 125, 160) diss <- dissolution_coefs(~offset(edges) +                             offset(nodematch(\"age.grp\", diff = TRUE)),                           duration = durs)  # Fit the TERGM fit <- netest(nw, form, target.stats, diss)  # Full diagnostics to evaluate model fit dx <- netdx(fit, nsims = 10, ncores = 4, nsteps = 300) print(dx)  # Simulate one long time series to examine timed edgelist dx <- netdx(fit, nsims = 1, nsteps = 5000, keep.tedgelist = TRUE)  # Extract timed-edgelist te <- as.data.frame(dx) head(te)  # Limit to non-censored edges te <- te[which(te$onset.censored == FALSE & te$terminus.censored == FALSE),          c(\"head\", \"tail\", \"duration\")] head(te)  # Look up the age group of head and tail nodes te$ag.head <- age.grp[te$head] te$ag.tail <- age.grp[te$tail] head(te)  # Recover average edge durations for age-group pairing mean(te$duration[te$ag.head != te$ag.tail]) mean(te$duration[te$ag.head == 1 & te$ag.tail == 1]) mean(te$duration[te$ag.head == 2 & te$ag.tail == 2]) mean(te$duration[te$ag.head == 3 & te$ag.tail == 3]) mean(te$duration[te$ag.head == 4 & te$ag.tail == 4]) mean(te$duration[te$ag.head == 5 & te$ag.tail == 5]) durs } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/edgelist_censor.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of Edge Censoring — edgelist_censor","title":"Table of Edge Censoring — edgelist_censor","text":"Outputs table number percent edges left-censored, right-censored, -censored, uncensored networkDynamic object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/edgelist_censor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of Edge Censoring — edgelist_censor","text":"","code":"edgelist_censor(el)"},{"path":"http://epimodel.github.io/EpiModel/reference/edgelist_censor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table of Edge Censoring — edgelist_censor","text":"el timed edgelist start end times extracted networkDynamic object using .data.frame.networkDynamic function.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/edgelist_censor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table of Edge Censoring — edgelist_censor","text":"4 x 2 table containing number percent edges el left-censored, right-censored, -censored, uncensored.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/edgelist_censor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Table of Edge Censoring — edgelist_censor","text":"Given STERGM simulation specified number time steps, edges within simulation may left-censored (started first step), right-censored (continued last step), right left-censored, uncensored. amount censoring increase average edge duration approaches length simulation.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/edgelist_censor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table of Edge Censoring — edgelist_censor","text":"","code":"# Initialize and parameterize network model nw <- network_initialize(n = 100) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)  # Model estimation est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  # Simulate the network and extract a timed edgelist dx <- netdx(est, nsims = 1, nsteps = 100, keep.tedgelist = TRUE,       verbose = FALSE) el <- as.data.frame(dx)  # Calculate censoring edgelist_censor(el) #>             num       pct #> Left Cens.    0 0.0000000 #> Right Cens.  56 0.1800643 #> Both Cens.    0 0.0000000 #> No Cens.    255 0.8199357"},{"path":"http://epimodel.github.io/EpiModel/reference/edges_correct.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjustment for the Edges Coefficient with Changing Network Size — edges_correct","title":"Adjustment for the Edges Coefficient with Changing Network Size — edges_correct","text":"Adjusts edges coefficient dynamic network model simulated netsim preserve mean degree nodes network. Requires >= 2. Maintains num(.g2) epi fields (initialized sim_nets_t1) computing coefficient adjustment.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/edges_correct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjustment for the Edges Coefficient with Changing Network Size — edges_correct","text":"","code":"edges_correct(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/edges_correct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjustment for the Edges Coefficient with Changing Network Size — edges_correct","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/edges_correct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjustment for the Edges Coefficient with Changing Network Size — edges_correct","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/epi_trackers.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to run the user-provided epi trackers — epi_trackers","title":"Function to run the user-provided epi trackers — epi_trackers","text":"see \"Working Custom Attributes Summary Statistics EpiModel\" vignette.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/epi_trackers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to run the user-provided epi trackers — epi_trackers","text":"","code":"epi_trackers(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/epi_trackers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to run the user-provided epi trackers — epi_trackers","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/epi_trackers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to run the user-provided epi trackers — epi_trackers","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/epi_trackers.html","id":"the-tracker-list-list","dir":"Reference","previous_headings":"","what":"The tracker.list list","title":"Function to run the user-provided epi trackers — epi_trackers","text":".tracker.list list NAMED functions stored control list main netsim_dat class object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/epi_trackers.html","id":"tracker-functions","dir":"Reference","previous_headings":"","what":"Tracker Functions","title":"Function to run the user-provided epi trackers — epi_trackers","text":"function apply tracker functions present control list .tracker.list. tracker must function EXACTLY one argument: netsim_dat main list object. must return VALUE length one (numeric, logical character).","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/epi_trackers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to run the user-provided epi trackers — epi_trackers","text":"","code":"if (FALSE) { # \\dontrun{  # Create some trackers epi_prop_infected <- function(dat) {   # we need two attributes for our calculation: `status` and `active`   needed_attributes <- c(\"status\", \"active\")   # we use `with` to simplify code   output <- with(EpiModel::get_attr_list(dat, needed_attributes), {     pop <- active == 1             # we only look at active nodes     cond <- status == \"i\"   # which are infected     # how many are `infected` among the `active`     sum(cond & pop, na.rm = TRUE) / sum(pop, na.rm = TRUE)   })   return(output) }  epi_s_num <- function(dat) {   needed_attributes <- c(\"status\")   output <- with(get_attr_list(dat, needed_attributes), {     sum(status == \"s\", na.rm = TRUE)   })   return(output) }  # Store the trackers in a named list. The names will be used as column names # for in the `epi` list some.trackers <- list(   prop_infected = epi_prop_infected,   s_num         = epi_s_num )  # Make a simple SI model with custom trackers control <- EpiModel::control.net(   type = \"SI\",   nsims = 1,   nsteps = 50,   verbose = FALSE,   .tracker.list = some.trackers )  param <- EpiModel::param.net(   inf.prob = 0.3,   act.rate = 0.1 )  nw <- network_initialize(n = 50) nw <- set_vertex_attribute(nw, \"race\", rbinom(50, 1, 0.5)) est <- EpiModel::netest(   nw,   formation = ~edges,   target.stats = 25,   coef.diss = dissolution_coefs(~offset(edges), 10, 0),   verbose = FALSE )  init <- EpiModel::init.net(i.num = 10) sim <- EpiModel::netsim(est, param, init, control)  d <- as.data.frame(sim) d } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/epiweb.html","id":null,"dir":"Reference","previous_headings":"","what":"EpiModel Web — epiweb","title":"EpiModel Web — epiweb","text":"Runs web browser-based GUI deterministic compartmental models, stochastic individual contact models, basic network models.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/epiweb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EpiModel Web — epiweb","text":"","code":"epiweb(class, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/epiweb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EpiModel Web — epiweb","text":"class Model class, options \"dcm\", \"icm\", \"net\". ... Additional arguments passed shiny::runApp.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/epiweb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EpiModel Web — epiweb","text":"epiweb runs web-based GUI one-group deterministic compartmental models, stochastic individual contact models, stochastic network models user input model type, state sizes, parameters. Model output may plotted, summarized, saved raw data using core EpiModel functionality model classes. applications built using shiny package framework.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/epiweb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EpiModel Web — epiweb","text":"RStudio. shiny: Web Application Framework R. R package version 1.0.5. 2015. https://shiny.posit.co/.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/epiweb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EpiModel Web — epiweb","text":"","code":"if (FALSE) { # \\dontrun{ ## Deterministic compartmental models epiweb(class = \"dcm\")  ## Stochastic individual contact models epiweb(class = \"icm\")  ## Stochastic network models epiweb(class = \"net\") } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/format_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Format One Parameter for Printing with the print.param.xxx Functions — format_param","title":"Format One Parameter for Printing with the print.param.xxx Functions — format_param","text":"Format One Parameter Printing print.param.xxx Functions","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/format_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format One Parameter for Printing with the print.param.xxx Functions — format_param","text":"","code":"format_param(param_name, param_value)"},{"path":"http://epimodel.github.io/EpiModel/reference/format_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format One Parameter for Printing with the print.param.xxx Functions — format_param","text":"param_name name parameter print. param_value value parameter print.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/generate_random_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Values for Random Parameters — generate_random_params","title":"Generate Values for Random Parameters — generate_random_params","text":"function uses generative functions random.params list create values parameters.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/generate_random_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Values for Random Parameters — generate_random_params","text":"","code":"generate_random_params(param, verbose = FALSE)"},{"path":"http://epimodel.github.io/EpiModel/reference/generate_random_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Values for Random Parameters — generate_random_params","text":"param param argument received netsim functions. verbose function output generated values (default = FALSE)?","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/generate_random_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Values for Random Parameters — generate_random_params","text":"fully instantiated param list.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/generate_random_params.html","id":"random-params","dir":"Reference","previous_headings":"","what":"random.params","title":"Generate Values for Random Parameters — generate_random_params","text":"random.params argument param.net function must named list functions return value can used argument name. example , param_random function factory provided EpiModel act.rate tx.halt.part.prob provide bespoke functions. function factory function returns new function (see https://adv-r.hadley.nz/function-factories.html).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/generate_random_params.html","id":"generator-functions","dir":"Reference","previous_headings":"","what":"Generator Functions","title":"Generate Values for Random Parameters — generate_random_params","text":"functions used inside random_params must 0 argument functions returning valid value parameter name.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/generate_random_params.html","id":"param-random-set","dir":"Reference","previous_headings":"","what":"param_random_set","title":"Generate Values for Random Parameters — generate_random_params","text":"random_params list can optionally contain param_random_set element. must data.frame possible values used parameters. column names must correspond either : name one parameter, parameter size 1; name one parameter \"_1\", \"2\", etc. appended, number representing position value, parameter size > 1. means parameter names contain underscores \"\" intend use param_random_set. point param.random.set data.frame allow random parameters correlated. achieve , whole row data.frame selected simulation.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/generate_random_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Values for Random Parameters — generate_random_params","text":"","code":"if (FALSE) { # \\dontrun{  ## Example with only the generator function  # Define random parameter list my_randoms <- list(   act.rate = param_random(c(0.25, 0.5, 0.75)),   tx.prob = function() rbeta(1, 1, 2),   stratified.test.rate = function() c(     rnorm(1, 0.05, 0.01),     rnorm(1, 0.15, 0.03),     rnorm(1, 0.25, 0.05)   ) )  # Parameter model with fixed and random parameters param <- param.net(inf.prob = 0.3, random.params = my_randoms)  # Below, `tx.prob` is set first to 0.3 then assigned a random value using # the function from `my_randoms`. A warning notifying of this overwrite is # therefore produced. param <- param.net(tx.prob = 0.3, random.params = my_randoms)   # Parameters are drawn automatically in netsim by calling the function # within netsim_loop. Demonstrating draws here but this is not used by # end user. paramDraw <- generate_random_params(param, verbose = TRUE) paramDraw   ## Addition of the `param.random.set` `data.frame`  # This function will generate sets of correlated parameters  generate_correlated_params <- function() {    param.unique <- runif(1)    param.set.1 <- param.unique + runif(2)    param.set.2 <- param.unique * rnorm(3)     return(list(param.unique, param.set.1, param.set.2))  }   # Data.frame set of random parameters :  correlated_params <- t(replicate(10, unlist(generate_correlated_params())))  correlated_params <- as.data.frame(correlated_params)  colnames(correlated_params) <- c(    \"param.unique\",    \"param.set.1_1\", \"param.set.1_2\",    \"param.set.2_1\", \"param.set.2_2\", \"param.set.2_3\"  )  # Define random parameter list with the `param.random.set` element my_randoms <- list(   act.rate = param_random(c(0.25, 0.5, 0.75)),   param.random.set = correlated_params )  # Parameter model with fixed and random parameters param <- param.net(inf.prob = 0.3, random.params = my_randoms)  # Parameters are drawn automatically in netsim by calling the function # within netsim_loop. Demonstrating draws here but this is not used by # end user. paramDraw <- generate_random_params(param, verbose = TRUE) paramDraw  } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/geom_bands.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 Geom for Quantile Bands — geom_bands","title":"ggplot2 Geom for Quantile Bands — geom_bands","text":"Plots quantile bands given data.frame stochastic model results icm netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/geom_bands.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 Geom for Quantile Bands — geom_bands","text":"","code":"geom_bands(mapping, lower = 0.25, upper = 0.75, alpha = 0.25, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/geom_bands.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 Geom for Quantile Bands — geom_bands","text":"mapping Standard aesthetic mapping aes() input ggplot2. lower Lower quantile time series. upper Upper quantile time series. alpha Transparency ribbon fill. ... Additional arguments passed stat_summary.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/geom_bands.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggplot2 Geom for Quantile Bands — geom_bands","text":"wrapper around ggplot::stat_summary ribbon geom aesthetic output.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/geom_bands.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 Geom for Quantile Bands — geom_bands","text":"","code":"param <- param.icm(inf.prob = 0.2, act.rate = 0.25) init <- init.icm(s.num = 500, i.num = 1) control <- control.icm(type = \"SI\", nsteps = 250, nsims = 5) mod1 <- icm(param, init, control) df <- as.data.frame(mod1) df.mean <- as.data.frame(mod1, out = \"mean\")  library(ggplot2) ggplot() +    geom_line(data = df, mapping = aes(time, i.num, group = sim),    alpha = 0.25, lwd = 0.25, color = \"firebrick\") +    geom_bands(data = df, mapping = aes(time, i.num),               lower = 0.1, upper = 0.9, fill = \"firebrick\") +    geom_line(data = df.mean, mapping = aes(time, i.num)) +    theme_minimal()"},{"path":"http://epimodel.github.io/EpiModel/reference/get_adj_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns an adjacency list from an edge list — get_adj_list","title":"Returns an adjacency list from an edge list — get_adj_list","text":"Returns adjacency list edge list","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_adj_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns an adjacency list from an edge list — get_adj_list","text":"","code":"get_adj_list(el, n_nodes)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_adj_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns an adjacency list from an edge list — get_adj_list","text":"el edge list data.frame columns head tail n_nodes size number node network","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_adj_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns an adjacency list from an edge list — get_adj_list","text":"adjacency list network","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_adj_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns an adjacency list from an edge list — get_adj_list","text":"adjacency list list length n_nodes. entry node integer vector containing index nodes connected . layout makes directly subsetable O(1) expanse memory usage. get connections nodes 10 15 : unlist(adj_list[c(10, 15)]","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Arguments from EpiModel Parameterization Functions — get_args","title":"Get Arguments from EpiModel Parameterization Functions — get_args","text":"Returns list argument names values use parameter processing functions.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Arguments from EpiModel Parameterization Functions — get_args","text":"","code":"get_args(formal.args, dot.args)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Arguments from EpiModel Parameterization Functions — get_args","text":"formal.args output formals(sys.function()). dot.args output list(...).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Arguments from EpiModel Parameterization Functions — get_args","text":"list argument names values.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_attr_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the Attributes History from Network Simulations — get_attr_history","title":"Extract the Attributes History from Network Simulations — get_attr_history","text":"Extract Attributes History Network Simulations","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_attr_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the Attributes History from Network Simulations — get_attr_history","text":"","code":"get_attr_history(sims)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_attr_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the Attributes History from Network Simulations — get_attr_history","text":"sims EpiModel object class netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_attr_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the Attributes History from Network Simulations — get_attr_history","text":"list data.frames, one \"measure\" recorded simulation record_attr_history function.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_attr_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the Attributes History from Network Simulations — get_attr_history","text":"","code":"if (FALSE) { # \\dontrun{  # With `sims` the result of a `netsim` call get_attr_history(sims)  } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/get_attr_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportional Table of Vertex Attributes — get_attr_prop","title":"Proportional Table of Vertex Attributes — get_attr_prop","text":"Calculates proportional distribution vertex attribute contained network.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_attr_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportional Table of Vertex Attributes — get_attr_prop","text":"","code":"get_attr_prop(dat, nwterms)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_attr_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportional Table of Vertex Attributes — get_attr_prop","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. nwterms Vector attributes network object, usually output get_formula_term_attr.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_attr_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportional Table of Vertex Attributes — get_attr_prop","text":"table containing proportional distribution attribute nwterms.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/get_connected_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns all the node connected directly or indirectly to a set of nodes — get_connected_nodes","title":"Returns all the node connected directly or indirectly to a set of nodes — get_connected_nodes","text":"Returns node connected directly indirectly set nodes","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_connected_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns all the node connected directly or indirectly to a set of nodes — get_connected_nodes","text":"","code":"get_connected_nodes(adj_list, nodes)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_connected_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns all the node connected directly or indirectly to a set of nodes — get_connected_nodes","text":"adj_list network represented adjacency list nodes set nodes","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_connected_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns all the node connected directly or indirectly to a set of nodes — get_connected_nodes","text":"vector nodes indexes connected together ones provided nodes argument. nodes listed output","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_degree.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the Cumulative Degree of a Set of Index Nodes — get_cumulative_degree","title":"Return the Cumulative Degree of a Set of Index Nodes — get_cumulative_degree","text":"Return Cumulative Degree Set Index Nodes","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_degree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the Cumulative Degree of a Set of Index Nodes — get_cumulative_degree","text":"","code":"get_cumulative_degree(   dat,   index_posit_ids,   networks = NULL,   truncate = Inf,   only.active.nodes = FALSE )"},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_degree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the Cumulative Degree of a Set of Index Nodes — get_cumulative_degree","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. index_posit_ids positional IDs indexes interest. networks Numerical indexes networks extract partnerships . (May > 1 models multi-layer networks.) NULL, extract networks. truncate many time steps partnership longer active removed output. .active.nodes TRUE, inactive (e.g., deceased) partners removed output.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_degree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the Cumulative Degree of a Set of Index Nodes — get_cumulative_degree","text":"data.frame 2 columns: index_pid: positional ID (see get_posit_ids) indexes. degree: cumulative degree index.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_degree.html","id":"cumulative-degree","dir":"Reference","previous_headings":"","what":"Cumulative Degree","title":"Return the Cumulative Degree of a Set of Index Nodes — get_cumulative_degree","text":"cumulative degree node number edges connected node time window. time window default steps stored cumulative_edgelist set truncate parameter.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Cumulative Edgelist From a Specified Network — get_cumulative_edgelist","title":"Get a Cumulative Edgelist From a Specified Network — get_cumulative_edgelist","text":"Get Cumulative Edgelist Specified Network","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Cumulative Edgelist From a Specified Network — get_cumulative_edgelist","text":"","code":"get_cumulative_edgelist(dat, network)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_edgelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Cumulative Edgelist From a Specified Network — get_cumulative_edgelist","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. network Numerical index network cumulative edgelist extracted. (May > 1 models multiple overlapping networks.)","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_edgelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Cumulative Edgelist From a Specified Network — get_cumulative_edgelist","text":"cumulative edgelist data.frame form 4 columns: head: unique ID (see get_unique_ids) head node edge. tail: unique ID (see get_unique_ids) tail node edge. start: time step edge started. stop: time step edge stopped; ongoing, NA returned.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_edgelists_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Cumulative Edgelists of a Model — get_cumulative_edgelists_df","title":"Get the Cumulative Edgelists of a Model — get_cumulative_edgelists_df","text":"Get Cumulative Edgelists Model","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_edgelists_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Cumulative Edgelists of a Model — get_cumulative_edgelists_df","text":"","code":"get_cumulative_edgelists_df(dat, networks = NULL)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_edgelists_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Cumulative Edgelists of a Model — get_cumulative_edgelists_df","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. networks Numerical indexes networks extract partnerships . (May > 1 models multiple overlapping networks.) NULL, extract networks.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_cumulative_edgelists_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Cumulative Edgelists of a Model — get_cumulative_edgelists_df","text":"data.frame 5 columns: index: unique ID (see get_unique_ids) indexes. partner: unique ID (see get_unique_ids) partners/contacts. start: time step edge started. stop: time step edge stopped; ongoing, NA returned. network: numerical index network partnership/contact located.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_current_timestep.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the Current Timestep — get_current_timestep","title":"Return the Current Timestep — get_current_timestep","text":"Return Current Timestep","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_current_timestep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the Current Timestep — get_current_timestep","text":"","code":"get_current_timestep(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_current_timestep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the Current Timestep — get_current_timestep","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_current_timestep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the Current Timestep — get_current_timestep","text":"current timestep.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_degree.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Individual Degree from Network or Edgelist — get_degree","title":"Get Individual Degree from Network or Edgelist — get_degree","text":"fast method querying current degree individuals within network.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_degree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Individual Degree from Network or Edgelist — get_degree","text":"","code":"get_degree(x)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_degree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Individual Degree from Network or Edgelist — get_degree","text":"x Either object class network edgelist generated network. x edgelist, must contain attribute total network size, n.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_degree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Individual Degree from Network or Edgelist — get_degree","text":"vector length equal total network size, containing current degree node network.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_degree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Individual Degree from Network or Edgelist — get_degree","text":"Individual-level data current degree nodes within network often useful summary statistics. Given network class object, net, one way look current degree get summary ERGM term, sociality, : summary(net ~ sociality(nodes = NULL)). computationally inefficient number reasons. function provides fast method generating vector degrees using query edgelist. even faster parameter x already transformed edgelist.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_degree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Individual Degree from Network or Edgelist — get_degree","text":"","code":"nw <- network_initialize(n = 500)  set.seed(1) fit <- ergm(nw ~ edges, target.stats = 250) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE. #> Evaluating log-likelihood at the estimate.  #>  sim <- simulate(fit)  # Slow ERGM-based method ergm.method <- unname(summary(sim ~ sociality(nodes = NULL))) ergm.method #>   [1] 0 1 3 0 1 0 4 0 1 0 3 1 2 1 1 3 0 2 1 0 3 2 3 2 1 1 2 0 2 0 0 0 0 2 2 0 2 #>  [38] 2 4 2 1 0 1 1 1 1 0 2 1 0 1 1 1 0 0 2 2 0 0 1 0 1 2 0 3 1 1 2 0 2 0 0 2 0 #>  [75] 1 0 0 3 0 0 1 0 1 0 2 0 1 1 1 0 3 0 0 1 0 0 0 0 2 1 2 1 0 0 1 0 0 0 0 2 0 #> [112] 0 3 2 1 1 1 1 2 1 0 2 2 0 2 0 0 0 0 1 2 0 1 3 0 0 0 0 2 1 2 0 1 1 2 1 0 1 #> [149] 1 0 0 1 0 0 0 0 3 0 5 2 0 0 0 1 2 2 3 2 0 0 0 1 0 1 1 0 1 1 2 1 0 0 1 2 1 #> [186] 1 0 2 1 0 2 2 2 0 1 0 1 0 1 0 1 1 2 1 0 3 2 2 0 2 0 0 1 1 0 3 1 1 0 0 0 2 #> [223] 2 0 1 0 1 1 1 0 2 2 0 0 1 3 1 0 0 0 1 0 1 1 2 2 0 2 1 1 1 0 2 1 2 2 0 1 0 #> [260] 1 0 0 0 1 1 1 2 0 2 2 1 0 1 1 1 2 0 1 1 0 0 0 4 0 0 0 3 0 2 2 0 2 0 1 0 0 #> [297] 4 1 1 2 0 1 2 0 0 2 0 1 3 1 1 1 1 1 3 1 0 1 1 2 1 0 0 3 0 1 0 1 0 1 1 0 2 #> [334] 2 2 2 1 1 1 0 0 1 0 0 1 0 2 0 1 0 0 1 0 0 2 1 1 2 1 0 2 1 0 0 1 0 0 2 1 2 #> [371] 0 1 1 0 2 2 0 2 0 1 1 0 2 1 1 1 1 0 0 0 4 2 1 1 1 1 3 0 1 0 2 3 2 2 2 0 1 #> [408] 2 0 1 0 2 1 1 0 0 2 1 0 1 0 3 3 2 1 0 2 0 1 2 1 0 1 1 0 3 0 1 0 1 1 4 2 1 #> [445] 2 1 0 0 2 1 1 0 0 1 1 1 0 0 2 2 1 2 1 0 2 0 1 0 0 0 4 2 0 0 1 1 2 0 0 1 1 #> [482] 0 0 0 1 2 0 3 0 2 0 1 1 0 2 3 2 1 0 2  # Fast tabulate method with network object deg.net <- get_degree(sim) deg.net #>   [1] 0 1 3 0 1 0 4 0 1 0 3 1 2 1 1 3 0 2 1 0 3 2 3 2 1 1 2 0 2 0 0 0 0 2 2 0 2 #>  [38] 2 4 2 1 0 1 1 1 1 0 2 1 0 1 1 1 0 0 2 2 0 0 1 0 1 2 0 3 1 1 2 0 2 0 0 2 0 #>  [75] 1 0 0 3 0 0 1 0 1 0 2 0 1 1 1 0 3 0 0 1 0 0 0 0 2 1 2 1 0 0 1 0 0 0 0 2 0 #> [112] 0 3 2 1 1 1 1 2 1 0 2 2 0 2 0 0 0 0 1 2 0 1 3 0 0 0 0 2 1 2 0 1 1 2 1 0 1 #> [149] 1 0 0 1 0 0 0 0 3 0 5 2 0 0 0 1 2 2 3 2 0 0 0 1 0 1 1 0 1 1 2 1 0 0 1 2 1 #> [186] 1 0 2 1 0 2 2 2 0 1 0 1 0 1 0 1 1 2 1 0 3 2 2 0 2 0 0 1 1 0 3 1 1 0 0 0 2 #> [223] 2 0 1 0 1 1 1 0 2 2 0 0 1 3 1 0 0 0 1 0 1 1 2 2 0 2 1 1 1 0 2 1 2 2 0 1 0 #> [260] 1 0 0 0 1 1 1 2 0 2 2 1 0 1 1 1 2 0 1 1 0 0 0 4 0 0 0 3 0 2 2 0 2 0 1 0 0 #> [297] 4 1 1 2 0 1 2 0 0 2 0 1 3 1 1 1 1 1 3 1 0 1 1 2 1 0 0 3 0 1 0 1 0 1 1 0 2 #> [334] 2 2 2 1 1 1 0 0 1 0 0 1 0 2 0 1 0 0 1 0 0 2 1 1 2 1 0 2 1 0 0 1 0 0 2 1 2 #> [371] 0 1 1 0 2 2 0 2 0 1 1 0 2 1 1 1 1 0 0 0 4 2 1 1 1 1 3 0 1 0 2 3 2 2 2 0 1 #> [408] 2 0 1 0 2 1 1 0 0 2 1 0 1 0 3 3 2 1 0 2 0 1 2 1 0 1 1 0 3 0 1 0 1 1 4 2 1 #> [445] 2 1 0 0 2 1 1 0 0 1 1 1 0 0 2 2 1 2 1 0 2 0 1 0 0 0 4 2 0 0 1 1 2 0 0 1 1 #> [482] 0 0 0 1 2 0 3 0 2 0 1 1 0 2 3 2 1 0 2  # Even faster if network already transformed into an edgelist el <- as.edgelist(sim) deg.el <- get_degree(el) deg.el #>   [1] 0 1 3 0 1 0 4 0 1 0 3 1 2 1 1 3 0 2 1 0 3 2 3 2 1 1 2 0 2 0 0 0 0 2 2 0 2 #>  [38] 2 4 2 1 0 1 1 1 1 0 2 1 0 1 1 1 0 0 2 2 0 0 1 0 1 2 0 3 1 1 2 0 2 0 0 2 0 #>  [75] 1 0 0 3 0 0 1 0 1 0 2 0 1 1 1 0 3 0 0 1 0 0 0 0 2 1 2 1 0 0 1 0 0 0 0 2 0 #> [112] 0 3 2 1 1 1 1 2 1 0 2 2 0 2 0 0 0 0 1 2 0 1 3 0 0 0 0 2 1 2 0 1 1 2 1 0 1 #> [149] 1 0 0 1 0 0 0 0 3 0 5 2 0 0 0 1 2 2 3 2 0 0 0 1 0 1 1 0 1 1 2 1 0 0 1 2 1 #> [186] 1 0 2 1 0 2 2 2 0 1 0 1 0 1 0 1 1 2 1 0 3 2 2 0 2 0 0 1 1 0 3 1 1 0 0 0 2 #> [223] 2 0 1 0 1 1 1 0 2 2 0 0 1 3 1 0 0 0 1 0 1 1 2 2 0 2 1 1 1 0 2 1 2 2 0 1 0 #> [260] 1 0 0 0 1 1 1 2 0 2 2 1 0 1 1 1 2 0 1 1 0 0 0 4 0 0 0 3 0 2 2 0 2 0 1 0 0 #> [297] 4 1 1 2 0 1 2 0 0 2 0 1 3 1 1 1 1 1 3 1 0 1 1 2 1 0 0 3 0 1 0 1 0 1 1 0 2 #> [334] 2 2 2 1 1 1 0 0 1 0 0 1 0 2 0 1 0 0 1 0 0 2 1 1 2 1 0 2 1 0 0 1 0 0 2 1 2 #> [371] 0 1 1 0 2 2 0 2 0 1 1 0 2 1 1 1 1 0 0 0 4 2 1 1 1 1 3 0 1 0 2 3 2 2 2 0 1 #> [408] 2 0 1 0 2 1 1 0 0 2 1 0 1 0 3 3 2 1 0 2 0 1 2 1 0 1 1 0 3 0 1 0 1 1 4 2 1 #> [445] 2 1 0 0 2 1 1 0 0 1 1 1 0 0 2 2 1 2 1 0 2 0 1 0 0 0 4 2 0 0 1 1 2 0 0 1 1 #> [482] 0 0 0 1 2 0 3 0 2 0 1 1 0 2 3 2 1 0 2  identical(as.integer(ergm.method), deg.net, deg.el) #> [1] TRUE"},{"path":"http://epimodel.github.io/EpiModel/reference/get_discordant_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Discordant Edgelist Based on Specified Status Variable — get_discordant_edgelist","title":"Get Discordant Edgelist Based on Specified Status Variable — get_discordant_edgelist","text":"function returns data.frame discordant edgelist, defined set edges status attribute interest discordant two partners.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_discordant_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Discordant Edgelist Based on Specified Status Variable — get_discordant_edgelist","text":"","code":"get_discordant_edgelist(   dat,   status.attr,   head.status,   tail.status,   networks = NULL )"},{"path":"http://epimodel.github.io/EpiModel/reference/get_discordant_edgelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Discordant Edgelist Based on Specified Status Variable — get_discordant_edgelist","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. status.attr name status attribute interest. head.status value(s) status.attr look head edge. Can single value vector. tail.status value(s) status.attr look tail edge. Can single value vector. networks Numerical indexes networks extract partnerships . (May > 1 models multiple overlapping networks.) NULL, extract networks.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_discordant_edgelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Discordant Edgelist Based on Specified Status Variable — get_discordant_edgelist","text":"data.frame following columns: head: Positional ID head node. tail: Positional ID tail node. head_status: Status head node. tail_status: Status tail node. network: numerical index network partnership located.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_discordant_edgelist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Discordant Edgelist Based on Specified Status Variable — get_discordant_edgelist","text":"generalized version discord_edgelist function. creates edgelist current partnerships status attribute interest (specified parameter status.attr) one partner matches value (one values) head.status parameter corresponding status attribute partner matches value (one values) tail.status parameter.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/get_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an Edgelist From the Specified Network — get_edgelist","title":"Get an Edgelist From the Specified Network — get_edgelist","text":"function outputs edgelist specified network, selecting method depending stored network type.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an Edgelist From the Specified Network — get_edgelist","text":"","code":"get_edgelist(dat, network)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_edgelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an Edgelist From the Specified Network — get_edgelist","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. network Numerical index network edgelist extracted. (May > 1 models multiple overlapping networks.)","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_edgelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an Edgelist From the Specified Network — get_edgelist","text":"edgelist matrix form two columns. column contains posit_ids (see get_posit_ids) nodes edge.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_edgelists_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Edgelist(s) from the Specified Network(s) — get_edgelists_df","title":"Get the Edgelist(s) from the Specified Network(s) — get_edgelists_df","text":"Get Edgelist(s) Specified Network(s)","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_edgelists_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Edgelist(s) from the Specified Network(s) — get_edgelists_df","text":"","code":"get_edgelists_df(dat, networks = NULL)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_edgelists_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Edgelist(s) from the Specified Network(s) — get_edgelists_df","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. networks Numerical indexes networks extract partnerships . (May > 1 models multiple overlapping networks.) NULL, extract networks.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_edgelists_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Edgelist(s) from the Specified Network(s) — get_edgelists_df","text":"data.frame following columns: head: Positional ID head node. tail: Positional ID tail node. network: numerical index network edge located.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_formula_term_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Output ERGM Formula Attributes into a Character Vector — get_formula_term_attr","title":"Output ERGM Formula Attributes into a Character Vector — get_formula_term_attr","text":"Given formation formula network model, outputs character vector vertex attributes used netsim simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_formula_term_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output ERGM Formula Attributes into a Character Vector — get_formula_term_attr","text":"","code":"get_formula_term_attr(form, nw)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_formula_term_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output ERGM Formula Attributes into a Character Vector — get_formula_term_attr","text":"form ERGM model formula. nw network object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_formula_term_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output ERGM Formula Attributes into a Character Vector — get_formula_term_attr","text":"character vector vertex attributes.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the List of Modules — get_modules","title":"Get the List of Modules — get_modules","text":"Get List Modules","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the List of Modules — get_modules","text":"","code":"get_modules(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the List of Modules — get_modules","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the List of Modules — get_modules","text":"named list modules run model","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Network Objects from Network Simulations — get_network","title":"Extract Network Objects from Network Simulations — get_network","text":"Extracts network object either network epidemic model object generated netsim, network diagnostic simulation generated netdx, netsim_dat object used internally netsim. netdx netsim tergmLite == FALSE, extracted network object networkDynamic, can collapsed static network object collapse arguments. netsim tergmLite == TRUE, extracted network object final networkLite, collapse argument FALSE, argument missing. netsim_dat, collapse arguments supported, network object either current networkLite (tergmLite == TRUE) current networkDynamic (tergmLite == FALSE).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Network Objects from Network Simulations — get_network","text":"","code":"get_network(x, ...)  # S3 method for class 'netdx' get_network(x, sim = 1, collapse = FALSE, at, ...)  # S3 method for class 'netsim' get_network(x, sim = 1, network = 1, collapse = FALSE, at, ...)  # S3 method for class 'netsim_dat' get_network(x, network = 1L, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Network Objects from Network Simulations — get_network","text":"x EpiModel object class netsim, netdx, netsim_dat. ... Additional arguments. sim Simulation number extracted network, netdx netsim. collapse TRUE, collapse networkDynamic object static network object specified time step. Applicable netdx objects netsim objects tergmLite == FALSE. collapse TRUE, time step extracted network collapsed. Applicable netdx objects netsim objects tergmLite == FALSE. network Network number, netsim netsim_dat objects multiple overlapping networks (advanced use, applicable netdx objects).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Network Objects from Network Simulations — get_network","text":"netdx netsim tergmLite == FALSE, networkDynamic object (collapse = FALSE) static network object (collapse = TRUE). netsim tergmLite == TRUE netsim_dat tergmLite == TRUE, networkLite object. netsim_dat tergmLite == FALSE, networkDynamic object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Network Objects from Network Simulations — get_network","text":"function requires network object saved network simulation running either netsim netdx. former, specified setting save.network parameter control.net TRUE. latter, specified keep.tnetwork parameter directly netdx.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Network Objects from Network Simulations — get_network","text":"","code":"# Set up network and TERGM formula nw <- network_initialize(n = 100) nw <- set_vertex_attribute(nw, \"group\", rep(1:2, each = 50)) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)  # Estimate the model est <- netest(nw, formation, target.stats, coef.diss) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  # Run diagnostics, saving the networkDynamic objects dx <- netdx(est, nsteps = 10, nsims = 3, keep.tnetwork = TRUE,             verbose = FALSE)  # Extract the network for simulation 2 from dx object get_network(dx, sim = 2) #> NetworkDynamic properties: #>   distinct change times: 12  #>   maximal time range: 0 until  Inf  #>  #> Includes optional net.obs.period attribute: #>  Network observation period info: #>   Number of observation spells: 2  #>   Maximal time range observed: 0 until 11  #>   Temporal mode: discrete  #>   Time unit: step  #>   Suggested time increment: 1  #>  #>  Network attributes: #>   vertices = 100  #>   directed = FALSE  #>   hyper = FALSE  #>   loops = FALSE  #>   multiple = FALSE  #>   bipartite = FALSE  #>   net.obs.period: (not shown) #>   total edges= 72  #>     missing edges= 0  #>     non-missing edges= 72  #>  #>  Vertex attribute names:  #>     group vertex.names  #>  #>  Edge attribute names:  #>     active   # Extract and collapse the network from simulation 1 at time step 5 get_network(dx, collapse = TRUE, at = 5) #>  Network attributes: #>   vertices = 100  #>   directed = FALSE  #>   hyper = FALSE  #>   loops = FALSE  #>   multiple = FALSE  #>   bipartite = FALSE  #>   total edges= 49  #>     missing edges= 0  #>     non-missing edges= 49  #>  #>  Vertex attribute names:  #>     group vertex.names  #>  #> No edge attributes  # Parameterize the epidemic model, and simulate it param <- param.net(inf.prob = 0.3, inf.prob.g2 = 0.15) init <- init.net(i.num = 10, i.num.g2 = 10) control <- control.net(type = \"SI\", nsteps = 10, nsims = 3, verbose = FALSE) mod <- netsim(est, param, init, control)  # Extract the network for simulation 2 from mod object get_network(mod, sim = 2) #> NetworkDynamic properties: #>   distinct change times: 12  #>   maximal time range: 0 until  Inf  #>  #>  Dynamic (TEA) attributes: #>   Vertex TEAs:    testatus.active  #>  #> Includes optional net.obs.period attribute: #>  Network observation period info: #>   Number of observation spells: 2  #>   Maximal time range observed: 0 until 11  #>   Temporal mode: discrete  #>   Time unit: step  #>   Suggested time increment: 1  #>  #>  Network attributes: #>   vertices = 100  #>   directed = FALSE  #>   hyper = FALSE  #>   loops = FALSE  #>   multiple = FALSE  #>   bipartite = FALSE  #>   net.obs.period: (not shown) #>   vertex.pid = tergm_pid  #>   total edges= 79  #>     missing edges= 0  #>     non-missing edges= 79  #>  #>  Vertex attribute names:  #>     active group status tergm_pid testatus.active vertex.names  #>  #>  Edge attribute names:  #>     active   ## Extract and collapse the network from simulation 1 at time step 5 get_network(mod, collapse = TRUE, at = 5) #>  Network attributes: #>   vertices = 100  #>   directed = FALSE  #>   hyper = FALSE  #>   loops = FALSE  #>   multiple = FALSE  #>   bipartite = FALSE  #>   vertex.pid = tergm_pid  #>   total edges= 64  #>     missing edges= 0  #>     non-missing edges= 64  #>  #>  Vertex attribute names:  #>     group status tergm_pid testatus vertex.names  #>  #> No edge attributes"},{"path":"http://epimodel.github.io/EpiModel/reference/get_network_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Network Attributes from a Network Object — get_network_attributes","title":"Get Network Attributes from a Network Object — get_network_attributes","text":"Gets network attributes except \"mnext\" network argument.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Network Attributes from a Network Object — get_network_attributes","text":"","code":"get_network_attributes(x)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_network_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Network Attributes from a Network Object — get_network_attributes","text":"x object class network networkLite.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Network Attributes from a Network Object — get_network_attributes","text":"Returns named list network attributes.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network_attributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Network Attributes from a Network Object — get_network_attributes","text":"function used EpiModel workflows copy relevant network attributes network object netsim_dat object initializing netsim runs.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Network Attributes from a Network Object — get_network_attributes","text":"","code":"nw <- network_initialize(100) get_network_attributes(nw) #> $bipartite #> [1] FALSE #>  #> $directed #> [1] FALSE #>  #> $hyper #> [1] FALSE #>  #> $loops #> [1] FALSE #>  #> $multiple #> [1] FALSE #>  #> $n #> [1] 100 #>"},{"path":"http://epimodel.github.io/EpiModel/reference/get_network_term_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Output Network Attributes into a Character Vector — get_network_term_attr","title":"Output Network Attributes into a Character Vector — get_network_term_attr","text":"Given simulated network, outputs character vector vertex attributes used netsim simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network_term_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output Network Attributes into a Character Vector — get_network_term_attr","text":"","code":"get_network_term_attr(nw)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_network_term_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output Network Attributes into a Character Vector — get_network_term_attr","text":"nw network object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_network_term_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output Network Attributes into a Character Vector — get_network_term_attr","text":"character vector vertex attributes.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_nwparam.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Network Model Parameters — get_nwparam","title":"Extract Network Model Parameters — get_nwparam","text":"Extracts list network model parameters saved initialization module.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_nwparam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Network Model Parameters — get_nwparam","text":"","code":"get_nwparam(x, network = 1)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_nwparam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Network Model Parameters — get_nwparam","text":"x Main netsim_dat data object used netsim simulations. network Network number, simulations multiple networks representing population.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_nwstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Network Statistics from netsim or netdx Object — get_nwstats","title":"Extract Network Statistics from netsim or netdx Object — get_nwstats","text":"Extracts network statistics network epidemic model simulated netsim network diagnostics object simulated netdx. Statistics can returned either single data frame list matrices (one matrix simulation).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_nwstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Network Statistics from netsim or netdx Object — get_nwstats","text":"","code":"get_nwstats(x, sim, network = 1, mode = c(\"data.frame\", \"list\"))"},{"path":"http://epimodel.github.io/EpiModel/reference/get_nwstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Network Statistics from netsim or netdx Object — get_nwstats","text":"x EpiModel object class netsim netdx. sim vector simulation numbers extracted object. network Network number, netsim objects multiple overlapping networks (advanced use, applicable netdx objects). mode Either \"data.frame\" \"list\", indicating desired output.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_nwstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Network Statistics from netsim or netdx Object — get_nwstats","text":"data frame list matrices containing network statistics.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_nwstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Network Statistics from netsim or netdx Object — get_nwstats","text":"","code":"# Two-group Bernoulli random graph TERGM nw <- network_initialize(n = 100) nw <- set_vertex_attribute(nw, \"group\", rep(1:2, each = 50)) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20) est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  dx <- netdx(est, nsim = 3, nsteps = 10, verbose = FALSE,             nwstats.formula = ~edges + isolates) get_nwstats(dx) #>    time sim edges isolates #> 1     1   1    44       45 #> 2     2   1    46       42 #> 3     3   1    49       40 #> 4     4   1    51       38 #> 5     5   1    48       39 #> 6     6   1    46       42 #> 7     7   1    48       39 #> 8     8   1    49       39 #> 9     9   1    51       39 #> 10   10   1    52       39 #> 11    1   2    50       38 #> 12    2   2    51       35 #> 13    3   2    49       37 #> 14    4   2    50       37 #> 15    5   2    48       37 #> 16    6   2    49       38 #> 17    7   2    48       38 #> 18    8   2    49       38 #> 19    9   2    48       38 #> 20   10   2    49       37 #> 21    1   3    54       26 #> 22    2   3    55       27 #> 23    3   3    57       25 #> 24    4   3    53       27 #> 25    5   3    55       28 #> 26    6   3    56       27 #> 27    7   3    58       27 #> 28    8   3    57       29 #> 29    9   3    58       28 #> 30   10   3    59       28 get_nwstats(dx, sim = 1) #>    time sim edges isolates #> 1     1   1    44       45 #> 2     2   1    46       42 #> 3     3   1    49       40 #> 4     4   1    51       38 #> 5     5   1    48       39 #> 6     6   1    46       42 #> 7     7   1    48       39 #> 8     8   1    49       39 #> 9     9   1    51       39 #> 10   10   1    52       39  # SI epidemic model param <- param.net(inf.prob = 0.3, inf.prob.g2 = 0.15) init <- init.net(i.num = 10, i.num.g2 = 10) control <- control.net(type = \"SI\", nsteps = 10, nsims = 3,                        nwstats.formula = ~edges + meandeg + degree(0:5),                        verbose = FALSE) mod <- netsim(est, param, init, control)  # Extract the network statistics from all or sets of simulations get_nwstats(mod) #>    time sim edges meandeg degree0 degree1 degree2 degree3 degree4 degree5 #> 1     1   1    47    0.94      40      33      22       4       0       1 #> 2     2   1    48    0.96      38      33      26       2       0       1 #> 3     3   1    46    0.92      38      37      22       2       0       1 #> 4     4   1    46    0.92      34      43      20       3       0       0 #> 5     5   1    48    0.96      34      41      20       5       0       0 #> 6     6   1    49    0.98      35      37      24       3       1       0 #> 7     7   1    51    1.02      33      38      24       4       1       0 #> 8     8   1    51    1.02      33      39      22       5       1       0 #> 9     9   1    50    1.00      32      42      21       4       1       0 #> 10   10   1    48    0.96      32      45      19       3       1       0 #> 11    1   2    52    1.04      30      43      22       3       2       0 #> 12    2   2    53    1.06      30      43      20       5       2       0 #> 13    3   2    51    1.02      32      43      17       7       1       0 #> 14    4   2    52    1.04      32      42      18       6       2       0 #> 15    5   2    51    1.02      33      41      18       7       1       0 #> 16    6   2    50    1.00      35      39      18       7       1       0 #> 17    7   2    50    1.00      36      37      19       7       1       0 #> 18    8   2    51    1.02      36      35      21       7       1       0 #> 19    9   2    54    1.08      32      37      23       7       1       0 #> 20   10   2    55    1.10      31      38      22       8       1       0 #> 21    1   3    50    1.00      35      40      17       6       2       0 #> 22    2   3    50    1.00      35      39      18       7       1       0 #> 23    3   3    51    1.02      34      40      17       8       1       0 #> 24    4   3    52    1.04      33      43      13       9       2       0 #> 25    5   3    54    1.08      33      39      17       9       2       0 #> 26    6   3    54    1.08      35      37      17       7       4       0 #> 27    7   3    54    1.08      34      41      14       5       6       0 #> 28    8   3    51    1.02      37      39      13       7       4       0 #> 29    9   3    46    0.92      42      35      15       5       3       0 #> 30   10   3    50    1.00      38      38      14       6       4       0 get_nwstats(mod, sim = 2) #>    time sim edges meandeg degree0 degree1 degree2 degree3 degree4 degree5 #> 1     1   2    52    1.04      30      43      22       3       2       0 #> 2     2   2    53    1.06      30      43      20       5       2       0 #> 3     3   2    51    1.02      32      43      17       7       1       0 #> 4     4   2    52    1.04      32      42      18       6       2       0 #> 5     5   2    51    1.02      33      41      18       7       1       0 #> 6     6   2    50    1.00      35      39      18       7       1       0 #> 7     7   2    50    1.00      36      37      19       7       1       0 #> 8     8   2    51    1.02      36      35      21       7       1       0 #> 9     9   2    54    1.08      32      37      23       7       1       0 #> 10   10   2    55    1.10      31      38      22       8       1       0 get_nwstats(mod, sim = c(1, 3)) #>    time sim edges meandeg degree0 degree1 degree2 degree3 degree4 degree5 #> 1     1   1    47    0.94      40      33      22       4       0       1 #> 2     2   1    48    0.96      38      33      26       2       0       1 #> 3     3   1    46    0.92      38      37      22       2       0       1 #> 4     4   1    46    0.92      34      43      20       3       0       0 #> 5     5   1    48    0.96      34      41      20       5       0       0 #> 6     6   1    49    0.98      35      37      24       3       1       0 #> 7     7   1    51    1.02      33      38      24       4       1       0 #> 8     8   1    51    1.02      33      39      22       5       1       0 #> 9     9   1    50    1.00      32      42      21       4       1       0 #> 10   10   1    48    0.96      32      45      19       3       1       0 #> 11    1   3    50    1.00      35      40      17       6       2       0 #> 12    2   3    50    1.00      35      39      18       7       1       0 #> 13    3   3    51    1.02      34      40      17       8       1       0 #> 14    4   3    52    1.04      33      43      13       9       2       0 #> 15    5   3    54    1.08      33      39      17       9       2       0 #> 16    6   3    54    1.08      35      37      17       7       4       0 #> 17    7   3    54    1.08      34      41      14       5       6       0 #> 18    8   3    51    1.02      37      39      13       7       4       0 #> 19    9   3    46    0.92      42      35      15       5       3       0 #> 20   10   3    50    1.00      38      38      14       6       4       0  # On the fly summary stats summary(get_nwstats(mod)) #>       time           sim        edges          meandeg         degree0      #>  Min.   : 1.0   Min.   :1   Min.   :46.00   Min.   :0.920   Min.   :30.00   #>  1st Qu.: 3.0   1st Qu.:1   1st Qu.:49.25   1st Qu.:0.985   1st Qu.:32.25   #>  Median : 5.5   Median :2   Median :51.00   Median :1.020   Median :34.00   #>  Mean   : 5.5   Mean   :2   Mean   :50.50   Mean   :1.010   Mean   :34.40   #>  3rd Qu.: 8.0   3rd Qu.:3   3rd Qu.:52.00   3rd Qu.:1.040   3rd Qu.:35.75   #>  Max.   :10.0   Max.   :3   Max.   :55.00   Max.   :1.100   Max.   :42.00   #>     degree1         degree2        degree3       degree4         degree5    #>  Min.   :33.00   Min.   :13.0   Min.   :2.0   Min.   :0.000   Min.   :0.0   #>  1st Qu.:37.00   1st Qu.:17.0   1st Qu.:4.0   1st Qu.:1.000   1st Qu.:0.0   #>  Median :39.00   Median :19.0   Median :6.0   Median :1.000   Median :0.0   #>  Mean   :39.23   Mean   :19.1   Mean   :5.6   Mean   :1.567   Mean   :0.1   #>  3rd Qu.:41.75   3rd Qu.:22.0   3rd Qu.:7.0   3rd Qu.:2.000   3rd Qu.:0.0   #>  Max.   :45.00   Max.   :26.0   Max.   :9.0   Max.   :6.000   Max.   :1.0   colMeans(get_nwstats(mod)) #>      time       sim     edges   meandeg   degree0   degree1   degree2   degree3  #>  5.500000  2.000000 50.500000  1.010000 34.400000 39.233333 19.100000  5.600000  #>   degree4   degree5  #>  1.566667  0.100000"},{"path":"http://epimodel.github.io/EpiModel/reference/get_param_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the Parameter Set from Network Simulations — get_param_set","title":"Extract the Parameter Set from Network Simulations — get_param_set","text":"Extract Parameter Set Network Simulations","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_param_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the Parameter Set from Network Simulations — get_param_set","text":"","code":"get_param_set(sims)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_param_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the Parameter Set from Network Simulations — get_param_set","text":"sims EpiModel object class netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_param_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the Parameter Set from Network Simulations — get_param_set","text":"data.frame one row per simulation one column per parameter parameter element parameters size > 1.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_param_set.html","id":"output-format","dir":"Reference","previous_headings":"","what":"Output Format","title":"Extract the Parameter Set from Network Simulations — get_param_set","text":"outputted data.frame one row per simulation columns correspond parameters used simulation. column name match parameter name size 1 parameter parameter size > 1, N columns (N size parameter) named parameter.name_1, parameter.name_2, ..., parameter.name_N.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_param_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the Parameter Set from Network Simulations — get_param_set","text":"","code":"# Setup network nw <- network_initialize(n = 50)  est <- netest(   nw, formation = ~edges,   target.stats = c(25),   coef.diss = dissolution_coefs(~offset(edges), 10, 0),   verbose = FALSE ) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  init <- init.net(i.num = 10)  n <- 5  related.param <- data.frame(   dummy.param = rbeta(n, 1, 2) )   my.randoms <- list(    act.rate = param_random(c(0.25, 0.5, 0.75)),    dummy.param = function() rbeta(1, 1, 2),    dummy.strat.param = function() c(      rnorm(1, 0, 10),      rnorm(1, 10, 1)    )  )  param <- param.net(   inf.prob = 0.3,   dummy = c(0, 1, 2),   random.params = my.randoms )  control <- control.net(type = \"SI\", nsims = 3, nsteps = 5, verbose = FALSE) mod <- netsim(est, param, init, control)  get_param_set(mod) #>   sim inf.prob dummy_1 dummy_2 dummy_3 vital groups act.rate dummy.param #> 1   1      0.3       0       1       2 FALSE      1     0.25  0.24777053 #> 2   2      0.3       0       1       2 FALSE      1     0.75  0.68605240 #> 3   3      0.3       0       1       2 FALSE      1     0.50  0.03437539 #>   dummy.strat.param_1 dummy.strat.param_2 #> 1            6.567364            8.571406 #> 2            9.652140           11.637548 #> 3           12.641034            9.052961"},{"path":"http://epimodel.github.io/EpiModel/reference/get_partners.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the Historical Contacts (Partners) of a Set of Index Nodes — get_partners","title":"Return the Historical Contacts (Partners) of a Set of Index Nodes — get_partners","text":"full cumulative edgelist contains history contacts (persistent one-time), function returns data frame containing details index (head) partner (tail) nodes, along start stop time steps partnership network location.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_partners.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the Historical Contacts (Partners) of a Set of Index Nodes — get_partners","text":"","code":"get_partners(   dat,   index_posit_ids,   networks = NULL,   truncate = Inf,   only.active.nodes = FALSE )"},{"path":"http://epimodel.github.io/EpiModel/reference/get_partners.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the Historical Contacts (Partners) of a Set of Index Nodes — get_partners","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. index_posit_ids positional IDs indexes interest. networks Numerical indexes networks extract partnerships . (May > 1 models multi-layer networks.) NULL, extract networks. truncate many time steps partnership longer active removed output. .active.nodes TRUE, inactive (e.g., deceased) partners removed output.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_partners.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the Historical Contacts (Partners) of a Set of Index Nodes — get_partners","text":"data.frame 5 columns: index: unique IDs indexes. partner: unique IDs partners/contacts. start: time step edge started. stop: time step edge stopped; ongoing, NA returned. network: numerical index network partnership/contact located.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_partners.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return the Historical Contacts (Partners) of a Set of Index Nodes — get_partners","text":"Note get_partners takes input positional IDs indexes interest returns unique IDs. design, get_partners expected called active nodes, partners (contacts) nodes may inactive network history. Therefore, index partner IDs returned unique IDs consistency. convert positional unique ID, may use get_posit_ids; convert unique ID positional ID, may use get_unique_ids.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_sims.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Network Simulations — get_sims","title":"Extract Network Simulations — get_sims","text":"Subsets entire netsim object subset simulations, essentially functioning like reverse merge.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_sims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Network Simulations — get_sims","text":"","code":"get_sims(x, sims, var)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_sims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Network Simulations — get_sims","text":"x object class netsim. sims Either numeric vector simulation numbers retain output object, \"mean\", selects one simulation value variable specified var closest mean var across simulations. var character vector variables retain x sims numeric vector, single variable name selecting average simulation set sims = \"mean\".","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_sims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Network Simulations — get_sims","text":"updated object class netsim containing simulations specified sims variables specified var.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_sims.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Network Simulations — get_sims","text":"","code":"# Network model estimation nw <- network_initialize(n = 100) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20) est1 <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  # Epidemic model param <- param.net(inf.prob = 0.3) init <- init.net(i.num = 10) control <- control.net(type = \"SI\", nsteps = 10, nsims = 3, verbose.int = 0) mod1 <- netsim(est1, param, init, control) #>  #> Starting Network Simulation... #> Sim = 1/3 #> Sim = 2/3 #> Sim = 3/3  # Get sim 2 s.g2 <- get_sims(mod1, sims = 2)  # Get sims 2 and 3 and keep only a subset of variables s.g2.small <- get_sims(mod1, sims = 2:3, var = c(\"i.num\", \"si.flow\"))  # Extract the mean simulation for the variable i.num sim.mean <- get_sims(mod1, sims = \"mean\", var = \"i.num\")"},{"path":"http://epimodel.github.io/EpiModel/reference/get_subnet_adj_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Return an adjacency list of subnets — get_subnet_adj_list","title":"Return an adjacency list of subnets — get_subnet_adj_list","text":"Return adjacency list subnets","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_subnet_adj_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return an adjacency list of subnets — get_subnet_adj_list","text":"","code":"get_subnet_adj_list(adj_list)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_subnet_adj_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return an adjacency list of subnets — get_subnet_adj_list","text":"adj_list normal adjacency list","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_subnet_adj_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return an adjacency list of subnets — get_subnet_adj_list","text":"adjacency list first node subnet contains subnet contain first node","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_subnet_adj_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return an adjacency list of subnets — get_subnet_adj_list","text":"graph 4 components: 1, 2, 3, 4, 5 6, 7, 8  yield list like : 1: 2, 3, 4 2: 1 3: 1 4: 1 5: numeric(0) 6: 7, 8 7: 6, 8: 6 format speeds construction reachable sets dense networks","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_transmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Transmissions Matrix from Network Epidemic Model — is.transmat","title":"Extract Transmissions Matrix from Network Epidemic Model — is.transmat","text":"Extracts matrix transmission data transmission event occurred within network epidemic model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_transmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Transmissions Matrix from Network Epidemic Model — is.transmat","text":"","code":"is.transmat(x)  get_transmat(x, sim = 1, deduplicate = TRUE)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_transmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Transmissions Matrix from Network Epidemic Model — is.transmat","text":"x EpiModel object class netsim. sim Simulation number extracted network. deduplicate TRUE, randomly select one transmission event case multiple events current per newly infected agent within time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_transmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Transmissions Matrix from Network Epidemic Model — is.transmat","text":"data frame following standard columns: : time step transmission occurred. sus: ID number susceptible (newly infected) node. inf: ID number infecting node. infDur: duration infecting node's disease time transmission. transProb: probability transmission per act. actRate: rate acts per unit time. finalProb: final transmission probability transmission event.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_transmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Transmissions Matrix from Network Epidemic Model — is.transmat","text":"","code":"## Simulate SI epidemic on two-group Bernoulli random graph nw <- network_initialize(n = 100) nw <- set_vertex_attribute(nw, \"group\", rep(1:2, each = 50)) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20) est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE. param <- param.net(inf.prob = 0.3, inf.prob.g2 = 0.15) init <- init.net(i.num = 10, i.num.g2 = 10) control <- control.net(type = \"SI\", nsteps = 10, nsims = 3, verbose = FALSE) mod <- netsim(est, param, init, control)  ## Extract the transmission matrix from simulation 2 get_transmat(mod, sim = 2) #> # A tibble: 24 × 8 #> # Groups:   at, sus [24] #>       at   sus   inf network infDur transProb actRate finalProb #>    <dbl> <int> <int>   <int>  <dbl>     <dbl>   <dbl>     <dbl> #>  1     2     1    68       1      9      0.3        1      0.3  #>  2     2    19    81       1      8      0.3        1      0.3  #>  3     2    21    92       1      8      0.3        1      0.3  #>  4     2    43    77       1      9      0.3        1      0.3  #>  5     3    13    81       1      9      0.3        1      0.3  #>  6     3    35     8       1      9      0.3        1      0.3  #>  7     3    36    42       1      3      0.3        1      0.3  #>  8     4    20    16       1      7      0.3        1      0.3  #>  9     4    45    78       1      5      0.3        1      0.3  #> 10     4    84    36       1      1      0.15       1      0.15 #> # ℹ 14 more rows"},{"path":"http://epimodel.github.io/EpiModel/reference/get_vertex_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Vertex Attribute on Network Object — get_vertex_attribute","title":"Get Vertex Attribute on Network Object — get_vertex_attribute","text":"Gets vertex attribute object class network. functions simplifies related function network package.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_vertex_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Vertex Attribute on Network Object — get_vertex_attribute","text":"","code":"get_vertex_attribute(x, attrname)"},{"path":"http://epimodel.github.io/EpiModel/reference/get_vertex_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Vertex Attribute on Network Object — get_vertex_attribute","text":"x object class network. attrname name attribute get.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_vertex_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Vertex Attribute on Network Object — get_vertex_attribute","text":"Returns object class network.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_vertex_attribute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Vertex Attribute on Network Object — get_vertex_attribute","text":"function used EpiModel workflows query vertex attributes initialized empty network object (see network_initialize).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/get_vertex_attribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Vertex Attribute on Network Object — get_vertex_attribute","text":"","code":"nw <- network_initialize(100) nw <- set_vertex_attribute(nw, \"age\", runif(100, 15, 65)) get_vertex_attribute(nw, \"age\") #>   [1] 43.18446 52.02268 23.08326 29.82809 23.53834 27.96412 47.06339 34.05321 #>   [9] 15.36450 25.84393 30.15816 43.67931 54.72058 32.81972 41.62817 32.16732 #>  [17] 63.93147 45.06544 43.45082 16.64340 48.60093 61.49712 30.69253 46.86644 #>  [25] 37.92518 41.87167 46.96175 56.69525 34.72267 31.99487 48.67462 57.67431 #>  [33] 38.58060 38.91728 35.65662 21.80262 58.11414 53.04670 19.25438 60.82528 #>  [41] 30.41047 24.19338 40.87094 29.60332 42.06039 64.00766 24.36419 42.57918 #>  [49] 41.74313 64.25065 42.62640 58.70364 64.15349 16.27865 35.78527 19.73172 #>  [57] 38.17145 18.22314 49.50566 61.96927 16.56265 53.55983 51.09118 50.13094 #>  [65] 24.46165 19.93328 22.31336 15.40808 64.01666 45.86197 42.48395 18.86733 #>  [73] 29.25935 33.04471 45.45428 51.72479 49.60836 48.49588 43.60618 41.03531 #>  [81] 26.13409 43.42104 15.96463 56.64862 29.63464 63.94389 34.67233 62.39618 #>  [89] 35.27721 28.80682 30.58655 49.66932 54.86645 61.87829 56.21041 44.51593 #>  [97] 33.14902 43.93295 28.94766 15.70056"},{"path":"http://epimodel.github.io/EpiModel/reference/icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Stochastic Individual Contact Models — icm","title":"Stochastic Individual Contact Models — icm","text":"Simulates stochastic individual contact epidemic models infectious disease.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stochastic Individual Contact Models — icm","text":"","code":"icm(param, init, control)"},{"path":"http://epimodel.github.io/EpiModel/reference/icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stochastic Individual Contact Models — icm","text":"param Model parameters, object class param.icm. init Initial conditions, object class init.icm. control Control settings, object class control.icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stochastic Individual Contact Models — icm","text":"list class icm following elements: param: epidemic parameters passed model param, additional parameters added necessary. control: control settings passed model control, additional controls added necessary. epi: list data frames, one epidemiological output model. Outputs base models always include size compartment, well flows , , compartments.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/icm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stochastic Individual Contact Models — icm","text":"Individual contact models intended stochastic microsimulation analogs deterministic compartmental models. ICMs simulate disease spread individual agents discrete time function processes stochastic variation. stochasticity inherent transition processes: infection, recovery, demographics. icm function performs  modeling base model types original models. Base model types include one-group two-group models disease types Susceptible-Infected (SI), Susceptible-Infected-Recovered (SIR), Susceptible-Infected-Susceptible (SIS). Original models may built writing new process modules either take place existing modules (example, disease recovery), supplement set existing processes new one contained original module.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/icm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stochastic Individual Contact Models — icm","text":"","code":"if (FALSE) { # \\dontrun{ ## Example 1: SI Model param <- param.icm(inf.prob = 0.2, act.rate = 0.25) init <- init.icm(s.num = 500, i.num = 1) control <- control.icm(type = \"SI\", nsteps = 500, nsims = 10) mod1 <- icm(param, init, control) mod1 plot(mod1)  ## Example 2: SIR Model param <- param.icm(inf.prob = 0.2, act.rate = 0.25, rec.rate = 1/50) init <- init.icm(s.num = 500, i.num = 1, r.num = 0) control <- control.icm(type = \"SIR\", nsteps = 500, nsims = 10) mod2 <- icm(param, init, control) mod2 plot(mod2)  ## Example 3: SIS Model param <- param.icm(inf.prob = 0.2, act.rate = 0.25, rec.rate = 1/50) init <- init.icm(s.num = 500, i.num = 1) control <- control.icm(type = \"SIS\", nsteps = 500, nsims = 10) mod3 <- icm(param, init, control) mod3 plot(mod3)  ## Example 4: SI Model with Vital Dynamics (Two-Group) param <- param.icm(inf.prob = 0.4,  inf.prob.g2 = 0.1,                    act.rate = 0.25, balance = \"g1\",                    a.rate = 1/100, a.rate.g2 = NA,                    ds.rate = 1/100, ds.rate.g2 = 1/100,                    di.rate = 1/50, di.rate.g2 = 1/50) init <- init.icm(s.num = 500, i.num = 1,                  s.num.g2 = 500, i.num.g2 = 0) control <- control.icm(type = \"SI\", nsteps = 500, nsims = 10) mod4 <- icm(param, init, control) mod4 plot(mod4) } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/idgroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Numbers for Two-Group Network — idgroup","title":"Group Numbers for Two-Group Network — idgroup","text":"Outputs group numbers given ID numbers two-group network.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/idgroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Numbers for Two-Group Network — idgroup","text":"","code":"idgroup(nw, ids)"},{"path":"http://epimodel.github.io/EpiModel/reference/idgroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Numbers for Two-Group Network — idgroup","text":"nw Object class network networkDynamic. ids Vector ID numbers group number returned.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/idgroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Numbers for Two-Group Network — idgroup","text":"vector containing group number specified nodes.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/idgroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Numbers for Two-Group Network — idgroup","text":"","code":"nw <- network_initialize(n = 10) nw <- set_vertex_attribute(nw, \"group\", rep(1:2, each = 5)) idgroup(nw) #>  [1] 1 1 1 1 1 2 2 2 2 2 idgroup(nw, ids = c(3, 6)) #> [1] 1 2"},{"path":"http://epimodel.github.io/EpiModel/reference/increment_timestep.html","id":null,"dir":"Reference","previous_headings":"","what":"Increment the Current Timestep — increment_timestep","title":"Increment the Current Timestep — increment_timestep","text":"function adds 1 timestep counter stored netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/increment_timestep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increment the Current Timestep — increment_timestep","text":"","code":"increment_timestep(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/increment_timestep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increment the Current Timestep — increment_timestep","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/increment_timestep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increment the Current Timestep — increment_timestep","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/increment_timestep.html","id":"mutability","dir":"Reference","previous_headings":"","what":"Mutability","title":"Increment the Current Timestep — increment_timestep","text":"modify netsim_dat object place. result must assigned back dat order registered: dat <- increment_timestep(dat).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.2g.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Primary Infection Module for netsim — infection.2g.net","title":"Primary Infection Module for netsim — infection.2g.net","text":"function simulates main infection process given current state partnerships disease system.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.2g.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Primary Infection Module for netsim — infection.2g.net","text":"","code":"infection.2g.net(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/infection.2g.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Primary Infection Module for netsim — infection.2g.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.2g.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Primary Infection Module for netsim — infection.2g.net","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.2g.net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Primary Infection Module for netsim — infection.2g.net","text":"main steps infection module follows: Get IDs current infected susceptibles given current disease status. Call discord_edgelist get current discordant edgelist given step 1. Determine transmission rates (e.g., function group). Pull number acts per partnership time step act.rate parameter. Calculate final transmission probabilities given transmission rates act rates. Randomly transmit discordant edgelist. Conduct bookkeeping new infections update status nodes calculate disease incidence.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/infection.icm.bip.html","id":null,"dir":"Reference","previous_headings":"","what":"Primary Infection Module for icm — infection.icm.bip","title":"Primary Infection Module for icm — infection.icm.bip","text":"function simulates main infection process given current state actors system.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.icm.bip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Primary Infection Module for icm — infection.icm.bip","text":"","code":"infection.icm.bip(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/infection.icm.bip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Primary Infection Module for icm — infection.icm.bip","text":"dat Main icm_dat class data object passed icm simulations. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.icm.bip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Primary Infection Module for icm — infection.icm.bip","text":"updated icm_dat class main data object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Primary Infection Module for icm — infection.icm","title":"Primary Infection Module for icm — infection.icm","text":"function simulates main infection process given current state actors system.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Primary Infection Module for icm — infection.icm","text":"","code":"infection.icm(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/infection.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Primary Infection Module for icm — infection.icm","text":"dat Main icm_dat class data object passed icm simulations. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Primary Infection Module for icm — infection.icm","text":"updated icm_dat class main data object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Primary Infection Module for netsim — infection.net","title":"Primary Infection Module for netsim — infection.net","text":"function simulates main infection process given current state partnerships disease system.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Primary Infection Module for netsim — infection.net","text":"","code":"infection.net(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/infection.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Primary Infection Module for netsim — infection.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Primary Infection Module for netsim — infection.net","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/infection.net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Primary Infection Module for netsim — infection.net","text":"main steps infection module follows: Get IDs current infected susceptible nodes given current disease status. Call discord_edgelist get current discordant edgelist given step 1. Determine transmission rates (e.g., function group). Pull number acts per partnership time step act.rate parameter. Calculate final transmission probabilities given transmission rates act rates. Randomly transmit discordant edgelist. Conduct bookkeeping new infections update status nodes calculate disease incidence.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/init.dcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial Conditions for Deterministic Compartmental Models — init.dcm","title":"Initial Conditions for Deterministic Compartmental Models — init.dcm","text":"Sets initial conditions deterministic compartmental models simulated dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init.dcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial Conditions for Deterministic Compartmental Models — init.dcm","text":"","code":"init.dcm(s.num, i.num, r.num, s.num.g2, i.num.g2, r.num.g2, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/init.dcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial Conditions for Deterministic Compartmental Models — init.dcm","text":"s.num Number initial susceptible persons. two-group models, number initial group 1 susceptible persons. .num Number initial infected persons. two-group models, number initial group 1 infected persons. r.num Number initial recovered persons. two-group models, number initial group 1 recovered persons. parameter used SIR model type. s.num.g2 Number initial susceptible persons group 2. parameter used two-group models. .num.g2 Number initial infected persons group 2. parameter used two-group models. r.num.g2 Number initial recovered persons group 2. parameter used two-group SIR models. ... Additional initial conditions passed model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init.dcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial Conditions for Deterministic Compartmental Models — init.dcm","text":"EpiModel object class init.dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init.dcm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initial Conditions for Deterministic Compartmental Models — init.dcm","text":"initial conditions model solved dcm input init.dcm function. function handles initial conditions base model types original models. Original models may use parameter names listed arguments , new set names, combination . new models, initial conditions must input order solved derivatives model output.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/init.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial Conditions for Stochastic Individual Contact Models — init.icm","title":"Initial Conditions for Stochastic Individual Contact Models — init.icm","text":"Sets initial conditions stochastic individual contact models simulated icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial Conditions for Stochastic Individual Contact Models — init.icm","text":"","code":"init.icm(s.num, i.num, r.num, s.num.g2, i.num.g2, r.num.g2, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/init.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial Conditions for Stochastic Individual Contact Models — init.icm","text":"s.num Number initial susceptible persons. two-group models, number initial group 1 susceptible persons. .num Number initial infected persons. two-group models, number initial group 1 infected persons. r.num Number initial recovered persons. two-group models, number initial group 1 recovered persons. parameter used SIR model type. s.num.g2 Number initial susceptible persons group 2. parameter used two-group models. .num.g2 Number initial infected persons group 2. parameter used two-group models. r.num.g2 Number initial recovered persons group 2. parameter used two-group SIR models. ... Additional initial conditions passed model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial Conditions for Stochastic Individual Contact Models — init.icm","text":"EpiModel object class init.icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init.icm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initial Conditions for Stochastic Individual Contact Models — init.icm","text":"initial conditions model solved icm input init.icm function. function handles initial conditions base models original models using new modules.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/init.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial Conditions for Stochastic Network Models — init.net","title":"Initial Conditions for Stochastic Network Models — init.net","text":"Sets initial conditions stochastic network models simulated netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial Conditions for Stochastic Network Models — init.net","text":"","code":"init.net(i.num, r.num, i.num.g2, r.num.g2, status.vector, infTime.vector, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/init.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial Conditions for Stochastic Network Models — init.net","text":".num Number initial infected persons. two-group models, number initial group 1 infected persons. r.num Number initial recovered persons. two-group models, number initial group 1 recovered persons. parameter used SIR model type. .num.g2 Number initial infected persons group 2. parameter used two-group models. r.num.g2 Number initial recovered persons group 2. parameter used two-group SIR models. status.vector vector length equal size input network, containing status node. Setting status overrides inputs passed .num arguments. infTime.vector vector length equal size input network, containing (historical) time infection nodes current status \"\". Can used status.vector used, must contain NA values nodes whose status \"\". ... Additional initial conditions passed model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial Conditions for Stochastic Network Models — init.net","text":"EpiModel object class init.net.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init.net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initial Conditions for Stochastic Network Models — init.net","text":"initial conditions model solved netsim input init.net function. function handles initial conditions base models new modules. overview specifying initial conditions across variety base network models, consult Network Modeling Epidemics tutorials.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/init.net.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initial Conditions for Stochastic Network Models — init.net","text":"","code":"# Example of using status.vector and infTime.vector together n <- 100 status <- sample(c(\"s\", \"i\"), size = n, replace = TRUE, prob = c(0.8, 0.2)) infTime <- rep(NA, n) infTime[which(status == \"i\")] <- -rgeom(sum(status == \"i\"), prob = 0.01) + 2  init.net(status.vector = status, infTime.vector = infTime) #> Network Model Initial Conditions #> ================================= #> status.vector = s s s s s s i s s s s s i s s s s s s s s s s i i s s s s s s s  #> s s s s i s s s i i i s s i s s s s i s s s i s s s s s s s i s s s s s s s s s  #> i s s s i s s s s i s s i s s i s s s s s s s s s i i s #> infTime.vector = NA NA NA NA NA ..."},{"path":"http://epimodel.github.io/EpiModel/reference/init_nets.html","id":null,"dir":"Reference","previous_headings":"","what":"Network Data and Stats Initialization — init_nets","title":"Network Data and Stats Initialization — init_nets","text":"function initializes network data stats main netsim_dat class data object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init_nets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network Data and Stats Initialization — init_nets","text":"","code":"init_nets(dat, x)"},{"path":"http://epimodel.github.io/EpiModel/reference/init_nets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network Data and Stats Initialization — init_nets","text":"dat main data object class netsim_dat obtained create_dat_object, including control argument. x Either fitted network model object class netest, list objects.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init_nets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network Data and Stats Initialization — init_nets","text":"netsim_dat class main data object network data stats initialized.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init_status.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Disease Status Initialization Module for icm — init_status.icm","title":"Disease Status Initialization Module for icm — init_status.icm","text":"function sets initial disease status network given specified initial conditions.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init_status.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disease Status Initialization Module for icm — init_status.icm","text":"","code":"init_status.icm(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/init_status.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disease Status Initialization Module for icm — init_status.icm","text":"dat Main icm_dat class data object passed icm simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init_status.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disease Status Initialization Module for icm — init_status.icm","text":"updated icm_dat class main data object.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/init_status.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Disease Status Initialization Module for netsim — init_status.net","title":"Disease Status Initialization Module for netsim — init_status.net","text":"function sets initial disease status network given specified initial conditions.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init_status.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disease Status Initialization Module for netsim — init_status.net","text":"","code":"init_status.net(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/init_status.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disease Status Initialization Module for netsim — init_status.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init_status.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disease Status Initialization Module for netsim — init_status.net","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/init_status.net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Disease Status Initialization Module for netsim — init_status.net","text":"internal function sets, either randomly deterministically, nodes infected \\(t_1\\), starting time network simulations. number initially infected passed, function sets initial number infected based number specified, either set random draws binomial distribution exact number specified. either case, specific nodes infected random sample network. contrast, set specific nodes may infected passing vector containing status node netsim. initially infected nodes, module sets time infection \\(t_1\\), starting time network simulations. models vital dynamics, infection time initially infected nodes random draw exponential distribution rate parameter defined di.rate argument. models without vital dynamics, infection time random draw uniform distribution integers minimum 1 maximum number time steps model. cases, set infection times past, times multiplied -1, 2 added allow possible infection times step 2, disease simulation time loop starts.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/initialize.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization: icm Module — initialize.icm","title":"Initialization: icm Module — initialize.icm","text":"function initializes main icm_dat class data object, simulates disease status attributes.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/initialize.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization: icm Module — initialize.icm","text":"","code":"initialize.icm(param, init, control)"},{"path":"http://epimodel.github.io/EpiModel/reference/initialize.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization: icm Module — initialize.icm","text":"param EpiModel object class param.icm. init EpiModel object class init.icm. control EpiModel object class control.icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/initialize.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization: icm Module — initialize.icm","text":"updated icm_dat class main data object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/initialize.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization: netsim Module — initialize.net","title":"Initialization: netsim Module — initialize.net","text":"function initializes main netsim_dat class data object data stored, simulates initial state networks, simulates disease status attributes.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/initialize.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization: netsim Module — initialize.net","text":"","code":"initialize.net(x, param, init, control, s)"},{"path":"http://epimodel.github.io/EpiModel/reference/initialize.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization: netsim Module — initialize.net","text":"x control$start == 1, either fitted network model object class netest list objects. control$start > 1, object class netsim. multiple networks used, node sets (including network size nodal attributes) assumed networks. param EpiModel object class param.net. init EpiModel object class init.net. control EpiModel object class control.net. s Simulation number, used restarting dependent simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/initialize.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization: netsim Module — initialize.net","text":"netsim_dat class main data object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/initialize.net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialization: netsim Module — initialize.net","text":"re-initializing simulation, netsim object passed initialize.net must contain elements param, nwparam, epi, coef.form, num.nw.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/is_active_posit_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Are These Nodes Active (Positional IDs) — is_active_posit_ids","title":"Are These Nodes Active (Positional IDs) — is_active_posit_ids","text":"Nodes Active (Positional IDs)","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/is_active_posit_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are These Nodes Active (Positional IDs) — is_active_posit_ids","text":"","code":"is_active_posit_ids(dat, posit_ids)"},{"path":"http://epimodel.github.io/EpiModel/reference/is_active_posit_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are These Nodes Active (Positional IDs) — is_active_posit_ids","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. posit_ids vector node positional identifiers.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/is_active_posit_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are These Nodes Active (Positional IDs) — is_active_posit_ids","text":"logical vector TRUE node still active FALSE otherwise.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/is_active_unique_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Are These Nodes Active (Unique IDs) — is_active_unique_ids","title":"Are These Nodes Active (Unique IDs) — is_active_unique_ids","text":"Nodes Active (Unique IDs)","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/is_active_unique_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are These Nodes Active (Unique IDs) — is_active_unique_ids","text":"","code":"is_active_unique_ids(dat, unique_ids)"},{"path":"http://epimodel.github.io/EpiModel/reference/is_active_unique_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are These Nodes Active (Unique IDs) — is_active_unique_ids","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. unique_ids vector node unique identifiers.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/is_active_unique_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are These Nodes Active (Unique IDs) — is_active_unique_ids","text":"logical vector TRUE node still active FALSE otherwise.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/make_module_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Populate the Module List After the Initialization Module is run — make_module_list","title":"Populate the Module List After the Initialization Module is run — make_module_list","text":"Populate Module List Initialization Module run","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/make_module_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Populate the Module List After the Initialization Module is run — make_module_list","text":"","code":"make_module_list(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/make_module_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Populate the Module List After the Initialization Module is run — make_module_list","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/make_module_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Populate the Module List After the Initialization Module is run — make_module_list","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/make_stats_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Summary Table of Simulation Statistics — make_stats_table","title":"Create a Summary Table of Simulation Statistics — make_stats_table","text":"Create Summary Table Simulation Statistics","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/make_stats_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Summary Table of Simulation Statistics — make_stats_table","text":"","code":"make_stats_table(stats, targets)"},{"path":"http://epimodel.github.io/EpiModel/reference/make_stats_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Summary Table of Simulation Statistics — make_stats_table","text":"stats list simulated statistics matrices, length equal number simulations performed.  matrix one row simulated network dynamic == FALSE, one row time step dynamic == TRUE, one column statistic.  columns named statistics correspond , matrices statistics, order.  matrix may attr-style attribute named \"ess\" attached, giving effective sample sizes columns matrix; attribute NULL, effective sample sizes computed within call make_stats_table. targets vector target values statistics stats. May named (case targets matched statistics based column names matrices stats) unnamed (case targets matched statistics based position, number targets must equal number columns).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/make_stats_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Summary Table of Simulation Statistics — make_stats_table","text":"data.frame summarizing simulated statistics.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/mcat.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Out Test Progress to Console — mcat","title":"Write Out Test Progress to Console — mcat","text":"Writes name test ... console show test progress.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/mcat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Out Test Progress to Console — mcat","text":"","code":"mcat(test)"},{"path":"http://epimodel.github.io/EpiModel/reference/mcat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Out Test Progress to Console — mcat","text":"test Character string name test.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/merge.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Data across Stochastic Individual Contact Model Simulations — merge.icm","title":"Merge Data across Stochastic Individual Contact Model Simulations — merge.icm","text":"Merges epidemiological data two independent simulations stochastic individual contact models icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/merge.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Data across Stochastic Individual Contact Model Simulations — merge.icm","text":"","code":"# S3 method for class 'icm' merge(x, y, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/merge.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Data across Stochastic Individual Contact Model Simulations — merge.icm","text":"x EpiModel object class icm. y Another EpiModel object class icm, identical model parameterization x. ... Additional merge arguments (used).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/merge.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Data across Stochastic Individual Contact Model Simulations — merge.icm","text":"EpiModel object class icm containing data x y.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/merge.icm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge Data across Stochastic Individual Contact Model Simulations — merge.icm","text":"merge function combines results two independent simulations icm class models, simulated separate function calls. model parameterization two calls must exactly , except number simulations call. allows manual parallelization model simulations. merge function work default merge, allows combined object structure differs input elements. Instead, function checks objects identical model parameterization every respect (except number simulations) binds results.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/merge.icm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Data across Stochastic Individual Contact Model Simulations — merge.icm","text":"","code":"param <- param.icm(inf.prob = 0.2, act.rate = 0.8) init <- init.icm(s.num = 1000, i.num = 100) control <- control.icm(type = \"SI\", nsteps = 10,                        nsims = 3, verbose = FALSE) x <- icm(param, init, control)  control <- control.icm(type = \"SI\", nsteps = 10,                        nsims = 1, verbose = FALSE) y <- icm(param, init, control)  z <- merge(x, y)  # Examine separate and merged data as.data.frame(x) #>    sim time s.num i.num  num si.flow #> 1    1    1  1000   100 1100       0 #> 2    1    2   992   108 1100       8 #> 3    1    3   976   124 1100      16 #> 4    1    4   963   137 1100      13 #> 5    1    5   946   154 1100      17 #> 6    1    6   919   181 1100      27 #> 7    1    7   894   206 1100      25 #> 8    1    8   864   236 1100      30 #> 9    1    9   834   266 1100      30 #> 10   1   10   804   296 1100      30 #> 11   2    1  1000   100 1100       0 #> 12   2    2   983   117 1100      17 #> 13   2    3   966   134 1100      17 #> 14   2    4   947   153 1100      19 #> 15   2    5   930   170 1100      17 #> 16   2    6   908   192 1100      22 #> 17   2    7   881   219 1100      27 #> 18   2    8   852   248 1100      29 #> 19   2    9   819   281 1100      33 #> 20   2   10   780   320 1100      39 #> 21   3    1  1000   100 1100       0 #> 22   3    2   984   116 1100      16 #> 23   3    3   967   133 1100      17 #> 24   3    4   951   149 1100      16 #> 25   3    5   933   167 1100      18 #> 26   3    6   917   183 1100      16 #> 27   3    7   889   211 1100      28 #> 28   3    8   861   239 1100      28 #> 29   3    9   832   268 1100      29 #> 30   3   10   805   295 1100      27 as.data.frame(y) #>    sim time s.num i.num  num si.flow #> 1    1    1  1000   100 1100       0 #> 2    1    2   985   115 1100      15 #> 3    1    3   960   140 1100      25 #> 4    1    4   941   159 1100      19 #> 5    1    5   921   179 1100      20 #> 6    1    6   895   205 1100      26 #> 7    1    7   868   232 1100      27 #> 8    1    8   839   261 1100      29 #> 9    1    9   814   286 1100      25 #> 10   1   10   788   312 1100      26 as.data.frame(z) #>    sim time s.num i.num  num si.flow #> 1    1    1  1000   100 1100       0 #> 2    1    2   992   108 1100       8 #> 3    1    3   976   124 1100      16 #> 4    1    4   963   137 1100      13 #> 5    1    5   946   154 1100      17 #> 6    1    6   919   181 1100      27 #> 7    1    7   894   206 1100      25 #> 8    1    8   864   236 1100      30 #> 9    1    9   834   266 1100      30 #> 10   1   10   804   296 1100      30 #> 11   2    1  1000   100 1100       0 #> 12   2    2   983   117 1100      17 #> 13   2    3   966   134 1100      17 #> 14   2    4   947   153 1100      19 #> 15   2    5   930   170 1100      17 #> 16   2    6   908   192 1100      22 #> 17   2    7   881   219 1100      27 #> 18   2    8   852   248 1100      29 #> 19   2    9   819   281 1100      33 #> 20   2   10   780   320 1100      39 #> 21   3    1  1000   100 1100       0 #> 22   3    2   984   116 1100      16 #> 23   3    3   967   133 1100      17 #> 24   3    4   951   149 1100      16 #> 25   3    5   933   167 1100      18 #> 26   3    6   917   183 1100      16 #> 27   3    7   889   211 1100      28 #> 28   3    8   861   239 1100      28 #> 29   3    9   832   268 1100      29 #> 30   3   10   805   295 1100      27 #> 31   4    1  1000   100 1100       0 #> 32   4    2   985   115 1100      15 #> 33   4    3   960   140 1100      25 #> 34   4    4   941   159 1100      19 #> 35   4    5   921   179 1100      20 #> 36   4    6   895   205 1100      26 #> 37   4    7   868   232 1100      27 #> 38   4    8   839   261 1100      29 #> 39   4    9   814   286 1100      25 #> 40   4   10   788   312 1100      26"},{"path":"http://epimodel.github.io/EpiModel/reference/merge.netsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Model Simulations across netsim Objects — merge.netsim","title":"Merge Model Simulations across netsim Objects — merge.netsim","text":"Merges epidemiological data two independent simulations stochastic network models netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/merge.netsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Model Simulations across netsim Objects — merge.netsim","text":"","code":"# S3 method for class 'netsim' merge(   x,   y,   keep.transmat = TRUE,   keep.network = TRUE,   keep.nwstats = TRUE,   keep.other = TRUE,   param.error = TRUE,   keep.diss.stats = TRUE,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/merge.netsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Model Simulations across netsim Objects — merge.netsim","text":"x EpiModel object class netsim. y Another EpiModel object class netsim, identical model parameterization x. keep.transmat TRUE, keep transmission matrices original x y elements. Note: transmission matrices saved (save.transmat == TRUE). keep.network TRUE, keep networkDynamic objects original x y elements. Note: network saved (tergmLite == FALSE). keep.nwstats TRUE, keep network statistics (set nwstats.formula parameter control.netsim) original x y elements. keep.TRUE, keep simulation elements (set save.parameter control.netsim) original x y elements. param.error TRUE, x y different params (param.net) controls (passed control.net) error prevent merge. Use FALSE override check. keep.diss.stats TRUE, keep diss.stats original x y objects. ... Additional merge arguments (currently used).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/merge.netsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Model Simulations across netsim Objects — merge.netsim","text":"EpiModel object class netsim containing data x y.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/merge.netsim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge Model Simulations across netsim Objects — merge.netsim","text":"merge function combines results two independent simulations netsim class models, simulated separate function calls. model parameterization two calls must exactly , except number simulations call. allows manual parallelization model simulations. merge function work default merge, allows combined object structure differs input elements. Instead, function checks objects identical model parameterization every respect (except number simulations) binds results.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/merge.netsim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Model Simulations across netsim Objects — merge.netsim","text":"","code":"# Network model nw <- network_initialize(n = 100) coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 10) est <- netest(nw, formation = ~edges, target.stats = 25,               coef.diss = coef.diss, verbose = FALSE) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  # Epidemic models param <- param.net(inf.prob = 1) init <- init.net(i.num = 1) control <- control.net(type = \"SI\", nsteps = 20, nsims = 2,                        save.nwstats = TRUE,                        nwstats.formula = ~edges + degree(0),                        verbose = FALSE) x <- netsim(est, param, init, control) y <- netsim(est, param, init, control)  # Merging z <- merge(x, y)  # Examine separate and merged data as.data.frame(x) #>    sim time s.num i.num num si.flow #> 1    1    1    99     1 100      NA #> 2    1    2    99     1 100       0 #> 3    1    3    99     1 100       0 #> 4    1    4    99     1 100       0 #> 5    1    5    99     1 100       0 #> 6    1    6    99     1 100       0 #> 7    1    7    99     1 100       0 #> 8    1    8    99     1 100       0 #> 9    1    9    99     1 100       0 #> 10   1   10    99     1 100       0 #> 11   1   11    99     1 100       0 #> 12   1   12    99     1 100       0 #> 13   1   13    99     1 100       0 #> 14   1   14    99     1 100       0 #> 15   1   15    99     1 100       0 #> 16   1   16    99     1 100       0 #> 17   1   17    98     2 100       1 #> 18   1   18    98     2 100       0 #> 19   1   19    98     2 100       0 #> 20   1   20    98     2 100       0 #> 21   2    1    99     1 100      NA #> 22   2    2    99     1 100       0 #> 23   2    3    99     1 100       0 #> 24   2    4    99     1 100       0 #> 25   2    5    99     1 100       0 #> 26   2    6    99     1 100       0 #> 27   2    7    99     1 100       0 #> 28   2    8    98     2 100       1 #> 29   2    9    98     2 100       0 #> 30   2   10    98     2 100       0 #> 31   2   11    98     2 100       0 #> 32   2   12    98     2 100       0 #> 33   2   13    98     2 100       0 #> 34   2   14    98     2 100       0 #> 35   2   15    98     2 100       0 #> 36   2   16    98     2 100       0 #> 37   2   17    98     2 100       0 #> 38   2   18    98     2 100       0 #> 39   2   19    98     2 100       0 #> 40   2   20    98     2 100       0 as.data.frame(y) #>    sim time s.num i.num num si.flow #> 1    1    1    99     1 100      NA #> 2    1    2    98     2 100       1 #> 3    1    3    97     3 100       1 #> 4    1    4    96     4 100       1 #> 5    1    5    96     4 100       0 #> 6    1    6    96     4 100       0 #> 7    1    7    96     4 100       0 #> 8    1    8    95     5 100       1 #> 9    1    9    94     6 100       1 #> 10   1   10    92     8 100       2 #> 11   1   11    91     9 100       1 #> 12   1   12    90    10 100       1 #> 13   1   13    89    11 100       1 #> 14   1   14    89    11 100       0 #> 15   1   15    89    11 100       0 #> 16   1   16    89    11 100       0 #> 17   1   17    88    12 100       1 #> 18   1   18    87    13 100       1 #> 19   1   19    86    14 100       1 #> 20   1   20    85    15 100       1 #> 21   2    1    99     1 100      NA #> 22   2    2    99     1 100       0 #> 23   2    3    99     1 100       0 #> 24   2    4    99     1 100       0 #> 25   2    5    99     1 100       0 #> 26   2    6    99     1 100       0 #> 27   2    7    99     1 100       0 #> 28   2    8    99     1 100       0 #> 29   2    9    99     1 100       0 #> 30   2   10    99     1 100       0 #> 31   2   11    99     1 100       0 #> 32   2   12    99     1 100       0 #> 33   2   13    99     1 100       0 #> 34   2   14    99     1 100       0 #> 35   2   15    99     1 100       0 #> 36   2   16    99     1 100       0 #> 37   2   17    99     1 100       0 #> 38   2   18    99     1 100       0 #> 39   2   19    99     1 100       0 #> 40   2   20    99     1 100       0 as.data.frame(z) #>    sim time s.num i.num num si.flow #> 1    1    1    99     1 100      NA #> 2    1    2    99     1 100       0 #> 3    1    3    99     1 100       0 #> 4    1    4    99     1 100       0 #> 5    1    5    99     1 100       0 #> 6    1    6    99     1 100       0 #> 7    1    7    99     1 100       0 #> 8    1    8    99     1 100       0 #> 9    1    9    99     1 100       0 #> 10   1   10    99     1 100       0 #> 11   1   11    99     1 100       0 #> 12   1   12    99     1 100       0 #> 13   1   13    99     1 100       0 #> 14   1   14    99     1 100       0 #> 15   1   15    99     1 100       0 #> 16   1   16    99     1 100       0 #> 17   1   17    98     2 100       1 #> 18   1   18    98     2 100       0 #> 19   1   19    98     2 100       0 #> 20   1   20    98     2 100       0 #> 21   2    1    99     1 100      NA #> 22   2    2    99     1 100       0 #> 23   2    3    99     1 100       0 #> 24   2    4    99     1 100       0 #> 25   2    5    99     1 100       0 #> 26   2    6    99     1 100       0 #> 27   2    7    99     1 100       0 #> 28   2    8    98     2 100       1 #> 29   2    9    98     2 100       0 #> 30   2   10    98     2 100       0 #> 31   2   11    98     2 100       0 #> 32   2   12    98     2 100       0 #> 33   2   13    98     2 100       0 #> 34   2   14    98     2 100       0 #> 35   2   15    98     2 100       0 #> 36   2   16    98     2 100       0 #> 37   2   17    98     2 100       0 #> 38   2   18    98     2 100       0 #> 39   2   19    98     2 100       0 #> 40   2   20    98     2 100       0 #> 41   3    1    99     1 100      NA #> 42   3    2    98     2 100       1 #> 43   3    3    97     3 100       1 #> 44   3    4    96     4 100       1 #> 45   3    5    96     4 100       0 #> 46   3    6    96     4 100       0 #> 47   3    7    96     4 100       0 #> 48   3    8    95     5 100       1 #> 49   3    9    94     6 100       1 #> 50   3   10    92     8 100       2 #> 51   3   11    91     9 100       1 #> 52   3   12    90    10 100       1 #> 53   3   13    89    11 100       1 #> 54   3   14    89    11 100       0 #> 55   3   15    89    11 100       0 #> 56   3   16    89    11 100       0 #> 57   3   17    88    12 100       1 #> 58   3   18    87    13 100       1 #> 59   3   19    86    14 100       1 #> 60   3   20    85    15 100       1 #> 61   4    1    99     1 100      NA #> 62   4    2    99     1 100       0 #> 63   4    3    99     1 100       0 #> 64   4    4    99     1 100       0 #> 65   4    5    99     1 100       0 #> 66   4    6    99     1 100       0 #> 67   4    7    99     1 100       0 #> 68   4    8    99     1 100       0 #> 69   4    9    99     1 100       0 #> 70   4   10    99     1 100       0 #> 71   4   11    99     1 100       0 #> 72   4   12    99     1 100       0 #> 73   4   13    99     1 100       0 #> 74   4   14    99     1 100       0 #> 75   4   15    99     1 100       0 #> 76   4   16    99     1 100       0 #> 77   4   17    99     1 100       0 #> 78   4   18    99     1 100       0 #> 79   4   19    99     1 100       0 #> 80   4   20    99     1 100       0"},{"path":"http://epimodel.github.io/EpiModel/reference/modules.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Modules for Stochastic Individual Contact Models — modules.icm","title":"Modules for Stochastic Individual Contact Models — modules.icm","text":"Stochastic individual contact models infectious disease simulate epidemics contacts individuals instantaneous events discrete time. intended stochastic microsimulation analogs deterministic compartmental models. icm function handles simulation tasks. Within function series modules initialize simulation simulate new infections, recoveries, vital dynamics time step. module also handles basic bookkeeping calculations disease prevalence. Writing original ICMs require modifying existing modules adding new modules workflow icm. existing modules may used template replacement new modules. help page presents brief overview module functions order used within icm, order help guide users writing module functions. module functions shown help index since called directly end-user. understand functions detail, review separate help pages listed .","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.icm.html","id":"initialization-module","dir":"Reference","previous_headings":"","what":"Initialization Module","title":"Modules for Stochastic Individual Contact Models — modules.icm","text":"function sets agent attributes, like disease status, network starting time step disease simulation, \\(t_1\\). multiple-simulation function calls, reset beginning simulation. initialize.icm: sets agents initially infected, initial conditions passed init.icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.icm.html","id":"disease-status-modification-modules","dir":"Reference","previous_headings":"","what":"Disease Status Modification Modules","title":"Modules for Stochastic Individual Contact Models — modules.icm","text":"main disease simulation occurs time step given current state population step. Infection agents simulated function disease parameters population composition. Recovery agents likewise simulated respect infected nodes. functions also analyze flows summary measures disease incidence. infection.icm: randomly draws edgelist given parameters, subsets list discordant pairs, simulates transmission discordant pairs series draws binomial distribution. recovery.icm: simulates recovery infection either lifelong immune state (SIR models) back susceptible state (SIS models), function recovery rate specified rec.rate parameter. recovery rate may vary two-group models.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.icm.html","id":"demographic-modules","dir":"Reference","previous_headings":"","what":"Demographic Modules","title":"Modules for Stochastic Individual Contact Models — modules.icm","text":"Vital dynamics arrival departure processes simulated time step update entries exits population. used open-population ICMs. departures.icm: randomly simulates departures exits agents given departure rate specified disease-state group-specific departure parameters param.icm. involves deactivating agents population, historical data preserved simulation. arrivals.icm: randomly simulates new arrivals population given current population size arrival rate parameters. involves adding new agents population.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.icm.html","id":"bookkeeping-module","dir":"Reference","previous_headings":"","what":"Bookkeeping Module","title":"Modules for Stochastic Individual Contact Models — modules.icm","text":"Simulations require bookkeeping time step calculate summary epidemiological statistics used model output analysis. prevalence.icm: calculates number disease state (susceptible, infected, recovered) time step active agents population.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Modules for Stochastic Network Models — modules.net","title":"Modules for Stochastic Network Models — modules.net","text":"Stochastic network models infectious disease EpiModel require statistical modeling networks, simulation networks forward time, simulation epidemic dynamics top evolving networks. netsim function handles network epidemic simulation tasks. Within function series modules initialize simulation simulate new infections, recoveries, demographics network. Modules also handle resimulation network bookkeeping calculations disease prevalence. Writing original network models expand upon \"base\" model set require modifying existing modules adding new modules workflow netsim. existing modules may used template replacement new modules. help page provides orientation module functions, order used within netsim, help guide users writing functions. module functions shown help index since called directly end-user. understand functions detail, review separate help pages listed .","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.net.html","id":"initialization-module","dir":"Reference","previous_headings":"","what":"Initialization Module","title":"Modules for Stochastic Network Models — modules.net","text":"function sets nodal attributes, like disease status, network starting time step disease simulation, \\(t_1\\). multiple-simulation function calls, reset beginning individual simulation. initialize.net: sets main netsim_dat data structure used simulation, initializes nodes infected (via initial conditions passed init.net), simulates first time step networks given network model fit netest.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.net.html","id":"disease-status-modification-modules","dir":"Reference","previous_headings":"","what":"Disease Status Modification Modules","title":"Modules for Stochastic Network Models — modules.net","text":"main disease simulation occurs time step given current state network step. Infection nodes simulated function attributes nodes edges. Recovery nodes likewise simulated function nodal attributes infected nodes. functions also calculate summary flow measures disease incidence. infection.net: simulates disease transmission given edgelist discordant partnerships calculating relevant transmission act rates edge, updating nodal attributes summary statistics. recovery.net: simulates recovery infection either lifelong immune state (SIR models) back susceptible state (SIS models), function recovery rate parameters specified param.net.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.net.html","id":"demographic-modules","dir":"Reference","previous_headings":"","what":"Demographic Modules","title":"Modules for Stochastic Network Models — modules.net","text":"Demographics arrival departure processes simulated time step update entries exits network. used epidemic models network feedback, network resimulated time step account nodal changes affecting edges. departures.net: randomly simulates departure nodes given disease status (susceptible, infected, recovered), group-specific departure rates specified param.net. Departures involve deactivating nodes. arrivals.net: randomly simulates new arrivals network given current population size arrival rate specified .rate parameters. involves adding new nodes network.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.net.html","id":"network-resimulation-module","dir":"Reference","previous_headings":"","what":"Network Resimulation Module","title":"Modules for Stochastic Network Models — modules.net","text":"dependent network models, network object resimulated time step account changes size network (changed entries exits), disease status nodes. resim_nets: resimulates network object one time step forward given set formation dissolution coefficients estimated netest.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.net.html","id":"bookkeeping-module","dir":"Reference","previous_headings":"","what":"Bookkeeping Module","title":"Modules for Stochastic Network Models — modules.net","text":"Network simulations require bookkeeping time step calculate summary epidemiological statistics used model output analysis. prevalence.net: calculates number disease state (susceptible, infected, recovered) time step active nodes network. epi.control used, calculates statistics set specified nodal attributes. verbose.net: summarizes current state simulation prints console.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/modules.net.html","id":"one-amp-two-group-modules","dir":"Reference","previous_headings":"","what":"One- & Two-Group Modules","title":"Modules for Stochastic Network Models — modules.net","text":"epidemic type supplied within control.net, EpiModel defaults base epidemic demographic modules described (arrivals.FUN, departures.FUN, infection.FUN, recovery.FUN) correct .net function based variables passed param.net (e.g. num.g2, denoting population size group two, select two-group variants aforementioned modules). Two-group modules denoted .2g affix (e.g., recovery.2g.net)","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/multilayer.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Controls by Network — multilayer","title":"Specify Controls by Network — multilayer","text":"utility function allows specification certain netsim controls vary network.  netsim control arguments currently supporting multilayer specifications nwstats.formula, set.control.ergm, set.control.tergm, tergmLite.track.duration.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/multilayer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Controls by Network — multilayer","text":"","code":"multilayer(...)"},{"path":"http://epimodel.github.io/EpiModel/reference/multilayer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Controls by Network — multilayer","text":"... control arguments apply network, index network corresponding index control argument","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/multilayer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Controls by Network — multilayer","text":"object class multilayer containing specified control arguments","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/mutate_epi.html","id":null,"dir":"Reference","previous_headings":"","what":"Add New Epidemiology Variables — mutate_epi","title":"Add New Epidemiology Variables — mutate_epi","text":"Inspired dplyr::mutate, mutate_epi adds new variables epidemiological related variables within simulated model objects class EpiModel.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/mutate_epi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add New Epidemiology Variables — mutate_epi","text":"","code":"mutate_epi(x, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/mutate_epi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add New Epidemiology Variables — mutate_epi","text":"x EpiModel object class dcm, icm, netsim. ... Name-value pairs expressions (see examples ).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/mutate_epi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add New Epidemiology Variables — mutate_epi","text":"updated EpiModel object class dcm, icm, netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/mutate_epi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add New Epidemiology Variables — mutate_epi","text":"","code":"# DCM example param <- param.dcm(inf.prob = 0.2, act.rate = 0.25) init <- init.dcm(s.num = 500, i.num = 1) control <- control.dcm(type = \"SI\", nsteps = 500) mod1 <- dcm(param, init, control) mod1 <- mutate_epi(mod1, prev = i.num/num) plot(mod1, y = \"prev\")   # Network model example nw <- network_initialize(n = 100) nw <- set_vertex_attribute(nw, \"group\", rep(1:2, each = 50)) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20) est1 <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  param <- param.net(inf.prob = 0.3, inf.prob.g2 = 0.15) init <- init.net(i.num = 1, i.num.g2 = 0) control <- control.net(type = \"SI\", nsteps = 10, nsims = 3,                        verbose = FALSE) mod1 <- netsim(est1, param, init, control) mod1 #> EpiModel Simulation #> ======================= #> Model class: netsim #>  #> Simulation Summary #> ----------------------- #> Model type: SI #> No. simulations: 3 #> No. time steps: 10 #> No. NW groups: 2 #>  #> Fixed Parameters #> --------------------------- #> inf.prob = 0.3 #> inf.prob.g2 = 0.15 #> act.rate = 1 #> groups = 2 #>  #> Model Output #> ----------------------- #> Variables: s.num i.num num s.num.g2 i.num.g2 num.g2  #> si.flow si.flow.g2 #> Networks: sim1 ... sim3 #> Transmissions: sim1 ... sim3 #>  #> Formation Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges     50   45.567   -8.867  2.618  -1.693        11.851          10.2 #>  #>  #> Duration Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges     20   17.833  -10.833  0.949  -2.284         3.277         2.834 #>  #> Dissolution Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges   0.05     0.05    0.421  0.007   0.031          0.01         0.037 #>   # Add the prevalences to the dataset mod1 <- mutate_epi(mod1, i.prev = i.num / num,                          i.prev.g2 = i.num.g2 / num.g2) plot(mod1, y = c(\"i.prev\", \"i.prev.g2\"), qnts = 0.5, legend = TRUE)   # Add incidence rate per 100 person years (assume time step = 1 week) mod1 <- mutate_epi(mod1, ir100 = 5200*(si.flow + si.flow.g2) /                                       (s.num + s.num.g2)) as.data.frame(mod1) #>    sim time s.num i.num num s.num.g2 i.num.g2 num.g2 si.flow si.flow.g2 i.prev #> 1    1    1    49     1  50       50        0     50      NA         NA   0.02 #> 2    1    2    49     1  50       50        0     50       0          0   0.02 #> 3    1    3    48     2  50       50        0     50       1          0   0.04 #> 4    1    4    48     2  50       50        0     50       0          0   0.04 #> 5    1    5    48     2  50       50        0     50       0          0   0.04 #> 6    1    6    48     2  50       50        0     50       0          0   0.04 #> 7    1    7    48     2  50       49        1     50       0          1   0.04 #> 8    1    8    48     2  50       49        1     50       0          0   0.04 #> 9    1    9    48     2  50       49        1     50       0          0   0.04 #> 10   1   10    47     3  50       48        2     50       1          1   0.06 #> 11   2    1    49     1  50       50        0     50      NA         NA   0.02 #> 12   2    2    49     1  50       50        0     50       0          0   0.02 #> 13   2    3    48     2  50       50        0     50       1          0   0.04 #> 14   2    4    48     2  50       50        0     50       0          0   0.04 #> 15   2    5    48     2  50       50        0     50       0          0   0.04 #> 16   2    6    48     2  50       50        0     50       0          0   0.04 #> 17   2    7    48     2  50       50        0     50       0          0   0.04 #> 18   2    8    47     3  50       50        0     50       1          0   0.06 #> 19   2    9    47     3  50       50        0     50       0          0   0.06 #> 20   2   10    47     3  50       50        0     50       0          0   0.06 #> 21   3    1    49     1  50       50        0     50      NA         NA   0.02 #> 22   3    2    49     1  50       50        0     50       0          0   0.02 #> 23   3    3    49     1  50       50        0     50       0          0   0.02 #> 24   3    4    49     1  50       49        1     50       0          1   0.02 #> 25   3    5    49     1  50       49        1     50       0          0   0.02 #> 26   3    6    49     1  50       49        1     50       0          0   0.02 #> 27   3    7    49     1  50       49        1     50       0          0   0.02 #> 28   3    8    49     1  50       49        1     50       0          0   0.02 #> 29   3    9    49     1  50       49        1     50       0          0   0.02 #> 30   3   10    49     1  50       49        1     50       0          0   0.02 #>    i.prev.g2     ir100 #> 1       0.00        NA #> 2       0.00   0.00000 #> 3       0.00  53.06122 #> 4       0.00   0.00000 #> 5       0.00   0.00000 #> 6       0.00   0.00000 #> 7       0.02  53.60825 #> 8       0.02   0.00000 #> 9       0.02   0.00000 #> 10      0.04 109.47368 #> 11      0.00        NA #> 12      0.00   0.00000 #> 13      0.00  53.06122 #> 14      0.00   0.00000 #> 15      0.00   0.00000 #> 16      0.00   0.00000 #> 17      0.00   0.00000 #> 18      0.00  53.60825 #> 19      0.00   0.00000 #> 20      0.00   0.00000 #> 21      0.00        NA #> 22      0.00   0.00000 #> 23      0.00   0.00000 #> 24      0.02  53.06122 #> 25      0.02   0.00000 #> 26      0.02   0.00000 #> 27      0.02   0.00000 #> 28      0.02   0.00000 #> 29      0.02   0.00000 #> 30      0.02   0.00000 as.data.frame(mod1, out = \"mean\") #>    time    s.num    i.num num s.num.g2  i.num.g2 num.g2   si.flow si.flow.g2 #> 1     1 49.00000 1.000000  50 50.00000 0.0000000     50       NaN        NaN #> 2     2 49.00000 1.000000  50 50.00000 0.0000000     50 0.0000000  0.0000000 #> 3     3 48.33333 1.666667  50 50.00000 0.0000000     50 0.6666667  0.0000000 #> 4     4 48.33333 1.666667  50 49.66667 0.3333333     50 0.0000000  0.3333333 #> 5     5 48.33333 1.666667  50 49.66667 0.3333333     50 0.0000000  0.0000000 #> 6     6 48.33333 1.666667  50 49.66667 0.3333333     50 0.0000000  0.0000000 #> 7     7 48.33333 1.666667  50 49.33333 0.6666667     50 0.0000000  0.3333333 #> 8     8 48.00000 2.000000  50 49.33333 0.6666667     50 0.3333333  0.0000000 #> 9     9 48.00000 2.000000  50 49.33333 0.6666667     50 0.0000000  0.0000000 #> 10   10 47.66667 2.333333  50 49.00000 1.0000000     50 0.3333333  0.3333333 #>        i.prev   i.prev.g2    ir100 #> 1  0.02000000 0.000000000      NaN #> 2  0.02000000 0.000000000  0.00000 #> 3  0.03333333 0.000000000 35.37415 #> 4  0.03333333 0.006666667 17.68707 #> 5  0.03333333 0.006666667  0.00000 #> 6  0.03333333 0.006666667  0.00000 #> 7  0.03333333 0.013333333 17.86942 #> 8  0.04000000 0.013333333 17.86942 #> 9  0.04000000 0.013333333  0.00000 #> 10 0.04666667 0.020000000 36.49123"},{"path":"http://epimodel.github.io/EpiModel/reference/net-accessor.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to Access and Edit the Main netsim_dat Object in Network Models — net-accessor","title":"Functions to Access and Edit the Main netsim_dat Object in Network Models — net-accessor","text":"get_, set_, append_, add_ functions allow safe efficient way retrieve mutate main netsim_dat class object network models (typical variable name dat).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/net-accessor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to Access and Edit the Main netsim_dat Object in Network Models — net-accessor","text":"","code":"get_attr_list(dat, item = NULL)  get_attr(dat, item, posit_ids = NULL, override.null.error = FALSE)  add_attr(dat, item)  set_attr(dat, item, value, posit_ids = NULL, override.length.check = FALSE)  append_attr(dat, item, value, n.new)  remove_node_attr(dat, posit_ids)  get_epi_list(dat, item = NULL)  get_epi(dat, item, at = NULL, override.null.error = FALSE)  add_epi(dat, item)  set_epi(dat, item, at, value)  get_param_list(dat, item = NULL)  get_param(dat, item, override.null.error = FALSE)  add_param(dat, item)  set_param(dat, item, value)  get_control_list(dat, item = NULL)  get_control(dat, item, override.null.error = FALSE)  get_network_control(dat, network, item, override.null.error = FALSE)  add_control(dat, item)  set_control(dat, item, value)  get_init_list(dat, item = NULL)  get_init(dat, item, override.null.error = FALSE)  add_init(dat, item)  set_init(dat, item, value)  append_core_attr(dat, at, n.new)"},{"path":"http://epimodel.github.io/EpiModel/reference/net-accessor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to Access and Edit the Main netsim_dat Object in Network Models — net-accessor","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. item character vector containing name element access (get_ functions), create (add_ functions), edit (set_ append_ functions). Can length > 1 get_*_list functions. posit_ids set_attr get_attr, numeric vector posit_ids subset desired item. override.null.error TRUE, get_ return NULL item exist instead throwing error. (default = FALSE). value New value attributed set_ append_ functions. override.length.check TRUE, set_attr allows modification item size. (default = FALSE). n.new append_core_attr, number new nodes initiate core attributes; append_attr, number new elements append end item. get_epi, timestep access specified item; set_epi, timestep add new value epi output item; append_core_attr, current time step. network index network get control","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/net-accessor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to Access and Edit the Main netsim_dat Object in Network Models — net-accessor","text":"vector list vectors get_ functions; main list object set_, append_, add_ functions.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/net-accessor.html","id":"core-attribute","dir":"Reference","previous_headings":"","what":"Core Attribute","title":"Functions to Access and Edit the Main netsim_dat Object in Network Models — net-accessor","text":"append_core_attr function initializes attributes necessary EpiModel work (four core attributes : \"active\", \"unique_id\", \"entrTime\", \"exitTime\"). attributes used initialization phase simulation, create nodes (see initialize.net); also used adding nodes simulation (see arrivals.net).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/net-accessor.html","id":"mutability","dir":"Reference","previous_headings":"","what":"Mutability","title":"Functions to Access and Edit the Main netsim_dat Object in Network Models — net-accessor","text":"set_, append_, add_ functions modify netsim_dat object place. result must assigned back dat order registered: dat <- set_*(dat, item, value).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/net-accessor.html","id":"set-and-append-vs-add-","dir":"Reference","previous_headings":"","what":"set_ and append_ vs add_","title":"Functions to Access and Edit the Main netsim_dat Object in Network Models — net-accessor","text":"set_ append_ functions edit pre-existing element create new one exist already calling add_ functions internally.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/net-accessor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to Access and Edit the Main netsim_dat Object in Network Models — net-accessor","text":"","code":"dat <- create_dat_object(control = list(nsteps = 150)) dat <- append_core_attr(dat, 1, 100)  dat <- add_attr(dat, \"age\") dat <- set_attr(dat, \"age\", runif(100)) dat <- set_attr(dat, \"status\", rbinom(100, 1, 0.9)) dat <- append_attr(dat, \"status\", 1, 10) dat <- append_attr(dat, \"age\", NA, 10) get_attr_list(dat) #> $active #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  #> $entrTime #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  #> $exitTime #>   [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [26] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [51] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [76] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  #> $unique_id #>   [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18 #>  [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36 #>  [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54 #>  [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72 #>  [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 #>  [91]  91  92  93  94  95  96  97  98  99 100 #>  #> $age #>   [1] 0.704090369 0.006688182 0.817856184 0.214666902 0.491504228 0.559755405 #>   [7] 0.805175302 0.686336085 0.222169009 0.778594022 0.420193425 0.871153415 #>  [13] 0.608496110 0.078330556 0.444365631 0.162669908 0.760845326 0.722566311 #>  [19] 0.701210755 0.488646645 0.111995193 0.206219819 0.396012436 0.226479796 #>  [25] 0.550735588 0.823862592 0.369507225 0.907415280 0.988624807 0.848326449 #>  [31] 0.397229077 0.171014216 0.414827363 0.392055724 0.956480091 0.643862929 #>  [37] 0.750201265 0.761700642 0.478871147 0.203750858 0.141421030 0.118388054 #>  [43] 0.288137309 0.853066888 0.749456638 0.582563226 0.457053448 0.137151998 #>  [49] 0.486554086 0.866291023 0.783467444 0.811919667 0.681531546 0.016453522 #>  [55] 0.084276739 0.512968185 0.437201015 0.169162008 0.980899066 0.063738914 #>  [61] 0.923840689 0.331321878 0.619526952 0.438955051 0.139812627 0.455290131 #>  [67] 0.531221183 0.506365841 0.249873911 0.488281931 0.752215375 0.546390898 #>  [73] 0.882220431 0.986256457 0.503518561 0.725824599 0.386454617 0.014247679 #>  [79] 0.175181189 0.236391941 0.956912601 0.886869618 0.230511166 0.249074377 #>  [85] 0.720701747 0.905780326 0.654541427 0.644006039 0.936669014 0.558416004 #>  [91] 0.155095161 0.337097100 0.187390231 0.951736721 0.645011278 0.624031018 #>  [97] 0.756518194 0.466310136 0.173742835 0.473355886          NA          NA #> [103]          NA          NA          NA          NA          NA          NA #> [109]          NA          NA #>  #> $status #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 #>  [75] 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 #>  get_attr_list(dat, c(\"age\", \"active\")) #> $age #>   [1] 0.704090369 0.006688182 0.817856184 0.214666902 0.491504228 0.559755405 #>   [7] 0.805175302 0.686336085 0.222169009 0.778594022 0.420193425 0.871153415 #>  [13] 0.608496110 0.078330556 0.444365631 0.162669908 0.760845326 0.722566311 #>  [19] 0.701210755 0.488646645 0.111995193 0.206219819 0.396012436 0.226479796 #>  [25] 0.550735588 0.823862592 0.369507225 0.907415280 0.988624807 0.848326449 #>  [31] 0.397229077 0.171014216 0.414827363 0.392055724 0.956480091 0.643862929 #>  [37] 0.750201265 0.761700642 0.478871147 0.203750858 0.141421030 0.118388054 #>  [43] 0.288137309 0.853066888 0.749456638 0.582563226 0.457053448 0.137151998 #>  [49] 0.486554086 0.866291023 0.783467444 0.811919667 0.681531546 0.016453522 #>  [55] 0.084276739 0.512968185 0.437201015 0.169162008 0.980899066 0.063738914 #>  [61] 0.923840689 0.331321878 0.619526952 0.438955051 0.139812627 0.455290131 #>  [67] 0.531221183 0.506365841 0.249873911 0.488281931 0.752215375 0.546390898 #>  [73] 0.882220431 0.986256457 0.503518561 0.725824599 0.386454617 0.014247679 #>  [79] 0.175181189 0.236391941 0.956912601 0.886869618 0.230511166 0.249074377 #>  [85] 0.720701747 0.905780326 0.654541427 0.644006039 0.936669014 0.558416004 #>  [91] 0.155095161 0.337097100 0.187390231 0.951736721 0.645011278 0.624031018 #>  [97] 0.756518194 0.466310136 0.173742835 0.473355886          NA          NA #> [103]          NA          NA          NA          NA          NA          NA #> [109]          NA          NA #>  #> $active #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  get_attr(dat, \"status\") #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 #>  [75] 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 get_attr(dat, \"status\", c(1, 4)) #> [1] 1 1  dat <- add_epi(dat, \"i.num\") dat <- set_epi(dat, \"i.num\", 150, 10) dat <- set_epi(dat, \"s.num\", 150, 90) get_epi_list(dat) #> $i.num #>   [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [26] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [51] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [76] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 10 #>  #> $s.num #>   [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [26] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [51] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [76] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 90 #>  get_epi_list(dat, c(\"i.num\", \"s.num\")) #> $i.num #>   [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [26] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [51] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [76] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 10 #>  #> $s.num #>   [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [26] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [51] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [76] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 90 #>  get_epi(dat, \"i.num\") #>   [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [26] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [51] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [76] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA 10 get_epi(dat, \"i.num\", c(1, 4)) #> [1] NA NA  dat <- add_param(dat, \"x\") dat <- set_param(dat, \"x\", 0.4) dat <- set_param(dat, \"y\", 0.8) get_param_list(dat) #> $x #> [1] 0.4 #>  #> $y #> [1] 0.8 #>  get_param_list(dat, c(\"x\", \"y\")) #> $x #> [1] 0.4 #>  #> $y #> [1] 0.8 #>  get_param(dat, \"x\") #> [1] 0.4  dat <- add_init(dat, \"x\") dat <- set_init(dat, \"x\", 0.4) dat <- set_init(dat, \"y\", 0.8) get_init_list(dat) #> $x #> [1] 0.4 #>  #> $y #> [1] 0.8 #>  get_init_list(dat, c(\"x\", \"y\")) #> $x #> [1] 0.4 #>  #> $y #> [1] 0.8 #>  get_init(dat, \"x\") #> [1] 0.4  dat <- add_control(dat, \"x\") dat <- set_control(dat, \"x\", 0.4) dat <- set_control(dat, \"y\", 0.8) get_control_list(dat) #> $nsteps #> [1] 150 #>  #> $x #> [1] 0.4 #>  #> $y #> [1] 0.8 #>  get_control_list(dat, c(\"x\", \"y\")) #> $x #> [1] 0.4 #>  #> $y #> [1] 0.8 #>  get_control(dat, \"x\") #> [1] 0.4"},{"path":"http://epimodel.github.io/EpiModel/reference/netdx.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic Network Model Diagnostics — netdx","title":"Dynamic Network Model Diagnostics — netdx","text":"Runs dynamic diagnostics ERGM/STERGM estimated netest.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netdx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamic Network Model Diagnostics — netdx","text":"","code":"netdx(   x,   nsims = 1,   dynamic = TRUE,   nsteps,   nwstats.formula = \"formation\",   set.control.ergm = control.simulate.formula(),   set.control.tergm = control.simulate.formula.tergm(),   sequential = TRUE,   keep.tedgelist = FALSE,   keep.tnetwork = FALSE,   verbose = TRUE,   ncores = 1,   skip.dissolution = FALSE )"},{"path":"http://epimodel.github.io/EpiModel/reference/netdx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamic Network Model Diagnostics — netdx","text":"x EpiModel object class netest. nsims Number simulations run. dynamic TRUE, runs dynamic diagnostics. FALSE netest object fit Edges Dissolution approximation method, simulates static ERGM fit. nsteps Number time steps per simulation (dynamic simulations ). nwstats.formula right-hand sided ERGM formula network statistics interest. default formation formula network model contained x. set.control.ergm Control arguments passed ergm's simulate_formula.network (see details). set.control.tergm Control arguments passed tergm's simulate_formula.network (see details). sequential static diagnostics (dynamic=FALSE): FALSE, nsims simulated Markov chains begins initial network; TRUE, end one simulation used start next. keep.tedgelist TRUE, keep timed edgelist generated dynamic simulations. Returned form list matrices, one entry per simulation. Accessible $edgelist. keep.tnetwork TRUE, keep full networkDynamic objects dynamic simulations. Returned form list nD objects, one entry per simulation. Accessible $network. verbose TRUE, print progress console. ncores Number processor cores run multiple simulations , using foreach doParallel implementations. skip.dissolution TRUE, skip calculations duration dissolution stats netdx.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netdx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dynamic Network Model Diagnostics — netdx","text":"list class netdx.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netdx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dynamic Network Model Diagnostics — netdx","text":"netdx function handles dynamic network diagnostics network models fit netest function. Given fitted model, netdx simulates specified number dynamic networks specified number time steps per simulation. network statistics nwstats.formula saved time step. Summary statistics formation model terms, well dissolution model relational duration statistics, calculated can accessed printing plotting netdx object. See print.netdx plot.netdx details printing plotting.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netdx.html","id":"control-arguments","dir":"Reference","previous_headings":"","what":"Control Arguments","title":"Dynamic Network Model Diagnostics — netdx","text":"Models fit full STERGM method netest (setting edapprox argument FALSE) require call tergm's simulate_formula.network. Control parameters simulations may set using set.control.tergm netdx. parameters input control.simulate.formula.tergm function, available parameters listed tergm::control.simulate.formula.tergm help page tergm package. Models fit ERGM method edges dissolution approximation (setting edapprox TRUE) require call first ergm's simulate_formula.network simulating initial network, second tergm's simulate_formula.network simulating static network forward time. Control parameters may set processes netdx. first, parameters input control.simulate.formula() function, available parameters listed ergm::control.simulate.formula help page ergm package. second, parameters input control.simulate.formula.tergm() function, available parameters listed tergm::control.simulate.formula.tergm help page tergm package. example shown .","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/netdx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamic Network Model Diagnostics — netdx","text":"","code":"if (FALSE) { # \\dontrun{ # Network initialization and model parameterization nw <- network_initialize(n = 100) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~ offset(edges), duration = 25)  # Estimate the model est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)  # Static diagnostics on the ERGM fit dx1 <- netdx(est,   nsims = 1e4, dynamic = FALSE,   nwstats.formula = ~ edges + meandeg + concurrent ) dx1 plot(dx1, method = \"b\", stats = c(\"edges\", \"concurrent\"))  # Dynamic diagnostics on the STERGM approximation dx2 <- netdx(est,   nsims = 5, nsteps = 500,   nwstats.formula = ~ edges + meandeg + concurrent,   set.control.ergm = control.simulate.formula(MCMC.burnin = 1e6) ) dx2 plot(dx2, stats = c(\"edges\", \"meandeg\"), plots.joined = FALSE) plot(dx2, type = \"duration\") plot(dx2, type = \"dissolution\", qnts.col = \"orange2\") plot(dx2, type = \"dissolution\", method = \"b\", col = \"bisque\")  # Dynamic diagnostics on a more complex model nw <- network_initialize(n = 1000) nw <- set_vertex_attribute(nw, \"neighborhood\", rep(1:10, 100)) formation <- ~edges + nodematch(\"neighborhood\", diff = TRUE) target.stats <- c(800, 45, 81, 24, 16, 32, 19, 42, 21, 24, 31) coef.diss <- dissolution_coefs(dissolution = ~offset(edges) +                     offset(nodematch(\"neighborhood\", diff = TRUE)),                     duration = c(52, 58, 61, 55, 81, 62, 52, 64, 52, 68, 58)) est2 <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE) dx3 <- netdx(est2, nsims = 5, nsteps = 100) print(dx3) plot(dx3) plot(dx3, type = \"duration\", plots.joined = TRUE, qnts = 0.2, legend = TRUE) plot(dx3, type = \"dissolution\", mean.smooth = FALSE, mean.col = \"red\") } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/netest.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic Network Model Estimation — netest","title":"Dynamic Network Model Estimation — netest","text":"Estimates statistical network models using exponential random graph modeling (ERGM) framework extensions dynamic/temporal models (STERGM).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamic Network Model Estimation — netest","text":"","code":"netest(   nw,   formation,   target.stats,   coef.diss,   constraints,   coef.form = NULL,   edapprox = TRUE,   set.control.ergm = control.ergm(),   set.control.tergm = control.tergm(),   set.control.ergm.ego = NULL,   verbose = FALSE,   nested.edapprox = TRUE,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/netest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamic Network Model Estimation — netest","text":"nw object class network egor, latter indicating ergm.ego fit. formation Right-hand sided STERGM formation formula form ~edges + ..., ... additional network statistics. target.stats Vector target statistics formation model, one number network statistic model. Ignored fitting via ergm.ego. coef.diss object class disscoef output dissolution_coefs function. constraints Right-hand sided formula specifying constraints modeled network, form ~..., ... constraint terms. default, constraints set. coef.form Vector coefficients offset terms formation formula. edapprox TRUE, use indirect edges dissolution approximation  method dynamic model fit, otherwise use time-intensive full STERGM estimation (see details).  nw class egor, edapprox = TRUE supported. set.control.ergm Control arguments passed ergm (see details). set.control.tergm Control arguments passed tergm (see details). set.control.ergm.ego Control arguments passed ergm.ego (see details). verbose TRUE, print model fitting progress console. nested.edapprox Logical. edapprox = TRUE dissolution model initial segment formation model (see details). ... Additional arguments passed functions.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dynamic Network Model Estimation — netest","text":"fitted network model object class netest.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dynamic Network Model Estimation — netest","text":"netest wrapper function ergm, ergm.ego, tergm functions estimate static dynamic network models. Network model estimation first step simulating stochastic network epidemic model EpiModel. output netest necessary input running epidemic simulations netsim. fitted network model, one always first proceed model diagnostics, available netdx function, check model fit. detailed description fitting models, along examples, may found Network Modeling Epidemics tutorials.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netest.html","id":"edges-dissolution-approximation","dir":"Reference","previous_headings":"","what":"Edges Dissolution Approximation","title":"Dynamic Network Model Estimation — netest","text":"edges dissolution approximation method described Carnegie et al. approximation requires dissolution coefficients known, formation model fit cross-sectional data conditional dissolution coefficients, terms dissolution model subset formation model. certain additional conditions, formation coefficients STERGM model approximately equal coefficients model fit observed cross-sectional data ERGM, minus corresponding coefficients dissolution model. approximation thus estimates ERGM (typically much faster estimating STERGM) subtracts dissolution coefficients. conditions approximation best hold relational changes one time step another; .e. either average relational durations long, density low, . Conveniently, conditions STERGM estimation slowest. Note approximation also used obtain starting values STERGM estimate latter conducted. estimation allow calculation standard errors, p-values, likelihood formation model; thus, approach use main goal estimation drive dynamic network simulations rather conduct inference formation model. user strongly encouraged examine behavior resulting simulations confirm approximation adequate purposes. example, see vignette package tergm. recently found subtracting modified version dissolution coefficients formation coefficients provides principled approximation, now form approximation applied netest. modified values subtracted formation coefficients equivalent (crude) dissolution coefficients target durations increased 1. nested.edapprox argument toggles whether implement modified version appending dissolution terms formation model appending relevant values vector formation model coefficients (value = FALSE), whereas standard version subtracts relevant values initial formation model coefficients (value = TRUE).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netest.html","id":"control-arguments","dir":"Reference","previous_headings":"","what":"Control Arguments","title":"Dynamic Network Model Estimation — netest","text":"ergm, ergm.ego, tergm functions allow control settings model fitting process. fitting STERGM directly (setting edapprox FALSE), control parameters may passed tergm function set.control.tergm argument netest. controls input control.tergm() function, available parameters listed tergm::control.tergm help page tergm package. fitting STERGM indirectly (setting edapprox TRUE), control settings may passed ergm function using set.control.ergm, ergm.ego function using set.control.ergm.ego. controls input control.ergm() control.ergm.ego() functions, respectively, available parameters listed ergm::control.ergm help page ergm package ergm.ego::control.ergm.ego help page ergm.ego package. example .","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dynamic Network Model Estimation — netest","text":"Krivitsky PN, Handcock MS. \"Separable Model Dynamic Networks.\" JRSS(B). 2014; 76.1: 29-46. Carnegie NB, Krivitsky PN, Hunter DR, Goodreau SM. Approximation Method Improving Dynamic Network Model Fitting. Journal Computational Graphical Statistics. 2014; 24(2): 502-519. Jenness SM, Goodreau SM Morris M. EpiModel: R Package Mathematical Modeling Infectious Disease Networks. Journal Statistical Software. 2018; 84(8): 1-47.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/netest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamic Network Model Estimation — netest","text":"","code":"# Initialize a network of 100 nodes nw <- network_initialize(n = 100)  # Set formation formula formation <- ~edges + concurrent  # Set target statistics for formation target.stats <- c(50, 25)  # Obtain the offset coefficients coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 10)  # Estimate the STERGM using the edges dissolution approximation est <- netest(nw, formation, target.stats, coef.diss,               set.control.ergm = control.ergm(MCMC.burnin = 1e5,                                               MCMC.interval = 1000)) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE. #> Starting Monte Carlo maximum likelihood estimation (MCMLE): #> Iteration 1 of at most 60: #> Warning: ‘glpk’ selected as the solver, but package ‘Rglpk’ is not available; falling back to ‘lpSolveAPI’. This should be fine unless the sample size and/or the number of parameters is very big. #> 1  #> Optimizing with step length 1.0000. #> The log-likelihood improved by 0.2794. #> Estimating equations are not within tolerance region. #> Iteration 2 of at most 60: #> 1  #> Optimizing with step length 1.0000. #> The log-likelihood improved by 0.0136. #> Convergence test p-value: < 0.0001.  #> Converged with 99% confidence. #> Finished MCMLE. #> This model was fit using MCMC.  To examine model diagnostics and check #> for degeneracy, use the mcmc.diagnostics() function. est #> EpiModel Network Estimation #> ======================= #> Model class: netest #> Estimation Method: ERGM with Edges Approximation #>  #> Model Form #> ----------------------- #> Formation: ~edges + concurrent #> <environment: 0x55ac6fc7a648> #> Target Statistics: 50 25 #> Constraints: ~. #>  #> Dissolution: ~offset(edges) #> Target Statistics: 10  # To estimate the STERGM directly, use edapprox = FALSE # est2 <- netest(nw, formation, target.stats, coef.diss, edapprox = FALSE)"},{"path":"http://epimodel.github.io/EpiModel/reference/netsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Stochastic Network Models — netsim","title":"Stochastic Network Models — netsim","text":"Simulates stochastic network epidemic models infectious disease.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stochastic Network Models — netsim","text":"","code":"netsim(x, param, init, control)"},{"path":"http://epimodel.github.io/EpiModel/reference/netsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stochastic Network Models — netsim","text":"x control$start == 1, either fitted network model object class netest list objects. control$start > 1, object class netsim. multiple networks used, node sets (including network size nodal attributes) assumed networks. param Model parameters, object class param.net. init Initial conditions, object class init.net. control Control settings, object class control.net.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stochastic Network Models — netsim","text":"list class netsim following elements: param: epidemic parameters passed model param, additional parameters added necessary. control: control settings passed model control, additional controls added necessary. epi: list data frames, one epidemiological output model. Outputs base models always include size compartment, well flows , , compartments. stats: list containing two sublists, nwstats network statistics saved simulation, transmat transmission matrix saved simulation. See control.net details. network: list lists networkDynamic networkLite objects, one list objects model simulation. control$raw.output == TRUE: list raw (pre-processed) netsim_dat objects, use simulation continuation.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netsim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stochastic Network Models — netsim","text":"Stochastic network models explicitly represent phenomena within across edges (pairs nodes remain connected) time. enables edges duration, allowing repeated transmission-related acts within dyad, specification edge formation dissolution rates, control temporal sequencing multiple edges, specification network-level features. detailed description models, along examples, found Network Modeling Epidemics course materials. netsim function performs modeling base model types original models. Base model types include one-group two-group models disease types Susceptible-Infected (SI), Susceptible-Infected-Recovered (SIR), Susceptible-Infected-Susceptible (SIS). Original models may parameterized writing new process modules either take place existing modules (example, disease recovery), supplement set existing processes new one contained new module. functionality documented Extending EpiModel section Network Modeling Epidemics course materials. list modules within netsim available modification listed modules.net.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netsim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stochastic Network Models — netsim","text":"Jenness SM, Goodreau SM Morris M. EpiModel: R Package Mathematical Modeling Infectious Disease Networks. Journal Statistical Software. 2018; 84(8): 1-47.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/netsim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stochastic Network Models — netsim","text":"","code":"if (FALSE) { # \\dontrun{ ## Example 1: SI Model without Network Feedback # Network model estimation nw <- network_initialize(n = 100) nw <- set_vertex_attribute(nw, \"group\", rep(1:2, each = 50)) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20) est1 <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)  # Epidemic model param <- param.net(inf.prob = 0.3, inf.prob.g2 = 0.15) init <- init.net(i.num = 10, i.num.g2 = 10) control <- control.net(type = \"SI\", nsteps = 100, nsims = 5, verbose.int = 0) mod1 <- netsim(est1, param, init, control)  # Print, plot, and summarize the results mod1 plot(mod1) summary(mod1, at = 50)  ## Example 2: SIR Model with Network Feedback # Recalculate dissolution coefficient with departure rate coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20,                                d.rate = 0.0021)  # Reestimate the model with new coefficient est2 <- netest(nw, formation, target.stats, coef.diss)  # Reset parameters to include demographic rates param <- param.net(inf.prob = 0.3, inf.prob.g2 = 0.15,                    rec.rate = 0.02, rec.rate.g2 = 0.02,                    a.rate = 0.002, a.rate.g2 = NA,                    ds.rate = 0.001, ds.rate.g2 = 0.001,                    di.rate = 0.001, di.rate.g2 = 0.001,                    dr.rate = 0.001, dr.rate.g2 = 0.001) init <- init.net(i.num = 10, i.num.g2 = 10,                  r.num = 0, r.num.g2 = 0) control <- control.net(type = \"SIR\", nsteps = 100, nsims = 5,                        resimulate.network = TRUE, tergmLite = TRUE)  # Simulate the model with new network fit mod2 <- netsim(est2, param, init, control)  # Print, plot, and summarize the results mod2 plot(mod2) summary(mod2, at = 40) } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/netsim_cond_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Message to Find in Which Module a condition Occurred — netsim_cond_msg","title":"Message to Find in Which Module a condition Occurred — netsim_cond_msg","text":"function returns formatted string describing , , error, message, warning occurred.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netsim_cond_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Message to Find in Which Module a condition Occurred — netsim_cond_msg","text":"","code":"netsim_cond_msg(cond, module, at, msg)"},{"path":"http://epimodel.github.io/EpiModel/reference/netsim_cond_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message to Find in Which Module a condition Occurred — netsim_cond_msg","text":"cond type condition handled (message, warning, error). module name module condition occurred. time step condition occurred. msg condition's message.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netsim_cond_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Message to Find in Which Module a condition Occurred — netsim_cond_msg","text":"formatted string describing condition occurred well condition's message.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netsim_error_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle the Logging of Traceback and Dumping of Frames on Error — netsim_error_logger","title":"Handle the Logging of Traceback and Dumping of Frames on Error — netsim_error_logger","text":"control$.traceback..error == TRUE, function prints traceback current simulation STDIN. useful ncores > 1 HPC settings. control$.dump.frames..error == TRUE, function saves debugging dump \"postmortem debugging\". dumps named \"dump_%Y%m%d_%H%M%S_s.rda\" stored root working directory.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netsim_error_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle the Logging of Traceback and Dumping of Frames on Error — netsim_error_logger","text":"","code":"netsim_error_logger(dat, s)"},{"path":"http://epimodel.github.io/EpiModel/reference/netsim_error_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle the Logging of Traceback and Dumping of Frames on Error — netsim_error_logger","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. s number simulation failed","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/netsim_error_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle the Logging of Traceback and Dumping of Frames on Error — netsim_error_logger","text":"Nothing, logging dumping frames, function gives control back general error handler","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/network_initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Network Object — network_initialize","title":"Initialize Network Object — network_initialize","text":"Initialize undirected network object use EpiModel workflows.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/network_initialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Network Object — network_initialize","text":"","code":"network_initialize(n)"},{"path":"http://epimodel.github.io/EpiModel/reference/network_initialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Network Object — network_initialize","text":"n Network size.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/network_initialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Network Object — network_initialize","text":"Returns object class network.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/network_initialize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize Network Object — network_initialize","text":"function used EpiModel workflows initialize empty network object.  network attributes directed, bipartite, hyper, loops, multiple set FALSE.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/network_initialize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize Network Object — network_initialize","text":"","code":"nw <- network_initialize(100) nw #>  Network attributes: #>   vertices = 100  #>   directed = FALSE  #>   hyper = FALSE  #>   loops = FALSE  #>   multiple = FALSE  #>   bipartite = FALSE  #>   total edges= 0  #>     missing edges= 0  #>     non-missing edges= 0  #>  #>  Vertex attribute names:  #>     vertex.names  #>  #> No edge attributes"},{"path":"http://epimodel.github.io/EpiModel/reference/nwupdate.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic Network Updates — nwupdate.net","title":"Dynamic Network Updates — nwupdate.net","text":"function handles calls network object contained main netsim_dat object handled netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/nwupdate.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamic Network Updates — nwupdate.net","text":"","code":"nwupdate.net(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/nwupdate.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamic Network Updates — nwupdate.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/nwupdate.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dynamic Network Updates — nwupdate.net","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/overwrite_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to use a data.frame to initialize some attributes — overwrite_attrs","title":"Helper to use a data.frame to initialize some attributes — overwrite_attrs","text":"Uses dat$init$init_attr overwrite attributes nodes initialization","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/overwrite_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to use a data.frame to initialize some attributes — overwrite_attrs","text":"","code":"overwrite_attrs(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/overwrite_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to use a data.frame to initialize some attributes — overwrite_attrs","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/overwrite_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to use a data.frame to initialize some attributes — overwrite_attrs","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/overwrite_attrs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper to use a data.frame to initialize some attributes — overwrite_attrs","text":"init_attr data.frame present dat$init, use overwrite attributes contains. init_attr must number rows equal number nodes model attributes overwritten one one, ensuring correct ordering. init_attr columns MUST corresponding attribute already initialized. See \"R/default_attributes.R\" adding new attributes model. init_attr removed dat$init end function free memory.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/padded_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Grow a Vector to a Given Size, Padding it With Empty Elements — padded_vector","title":"Grow a Vector to a Given Size, Padding it With Empty Elements — padded_vector","text":"Grow vector given size, padding  NULL orig list NA otherwise","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/padded_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grow a Vector to a Given Size, Padding it With Empty Elements — padded_vector","text":"","code":"padded_vector(orig, size)"},{"path":"http://epimodel.github.io/EpiModel/reference/padded_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grow a Vector to a Given Size, Padding it With Empty Elements — padded_vector","text":"orig vector grow. size final size vector.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/padded_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grow a Vector to a Given Size, Padding it With Empty Elements — padded_vector","text":"vector size size padded NULLs NAs end.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.dcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Epidemic Parameters for Deterministic Compartmental Models — param.dcm","title":"Epidemic Parameters for Deterministic Compartmental Models — param.dcm","text":"Sets epidemic parameters deterministic compartmental models simulated dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.dcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epidemic Parameters for Deterministic Compartmental Models — param.dcm","text":"","code":"param.dcm(   inf.prob,   inter.eff,   inter.start,   act.rate,   rec.rate,   a.rate,   ds.rate,   di.rate,   dr.rate,   inf.prob.g2,   act.rate.g2,   rec.rate.g2,   a.rate.g2,   ds.rate.g2,   di.rate.g2,   dr.rate.g2,   balance,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/param.dcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Epidemic Parameters for Deterministic Compartmental Models — param.dcm","text":"inf.prob Probability infection per transmissible act susceptible infected person. two-group models, probability infection group 1 members. inter.eff Efficacy intervention affects per-act probability infection. Efficacy defined 1 - relative hazard infection given exposure intervention, compared exposure. inter.start Time step intervention starts, 1 number time steps specified model. default 1 inter.eff defined parameter . act.rate Average number transmissible acts per person per unit time. two-group models, number acts per group 1 person per unit time; balance acts groups 1 2 necessary, set using balance parameter (see details). rec.rate Average rate recovery immunity (SIR models) re-susceptibility (SIS models). recovery rate reciprocal disease duration. two-group models, recovery rate group 1 persons . parameter used SIR SIS models. .rate Arrival entry rate. one-group models, arrival rate rate new arrivals per person per unit time. two-group models, arrival rate parameterized rate per group 1 person per unit time, .rate.g2 rate set described . ds.rate Departure exit rate susceptible persons. two-group models, rate group 1 susceptible persons . di.rate Departure exit rate infected persons. two-group models, rate group 1 infected persons . dr.rate Departure exit rate recovered persons. two-group models, rate group 1 recovered persons . parameter used SIR models. inf.prob.g2 Probability infection per transmissible act susceptible group 2 person infected group 1 person. probability infection group 2 members. act.rate.g2 Average number transmissible acts per group 2 person per unit time; balance acts groups 1 2 necessary, set using balance parameter (see details). rec.rate.g2 Average rate recovery immunity (SIR models) re-susceptibility (SIS models) group 2 persons. parameter used two-group SIR SIS models. .rate.g2 Arrival entry rate group 2. may either specified numerically rate new arrivals per group 2 persons per unit time, NA case group 1 rate, .rate, governs group 2 rate. latter used , example, first group conceptualized female, female population size determines arrival rate. arrivals evenly allocated two groups. ds.rate.g2 Departure exit rate group 2 susceptible persons. di.rate.g2 Departure exit rate group 2 infected persons. dr.rate.g2 Departure exit rate group 2 recovered persons. parameter used SIR model types. balance two-group models, balance act.rate rate set group 1 (balance=\"g1\") group 2 (balance=\"g2\"). See details. ... Additional arguments passed model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.dcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Epidemic Parameters for Deterministic Compartmental Models — param.dcm","text":"EpiModel object class param.dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.dcm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Epidemic Parameters for Deterministic Compartmental Models — param.dcm","text":"param.dcm sets epidemic parameters deterministic compartmental models solved dcm function. models may use base types, parameters used, original model specifications parameters may used (necessarily). base models, model specification selected function model parameters entered control settings control.dcm. One-group two-group models available, former assumes homogeneous mixing population latter assumes form heterogeneous mixing two distinct partitions population (e.g., men women). Specifying group two parameters (.g2) implies simulation two-group model. parameters desired model type must specified, even zero.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.dcm.html","id":"act-balancing","dir":"Reference","previous_headings":"","what":"Act Balancing","title":"Epidemic Parameters for Deterministic Compartmental Models — param.dcm","text":"two-group models, balance number acts group 1 members group 2 members must maintained. purely heterogeneous mixing, product one group size act rate must equal product group size act rate: \\(N_1 \\alpha_1 = N_2 \\alpha_2\\), \\(N_i\\) group size \\(\\alpha_i\\) group-specific act rate time \\(t\\). balance parameter specifies group's act rate control others respect balancing.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.dcm.html","id":"sensitivity-analyses","dir":"Reference","previous_headings":"","what":"Sensitivity Analyses","title":"Epidemic Parameters for Deterministic Compartmental Models — param.dcm","text":"dcm designed easily run DCM sensitivity analyses, series models varying one model parameters run. possible setting parameter vector length greater one.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.dcm.html","id":"new-model-types","dir":"Reference","previous_headings":"","what":"New Model Types","title":"Epidemic Parameters for Deterministic Compartmental Models — param.dcm","text":"original model may use either existing model parameters named , original set parameters, combination . ... argument allows user pass arbitrary set new model parameters param.dcm. Whereas strict checks base models model parameters valid, parameter validity user's responsibility original models.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/param.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Epidemic Parameters for Stochastic Individual Contact Models — param.icm","title":"Epidemic Parameters for Stochastic Individual Contact Models — param.icm","text":"Sets epidemic parameters stochastic individual contact models simulated icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epidemic Parameters for Stochastic Individual Contact Models — param.icm","text":"","code":"param.icm(   inf.prob,   inter.eff,   inter.start,   act.rate,   rec.rate,   a.rate,   ds.rate,   di.rate,   dr.rate,   inf.prob.g2,   act.rate.g2,   rec.rate.g2,   a.rate.g2,   ds.rate.g2,   di.rate.g2,   dr.rate.g2,   balance,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/param.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Epidemic Parameters for Stochastic Individual Contact Models — param.icm","text":"inf.prob Probability infection per transmissible act susceptible infected person. two-group models, probability infection group 1 members. inter.eff Efficacy intervention affects per-act probability infection. Efficacy defined 1 - relative hazard infection given exposure intervention, compared exposure. inter.start Time step intervention starts, 1 number time steps specified model. default 1 inter.eff defined parameter . act.rate Average number transmissible acts per person per unit time. two-group models, number acts per group 1 person per unit time; balance acts groups 1 2 necessary, set using balance parameter (see details). rec.rate Average rate recovery immunity (SIR models) re-susceptibility (SIS models). recovery rate reciprocal disease duration. two-group models, recovery rate group 1 persons . parameter used SIR SIS models. .rate Arrival entry rate. one-group models, arrival rate rate new arrivals per person per unit time. two-group models, arrival rate parameterized rate per group 1 person per unit time, .rate.g2 rate set described . ds.rate Departure exit rate susceptible persons. two-group models, rate group 1 susceptible persons . di.rate Departure exit rate infected persons. two-group models, rate group 1 infected persons . dr.rate Departure exit rate recovered persons. two-group models, rate group 1 recovered persons . parameter used SIR models. inf.prob.g2 Probability infection per transmissible act susceptible group 2 person infected group 1 person. probability infection group 2 members. act.rate.g2 Average number transmissible acts per group 2 person per unit time; balance acts groups 1 2 necessary, set using balance parameter (see details). rec.rate.g2 Average rate recovery immunity (SIR models) re-susceptibility (SIS models) group 2 persons. parameter used two-group SIR SIS models. .rate.g2 Arrival entry rate group 2. may either specified numerically rate new arrivals per group 2 persons per unit time, NA case group 1 rate, .rate, governs group 2 rate. latter used , example, first group conceptualized female, female population size determines arrival rate. arrivals evenly allocated two groups. ds.rate.g2 Departure exit rate group 2 susceptible persons. di.rate.g2 Departure exit rate group 2 infected persons. dr.rate.g2 Departure exit rate group 2 recovered persons. parameter used SIR model types. balance two-group models, balance act.rate rate set group 1 (balance=\"g1\") group 2 (balance=\"g2\"). See details. ... Additional arguments passed model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Epidemic Parameters for Stochastic Individual Contact Models — param.icm","text":"EpiModel object class param.icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.icm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Epidemic Parameters for Stochastic Individual Contact Models — param.icm","text":"param.icm sets epidemic parameters stochastic individual contact models simulated icm function. Models may use base types, parameters used, new process modules may use parameters (necessarily). base models, model specification chosen result model parameters entered control settings control.icm. One-group two-group models available, former assumes homogeneous mixing population latter assumes form heterogeneous mixing two distinct partitions population (e.g., men women). Specifying group two parameters (.g2) implies simulation two-group model. parameters desired model type must specified, even zero.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.icm.html","id":"act-balancing","dir":"Reference","previous_headings":"","what":"Act Balancing","title":"Epidemic Parameters for Stochastic Individual Contact Models — param.icm","text":"two-group models, balance number acts group 1 members group 2 members must maintained. purely heterogeneous mixing, product one group size act rate must equal product group size act rate: \\(N_1 \\alpha_1 = N_2 \\alpha_2\\), \\(N_i\\) group size \\(\\alpha_i\\) group-specific act rate time \\(t\\). balance parameter specifies group's act rate control others respect balancing.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.icm.html","id":"new-modules","dir":"Reference","previous_headings":"","what":"New Modules","title":"Epidemic Parameters for Stochastic Individual Contact Models — param.icm","text":"build original models outside base models, new process modules may constructed replace existing modules supplement existing set. passed control settings control.icm. New modules may use either existing model parameters named , original set parameters, combination . ... allows user pass arbitrary set original model parameters param.icm. Whereas strict checks default modules parameter validity, checks user's responsibility new modules.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Epidemic Parameters for Stochastic Network Models — param.net","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"Sets epidemic parameters stochastic network models simulated netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"","code":"param.net(   inf.prob,   inter.eff,   inter.start,   act.rate,   rec.rate,   a.rate,   ds.rate,   di.rate,   dr.rate,   inf.prob.g2,   rec.rate.g2,   a.rate.g2,   ds.rate.g2,   di.rate.g2,   dr.rate.g2,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"inf.prob Probability infection per transmissible act susceptible infected person. two-group models, probability infection group 1 nodes. may also vector probabilities, element corresponding probability time step infection (see Time-Varying Parameters ). inter.eff Efficacy intervention affects per-act probability infection. Efficacy defined 1 - relative hazard infection given exposure intervention, compared exposure. inter.start Time step intervention starts, 1 number time steps specified model. default 1 inter.eff defined parameter . act.rate Average number transmissible acts per partnership per unit time (see act.rate Parameter ). may also vector rates, element corresponding rate time step infection (see Time-Varying Parameters ). rec.rate Average rate recovery immunity (SIR models) re-susceptibility (SIS models). recovery rate reciprocal disease duration. two-group models, recovery rate group 1 persons . parameter used SIR SIS models. may also vector rates, element corresponding rate time step infection (see Time-Varying Parameters ). .rate Arrival entry rate. one-group models, arrival rate rate new arrivals per person per unit time. two-group models, arrival rate parameterized rate per group 1 person per unit time, .rate.g2 rate set described . ds.rate Departure exit rate susceptible persons. two-group models, rate group 1 susceptible persons . di.rate Departure exit rate infected persons. two-group models, rate group 1 infected persons . dr.rate Departure exit rate recovered persons. two-group models, rate group 1 recovered persons . parameter used SIR models. inf.prob.g2 Probability transmission given transmissible act susceptible group 2 person infected group 1 person. probability transmission group 2 members. rec.rate.g2 Average rate recovery immunity (SIR models) re-susceptibility (SIS models) group 2 persons. parameter used two-group SIR SIS models. .rate.g2 Arrival entry rate group 2. may either specified numerically rate new arrivals per group 2 person per unit time, NA, case group 1 rate, .rate, governs group 2 rate. latter used , example, first group conceptualized female, female population size determines arrival rate. arrivals evenly allocated two groups. ds.rate.g2 Departure exit rate group 2 susceptible persons. di.rate.g2 Departure exit rate group 2 infected persons. dr.rate.g2 Departure exit rate group 2 recovered persons. parameter used SIR model types. ... Additional arguments passed model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"EpiModel object class param.net.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"param.net sets epidemic parameters stochastic network models simulated netsim function. Models may use base types, parameters used, new process modules may use parameters (necessarily). detailed description network model parameterization base models found Network Modeling Epidemics tutorials. base models, model specification chosen result model parameters entered control settings control.net. One-group two-group models available, latter assumes heterogeneous mixing two distinct partitions population (e.g., men women). Specifying two-group parameters (.g2) implies simulation two-group model. parameters desired model type must specified, even zero.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":"the-act-rate-parameter","dir":"Reference","previous_headings":"","what":"The act.rate Parameter","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"key difference network models DCM/ICM classes treatment transmission events. DCM ICM, contacts partnerships mathematically instantaneous events: duration time, thus changes may occur within time. contrast, network models allow partnership durations defined dynamic network model, summarized model dissolution coefficients calculated dissolution_coefs. Therefore, act.rate parameter different interpretation , number transmissible acts per partnership per unit time.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":"time-varying-parameters","dir":"Reference","previous_headings":"","what":"Time-Varying Parameters","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"inf.prob, act.rate, rec.rate arguments (.g2 companions) may specified time-varying parameters passing vector probabilities rates, respectively. value position vector corresponds probability rate discrete time step infected partner. example, inf.prob c(0.5, 0.5, 0.1) simulate 0.5 transmission probability first two time steps person's infection, followed 0.1 third time step. infected person recovered exited population fourth time step, third element vector carry forward one events occurs simulation ends. examples, see Network Modeling Epidemics tutorials.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":"random-parameters","dir":"Reference","previous_headings":"","what":"Random Parameters","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"addition deterministic parameters either fixed time-varying varieties , one may also include generator random parameters. might include vector potential parameter values statistical distribution definition; either case, one draw generator completed per individual simulation. possible passing list named random.params param.net, element random.params named generator function. See help page examples generate_random_params. simple factory function sampling provided param_random function .","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":"using-a-parameter-data-frame","dir":"Reference","previous_headings":"","what":"Using a Parameter data.frame","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"possible set input parameters using specifically formatted data.frame object. first 3 columns data.frame must : param: name parameter. non-scalar parameter (vector length > 1), end parameter name position vector (e.g., \"p_1\", \"p_2\", ...). value: value parameter (value parameter Nth position non-scalar). type: character string containing either \"numeric\", \"logical\", \"character\" define parameter object class. addition 3 columns, data.frame can contain number columns, details source columns document parameter meta-data. However, extra columns used EpiModel. data.frame passed param.net data.frame.parameters argument. details examples provided \"Working Model Parameters EpiModel\" vignette.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":"parameters-with-new-modules","dir":"Reference","previous_headings":"","what":"Parameters with New Modules","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"build original models outside base models, new process modules may constructed replace existing modules supplement existing set. passed control settings control.net. New modules may use either existing model parameters named , original set parameters, combination . ... allows user pass arbitrary set original model parameters param.net. Whereas strict checks default modules parameter validity, becomes user responsibility using new modules.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/param.net.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Epidemic Parameters for Stochastic Network Models — param.net","text":"","code":"## Example SIR model parameterization with fixed and random parameters # Network model estimation nw <- network_initialize(n = 100) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20) est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  # Random epidemic parameter list (here act.rate values are sampled uniformly # with helper function param_random, and inf.prob follows a general Beta # distribution with the parameters shown below) my_randoms <- list(   act.rate = param_random(1:3),   inf.prob = function() rbeta(1, 1, 2) )  # Parameters, initial conditions, and control settings param <- param.net(rec.rate = 0.02, random.params = my_randoms)  # Printing parameters shows both fixed and and random parameter functions param #> Fixed Parameters #> --------------------------- #> rec.rate = 0.02 #>  #> Random Parameters #> (Not drawn yet) #> --------------------------- #> act.rate = <function> #> inf.prob = <function>  # Set initial conditions and controls init <- init.net(i.num = 10, r.num = 0) control <- control.net(type = \"SIR\", nsteps = 10, nsims = 3, verbose = FALSE)  # Simulate the model sim <- netsim(est, param, init, control)  # Printing the sim object shows the randomly drawn values for each simulation sim #> EpiModel Simulation #> ======================= #> Model class: netsim #>  #> Simulation Summary #> ----------------------- #> Model type: SIR #> No. simulations: 3 #> No. time steps: 10 #> No. NW groups: 1 #>  #> Fixed Parameters #> --------------------------- #> rec.rate = 0.02 #> groups = 1 #>  #> Random Parameters #> --------------------------- #> act.rate = 3 1 3 #> inf.prob = 0.6225196 0.6107497 0.1080992 #>  #> Model Output #> ----------------------- #> Variables: s.num i.num r.num num si.flow ir.flow #> Networks: sim1 ... sim3 #> Transmissions: sim1 ... sim3 #>  #> Formation Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges     50     49.8     -0.4  2.144  -0.093        13.431        11.508 #>  #>  #> Duration Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges     20    19.89    -0.55  1.021  -0.108         4.131         3.641 #>  #> Dissolution Statistics #> -----------------------  #>       Target Sim Mean Pct Diff Sim SE Z Score SD(Sim Means) SD(Statistic) #> edges   0.05    0.052    4.546  0.003   0.811         0.006         0.026 #>   # Parameter sets can be extracted with: get_param_set(sim) #>   sim rec.rate vital groups act.rate  inf.prob #> 1   1     0.02 FALSE      1        3 0.6225196 #> 2   2     0.02 FALSE      1        1 0.6107497 #> 3   3     0.02 FALSE      1        3 0.1080992"},{"path":"http://epimodel.github.io/EpiModel/reference/param.net_from_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters List for Stochastic Network Models from a Formatted Data Frame — param.net_from_table","title":"Parameters List for Stochastic Network Models from a Formatted Data Frame — param.net_from_table","text":"Sets epidemic parameters stochastic network models netsim using specially formatted data frame parameters.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net_from_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters List for Stochastic Network Models from a Formatted Data Frame — param.net_from_table","text":"","code":"param.net_from_table(long.param.df)"},{"path":"http://epimodel.github.io/EpiModel/reference/param.net_from_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters List for Stochastic Network Models from a Formatted Data Frame — param.net_from_table","text":"long.param.df data.frame parameters. See details expected format.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net_from_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameters List for Stochastic Network Models from a Formatted Data Frame — param.net_from_table","text":"list object class param.net, can passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net_from_table.html","id":"long-param-df","dir":"Reference","previous_headings":"","what":"long.param.df","title":"Parameters List for Stochastic Network Models from a Formatted Data Frame — param.net_from_table","text":"possible set input parameters using specifically formatted data.frame object. first 3 columns data.frame must : param: name parameter. non-scalar parameter (vector length > 1), end parameter name position vector (e.g., \"p_1\", \"p_2\", ...). value: value parameter (value parameter Nth position non-scalar). type: character string containing either \"numeric\", \"logical\", \"character\" define parameter object class. addition 3 columns, data.frame can contain number columns, details source columns document parameter meta-data. However, extra columns used EpiModel.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net_to_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce a list of parameters to a long.param.df — param.net_to_table","title":"Coerce a list of parameters to a long.param.df — param.net_to_table","text":"Coerce list parameters long.param.df","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net_to_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce a list of parameters to a long.param.df — param.net_to_table","text":"","code":"param.net_to_table(params)"},{"path":"http://epimodel.github.io/EpiModel/reference/param.net_to_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce a list of parameters to a long.param.df — param.net_to_table","text":"params list parameters formatted long.param.df","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net_to_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce a list of parameters to a long.param.df — param.net_to_table","text":"data.frame parameters.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param.net_to_table.html","id":"long-param-df","dir":"Reference","previous_headings":"","what":"long.param.df","title":"Coerce a list of parameters to a long.param.df — param.net_to_table","text":"possible set input parameters using specifically formatted data.frame object. first 3 columns data.frame must : param: name parameter. non-scalar parameter (vector length > 1), end parameter name position vector (e.g., \"p_1\", \"p_2\", ...). value: value parameter (value parameter Nth position non-scalar). type: character string containing either \"numeric\", \"logical\", \"character\" define parameter object class. addition 3 columns, data.frame can contain number columns, details source columns document parameter meta-data. However, extra columns used EpiModel.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Value Sampler for Random Parameters — param_random","title":"Create a Value Sampler for Random Parameters — param_random","text":"function returns 0 argument function can used generator function random.params argument param.net function.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Value Sampler for Random Parameters — param_random","text":"","code":"param_random(values, prob = NULL)"},{"path":"http://epimodel.github.io/EpiModel/reference/param_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Value Sampler for Random Parameters — param_random","text":"values vector values sample . prob vector weights use sampling. NULL, values probability picked (default = NULL).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/param_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Value Sampler for Random Parameters — param_random","text":"0 argument generator function sample one values values vector.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/param_random.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Value Sampler for Random Parameters — param_random","text":"","code":"# Define function with equal sampling probability a <- param_random(1:5) a() #> [1] 4  # Define function with unequal sampling probability b <- param_random(1:5, prob = c(0.1, 0.1, 0.1, 0.1, 0.6)) b() #> [1] 2"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.dcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Data from a Deterministic Compartmental Epidemic Model — plot.dcm","title":"Plot Data from a Deterministic Compartmental Epidemic Model — plot.dcm","text":"Plots epidemiological data deterministic compartment epidemic model solved dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.dcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Data from a Deterministic Compartmental Epidemic Model — plot.dcm","text":"","code":"# S3 method for class 'dcm' plot(   x,   y = NULL,   popfrac = FALSE,   run = NULL,   col = NULL,   lwd = NULL,   lty = NULL,   alpha = 0.9,   legend = NULL,   leg.name = NULL,   leg.cex = 0.8,   grid = FALSE,   add = FALSE,   main = \"\",   xlim = NULL,   ylim = NULL,   xlab = \"Time\",   ylab = NULL,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.dcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Data from a Deterministic Compartmental Epidemic Model — plot.dcm","text":"x EpiModel object class dcm. y Output compartments flows dcm object plot. popfrac TRUE, plot prevalence values rather numbers (see details). run Run number plot, models multiple runs (default run 1). col Color lines, either specified single color standard R color format, alternatively color palette RColorBrewer::RColorBrewer (see details). lwd Line width output lines. lty Line type output lines. alpha Transparency level lines, 0 = transparent 1 = opaque (see adjustcolor function). legend Type legend plot. Values \"n\" legend, \"full\" full legend, \"lim\" limited legend (see details). leg.name Character string use legend, default determined automatically based y input. leg.cex Legend scale size. grid TRUE, grid added background plot (see grid details), default nx ny. add TRUE, new plot window called lines added existing plot window. main main title plot, see also title. xlim x limits (x1, x2) plot.  Note x1 > x2     allowed leads ‘reversed axis’. default value, NULL, indicates range     finite values plotted used. ylim y limits plot. xlab label x axis, defaults description x. ylab label y axis, defaults description y. ... Additional arguments pass main plot window (see plot.default).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.dcm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Data from a Deterministic Compartmental Epidemic Model — plot.dcm","text":"function plots epidemiological outcomes deterministic compartmental model solved dcm. Depending number model runs (sensitivity analyses) number groups, default plot fractional proportion compartment model time. specific compartments flows plot may set using y parameter, multiple run models specific run may also specified.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.dcm.html","id":"the-popfrac-argument","dir":"Reference","previous_headings":"","what":"The popfrac Argument","title":"Plot Data from a Deterministic Compartmental Epidemic Model — plot.dcm","text":"Compartment prevalence size compartment denominator. plot raw numbers compartment, use popfrac=FALSE; default. popfrac parameter calculates plots denominators specified compartments using rules: one-group models, prevalence compartment compartment size divided total population size; 2) two-group models, prevalence compartment compartment size divided group size.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.dcm.html","id":"color-palettes","dir":"Reference","previous_headings":"","what":"Color Palettes","title":"Plot Data from a Deterministic Compartmental Epidemic Model — plot.dcm","text":"Since dcm supports multiple run sensitivity models, plotting results models uses complex color scheme distinguishing runs. accomplished using RColorBrewer::RColorBrewer color palettes, include range linked colors using named palettes. plot.dcm, one may either specify brewer color palette listed RColorBrewer::brewer.pal.info, , alternatively, vector standard R colors (named, hexidecimal, positive integers; see col2rgb).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.dcm.html","id":"plot-legends","dir":"Reference","previous_headings":"","what":"Plot Legends","title":"Plot Data from a Deterministic Compartmental Epidemic Model — plot.dcm","text":"three automatic legend types available, legend added default plots. turn legend, use legend=\"n\". plot legend values every line sensitivity analysis, use legend=\"full\". models many runs, may visually overwhelming. cases, use legend=\"lim\" plot legend limited highest lowest values varying parameter model. cases default legend names helpful, one may override names leg.name argument.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/plot.dcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Data from a Deterministic Compartmental Epidemic Model — plot.dcm","text":"","code":"# Deterministic SIR model with varying act rate param <- param.dcm(inf.prob = 0.2, act.rate = 1:10,                    rec.rate = 1/3, a.rate = 0.011, ds.rate = 0.01,                    di.rate = 0.03, dr.rate = 0.01) init <- init.dcm(s.num = 1000, i.num = 1, r.num = 0) control <- control.dcm(type = \"SIR\", nsteps = 100, dt = 0.25) mod <- dcm(param, init, control)  # Plot disease prevalence by default plot(mod)   # Plot prevalence of susceptibles plot(mod, y = \"s.num\", popfrac = TRUE, col = \"Greys\")   # Plot number of susceptibles plot(mod, y = \"s.num\", popfrac = FALSE, col = \"Greys\", grid = TRUE)   # Plot multiple runs of multiple compartments together plot(mod, y = c(\"s.num\", \"i.num\"),      run = 5, xlim = c(0, 50), grid = TRUE) plot(mod, y = c(\"s.num\", \"i.num\"),      run = 10, lty = 2, legend = \"n\", add = TRUE)"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.epi.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Epidemic Model Results From a Netsim Data.Frame — plot.epi.data.frame","title":"Plot Epidemic Model Results From a Netsim Data.Frame — plot.epi.data.frame","text":"function wrapper around plot.netsim accepting data.frame obtain .data.frame(netsim_object).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.epi.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Epidemic Model Results From a Netsim Data.Frame — plot.epi.data.frame","text":"","code":"# S3 method for class 'epi.data.frame' plot(   x,   y = NULL,   sims = NULL,   legend = NULL,   mean.col = NULL,   qnts.col = NULL,   sim.lwd = NULL,   sim.col = NULL,   sim.alpha = NULL,   popfrac = FALSE,   qnts = 0.5,   qnts.alpha = 0.5,   qnts.smooth = TRUE,   mean.line = TRUE,   mean.smooth = TRUE,   add = FALSE,   mean.lwd = 2,   mean.lty = 1,   xlim = NULL,   ylim = NULL,   main = NULL,   xlab = NULL,   ylab = NULL,   sim.lines = FALSE,   grid = FALSE,   leg.cex = 0.8,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.epi.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Epidemic Model Results From a Netsim Data.Frame — plot.epi.data.frame","text":"x data.frame obtain .data.frame(netsim_object). y Output compartments flows netsim object plot. sims type=\"epi\" \"formation\", vector simulation numbers plot. type=\"network\", single simulation number plot network, else \"min\" plot simulation number lowest disease prevalence, \"max\" simulation highest disease prevalence, \"mean\" simulation prevalence closest mean across simulations specified time step. legend TRUE, plot default legend. mean.col Vector standard R color format mean lines. qnts.col Vector standard R color format polygons. sim.lwd Line width simulation lines. sim.col Vector standard R color format simulation lines. sim.alpha Transparency level simulation lines, 0 = transparent 1 = opaque (see adjustcolor function). popfrac TRUE, plot prevalence values rather numbers (see details). qnts numeric, plot polygon simulation quantiles based range implied argument (see details). FALSE, suppress polygon plot. qnts.alpha Transparency level quantile polygons, 0 = transparent 1 = opaque (see adjustcolor function). qnts.smooth TRUE, use loess smoother quantile polygons. mean.line TRUE, plot mean simulations across time. mean.smooth TRUE, use loess smoother mean line. add TRUE, new plot window called lines added existing plot window. mean.lwd Line width mean lines. mean.lty Line type mean lines. xlim x limits (x1, x2) plot.  Note x1 > x2     allowed leads ‘reversed axis’. default value, NULL, indicates range     finite values plotted used. ylim y limits plot. main main title plot, see also title. xlab label x axis, defaults description x. ylab label y axis, defaults description y. sim.lines TRUE, plot individual simulation lines. Default plot lines one-group models two-group models. grid TRUE, grid added background plot (see grid details), default nx ny. leg.cex Legend scale size. ... Additional arguments pass.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Data from a Stochastic Individual Contact Epidemic Model — plot.icm","title":"Plot Data from a Stochastic Individual Contact Epidemic Model — plot.icm","text":"Plots epidemiological data stochastic individual contact model simulated icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Data from a Stochastic Individual Contact Epidemic Model — plot.icm","text":"","code":"# S3 method for class 'icm' plot(   x,   y = NULL,   popfrac = FALSE,   sim.lines = FALSE,   sims = NULL,   sim.col = NULL,   sim.lwd = NULL,   sim.alpha = NULL,   mean.line = TRUE,   mean.smooth = TRUE,   mean.col = NULL,   mean.lwd = 2,   mean.lty = 1,   qnts = 0.5,   qnts.col = NULL,   qnts.alpha = 0.5,   qnts.smooth = TRUE,   legend = TRUE,   leg.cex = 0.8,   grid = FALSE,   add = FALSE,   xlim = NULL,   ylim = NULL,   main = \"\",   xlab = \"Time\",   ylab = NULL,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Data from a Stochastic Individual Contact Epidemic Model — plot.icm","text":"x EpiModel model object class icm. y Output compartments flows icm object plot. ——- popfrac TRUE, plot prevalence values rather numbers (see details). sim.lines TRUE, plot individual simulation lines. Default plot lines one-group models two-group models. sims vector simulation numbers plot. sim.col Vector standard R color format simulation lines. sim.lwd Line width simulation lines. sim.alpha Transparency level simulation lines, 0 = transparent 1 = opaque (see adjustcolor function). mean.line TRUE, plot mean simulations across time. mean.smooth TRUE, use loess smoother mean line. mean.col Vector standard R color format mean lines. mean.lwd Line width mean lines. mean.lty Line type mean lines. qnts numeric, plot polygon simulation quantiles based range implied argument (see details). FALSE, suppress polygon plot. qnts.col Vector standard R color format polygons. qnts.alpha Transparency level quantile polygons, 0 = transparent 1 = opaque (see adjustcolor function). qnts.smooth TRUE, use loess smoother quantile polygons. legend TRUE, plot default legend. leg.cex Legend scale size. grid TRUE, grid added background plot (see grid details), default nx ny. add TRUE, new plot window called lines added existing plot window. xlim x limits (x1, x2) plot.  Note x1 > x2     allowed leads ‘reversed axis’. default value, NULL, indicates range     finite values plotted used. ylim y limits plot. main main title plot, see also title. xlab label x axis, defaults description x. ylab label y axis, defaults description y. ... Additional arguments pass.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.icm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Data from a Stochastic Individual Contact Epidemic Model — plot.icm","text":"plotting function extract epidemiological output model object class icm plot time series data disease prevalence results. summary statistics function calculates plots individual simulation lines, means individual simulation lines, quantiles individual simulation lines. mean line, toggled mean.line=TRUE, calculated row mean across simulations time step. Compartment prevalences size compartment denominator. plot raw numbers compartment, use popfrac=FALSE; default plots flows. popfrac parameter calculates plots denominators specified compartments using rules: 1) one-group models, prevalence compartment compartment size divided total population size; 2) two-group models, prevalence compartment compartment size divided group population size. prevalences automatically calculated, mutate_epi function may used add new variables icm object plot analyze. quantiles show range outcome values within certain specified quantile range. default, interquartile range shown: middle 50\\ middle 95\\ plotted default, specify qnts=FALSE.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/plot.icm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Data from a Stochastic Individual Contact Epidemic Model — plot.icm","text":"","code":"## Example 1: Plotting multiple compartment values from SIR model param <- param.icm(inf.prob = 0.5, act.rate = 0.5, rec.rate = 0.02) init <- init.icm(s.num = 500, i.num = 1, r.num = 0) control <- control.icm(type = \"SIR\", nsteps = 100,                        nsims = 3, verbose = FALSE) mod <- icm(param, init, control) plot(mod, grid = TRUE)   ## Example 2: Plot only infected with specific output from SI model param <- param.icm(inf.prob = 0.25, act.rate = 0.25) init <- init.icm(s.num = 500, i.num = 10) control <- control.icm(type = \"SI\", nsteps = 100,                        nsims = 3, verbose = FALSE) mod2 <- icm(param, init, control)  # Plot prevalence plot(mod2, y = \"i.num\", mean.line = FALSE, sim.lines = TRUE)   # Plot incidence par(mfrow = c(1, 2)) plot(mod2, y = \"si.flow\", mean.smooth = TRUE, grid = TRUE) plot(mod2, y = \"si.flow\", qnts.smooth = FALSE, qnts = 1)"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.netdx.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Dynamic Network Model Diagnostics — plot.netdx","title":"Plot Dynamic Network Model Diagnostics — plot.netdx","text":"Plots dynamic network model diagnostics calculated netdx.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.netdx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Dynamic Network Model Diagnostics — plot.netdx","text":"","code":"# S3 method for class 'netdx' plot(   x,   type = \"formation\",   method = \"l\",   sims = NULL,   stats = NULL,   duration.imputed = TRUE,   sim.lines = FALSE,   sim.col = NULL,   sim.lwd = NULL,   mean.line = TRUE,   mean.smooth = TRUE,   mean.col = NULL,   mean.lwd = 2,   mean.lty = 1,   qnts = 0.5,   qnts.col = NULL,   qnts.alpha = 0.5,   qnts.smooth = TRUE,   targ.line = TRUE,   targ.col = NULL,   targ.lwd = 2,   targ.lty = 2,   plots.joined = NULL,   legend = NULL,   grid = FALSE,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.netdx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Dynamic Network Model Diagnostics — plot.netdx","text":"x EpiModel object class netdx. type Plot type, options \"formation\" network model formation statistics, \"duration\" dissolution model statistics average edge duration, \"dissolution\" dissolution model statistics proportion ties dissolved per time step. method Plot method, options \"l\" line plots \"b\" box plots. sims vector simulation numbers plot. stats Statistics plot. type = \"formation\", stats among specified call netdx; type = \"duration\", \"dissolution\", stats among dissolution model (without offset()). default plot statistics. duration.imputed type = \"duration\", logical indicating whether impute starting times relationships extant start simulation. Defaults TRUE type = \"duration\". sim.lines TRUE, plot individual simulation lines. Default plot lines one-group models two-group models. sim.col Vector standard R color format simulation lines. sim.lwd Line width simulation lines. mean.line TRUE, plot mean simulations across time. mean.smooth TRUE, use loess smoother mean line. mean.col Vector standard R color format mean lines. mean.lwd Line width mean lines. mean.lty Line type mean lines. qnts numeric, plot polygon simulation quantiles based range implied argument (see details). FALSE, suppress polygon plot. qnts.col Vector standard R color format polygons. qnts.alpha Transparency level quantile polygons, 0 = transparent 1 = opaque (see adjustcolor function). qnts.smooth TRUE, use loess smoother quantile polygons. targ.line TRUE, plot target expected value line statistic interest. targ.col Vector standard R colors target statistic lines, default colors based RColorBrewer color palettes. targ.lwd Line width line showing target statistic values. targ.lty Line type line showing target statistic values. plots.joined TRUE, combine statistics one plot, versus one plot per statistic FALSE. legend TRUE, plot default legend. grid TRUE, grid added background plot (see grid details), default nx ny. ... Additional arguments pass.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.netdx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Dynamic Network Model Diagnostics — plot.netdx","text":"plot function netdx objects generate plots two types model diagnostic statistics run part diagnostic tools within function. formation plot shows summary statistics requested nwstats.formula, default includes statistics network model formation formula specified original call netest. duration plot shows average age existing edges time step, maximum time step requested. age used estimator average duration edges equilibrium state. duration.imputed = FALSE, edges exist beginning simulation assumed start age 1, yielding burn-period observed mean approaches target.  duration.imputed = TRUE, expected ages prior start simulation calculated dissolution model, typically eliminating need burn-period. dissolution plot shows proportion extant ties dissolved time step, maximum time step requested. Typically, proportion ties dissolved reciprocal mean relational duration. plot thus contains similar information duration plot, reach expected value quickly, since subject censoring. plots.joined argument control whether statistics joined one plot plotted separately, assuming multiple statistics model. default based number network statistics requested. layout separate plots within larger plot window also based number statistics.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/plot.netdx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Dynamic Network Model Diagnostics — plot.netdx","text":"","code":"if (FALSE) { # \\dontrun{ # Network initialization and model parameterization nw <- network_initialize(n = 500) nw <- set_vertex_attribute(nw, \"sex\", rbinom(500, 1, 0.5)) formation <- ~edges + nodematch(\"sex\") target.stats <- c(500, 300) coef.diss <- dissolution_coefs(dissolution = ~offset(edges) +                   offset(nodematch(\"sex\")), duration = c(50, 40))  # Estimate the model est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)  # Static diagnostics dx1 <- netdx(est, nsims = 1e4, dynamic = FALSE,              nwstats.formula = ~edges + meandeg + concurrent +                                 nodefactor(\"sex\", levels = NULL) +                                 nodematch(\"sex\")) dx1  # Plot diagnostics plot(dx1) plot(dx1, stats = c(\"edges\", \"concurrent\"), mean.col = \"black\",      sim.lines = TRUE, plots.joined = FALSE) plot(dx1, stats = \"edges\", method = \"b\",      col = \"seagreen3\", grid = TRUE)  # Dynamic diagnostics dx2 <- netdx(est, nsims = 10, nsteps = 500,              nwstats.formula = ~edges + meandeg + concurrent +                                 nodefactor(\"sex\", levels = NULL) +                                 nodematch(\"sex\")) dx2  # Formation statistics plots, joined and separate plot(dx2, grid = TRUE) plot(dx2, type = \"formation\", plots.joined = TRUE) plot(dx2, type = \"formation\", sims = 1, plots.joined = TRUE,      qnts = FALSE, sim.lines = TRUE, mean.line = FALSE) plot(dx2, type = \"formation\", plots.joined = FALSE,      stats = c(\"edges\", \"concurrent\"), grid = TRUE)  plot(dx2, method = \"b\", col = \"bisque\", grid = TRUE) plot(dx2, method = \"b\", stats = \"meandeg\", col = \"dodgerblue\")  # Duration statistics plot par(mfrow = c(1, 2)) # With duration imputed plot(dx2, type = \"duration\", sim.line = TRUE, sim.lwd = 0.3,      targ.lty = 1, targ.lwd = 0.5) # Without duration imputed plot(dx2, type = \"duration\", sim.line = TRUE, sim.lwd = 0.3,      targ.lty = 1, targ.lwd = 0.5, duration.imputed = FALSE)  # Dissolution statistics plot plot(dx2, type = \"dissolution\", qnts = 0.25, grid = TRUE) plot(dx2, type = \"dissolution\", method = \"b\", col = \"pink1\") } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.netsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Data from a Stochastic Network Epidemic Model — plot.netsim","title":"Plot Data from a Stochastic Network Epidemic Model — plot.netsim","text":"Plots epidemiological network data stochastic network model simulated netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.netsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Data from a Stochastic Network Epidemic Model — plot.netsim","text":"","code":"# S3 method for class 'netsim' plot(   x,   type = \"epi\",   y = NULL,   popfrac = FALSE,   sim.lines = FALSE,   sims = NULL,   sim.col = NULL,   sim.lwd = NULL,   sim.alpha = NULL,   mean.line = TRUE,   mean.smooth = TRUE,   mean.col = NULL,   mean.lwd = 2,   mean.lty = 1,   qnts = 0.5,   qnts.col = NULL,   qnts.alpha = 0.5,   qnts.smooth = TRUE,   legend = NULL,   leg.cex = 0.8,   grid = FALSE,   add = FALSE,   network = 1,   at = 1,   col.status = FALSE,   shp.g2 = NULL,   vertex.cex = NULL,   stats = NULL,   targ.line = TRUE,   targ.col = NULL,   targ.lwd = 2,   targ.lty = 2,   plots.joined = NULL,   duration.imputed = TRUE,   method = \"l\",   main = NULL,   xlim = NULL,   xlab = NULL,   ylim = NULL,   ylab = NULL,   ... )"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.netsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Data from a Stochastic Network Epidemic Model — plot.netsim","text":"x EpiModel model object class netsim. type Type plot: \"epi\" epidemic model results, \"network\" static network plot (plot.network), \"formation\", \"duration\", \"dissolution\" network formation, duration, dissolution statistics. y Output compartments flows netsim object plot. popfrac TRUE, plot prevalence values rather numbers (see details). sim.lines TRUE, plot individual simulation lines. Default plot lines one-group models two-group models. sims type=\"epi\" \"formation\", vector simulation numbers plot. type=\"network\", single simulation number plot network, else \"min\" plot simulation number lowest disease prevalence, \"max\" simulation highest disease prevalence, \"mean\" simulation prevalence closest mean across simulations specified time step. sim.col Vector standard R color format simulation lines. sim.lwd Line width simulation lines. sim.alpha Transparency level simulation lines, 0 = transparent 1 = opaque (see adjustcolor function). mean.line TRUE, plot mean simulations across time. mean.smooth TRUE, use loess smoother mean line. mean.col Vector standard R color format mean lines. mean.lwd Line width mean lines. mean.lty Line type mean lines. qnts numeric, plot polygon simulation quantiles based range implied argument (see details). FALSE, suppress polygon plot. qnts.col Vector standard R color format polygons. qnts.alpha Transparency level quantile polygons, 0 = transparent 1 = opaque (see adjustcolor function). qnts.smooth TRUE, use loess smoother quantile polygons. legend TRUE, plot default legend. leg.cex Legend scale size. grid TRUE, grid added background plot (see grid details), default nx ny. add TRUE, new plot window called lines added existing plot window. network Network number, simulations multiple networks representing population. type = \"network\", time step network graph. col.status TRUE type=\"network\", automatic disease status colors (blue = susceptible, red = infected, green = recovered). shp.g2 type = \"network\" x two-group model, shapes Group 2 vertices, acceptable inputs \"triangle\" \"square\". Group 1 vertices remain circles. vertex.cex Relative size plotted vertices type=\"network\", implicit default 1. stats type=\"formation\",\"duration\",\"dissolution\", statistics plot. type = \"formation\", stats among specified nwstats.formula control.net; type = \"duration\", \"dissolution\", stats among dissolution model (without offset()). default plot statistics. targ.line TRUE, plot target expected value line statistic interest. targ.col Vector standard R colors target statistic lines, default colors based RColorBrewer color palettes. targ.lwd Line width line showing target statistic values. targ.lty Line type line showing target statistic values. plots.joined TRUE type=\"formation\",\"duration\",\"dissolution\", combine statistics one plot, versus one plot per statistic FALSE. duration.imputed type = \"duration\", logical indicating whether impute starting times relationships extant start simulation. Defaults TRUE type = \"duration\". method Plot method type=\"formation\", \"duration\", \"dissolution\", options \"l\" line plots \"b\" box plots. main main title plot, see also title. xlim x limits (x1, x2) plot.  Note x1 > x2     allowed leads ‘reversed axis’. default value, NULL, indicates range     finite values plotted used. xlab label x axis, defaults description x. ylim y limits plot. ylab label y axis, defaults description y. ... Additional arguments pass.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.netsim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Data from a Stochastic Network Epidemic Model — plot.netsim","text":"plot function can produce three types plots stochastic network model simulated netsim: type=\"epi\": epidemic model results (e.g., disease prevalence incidence) may plotted. type=\"network\": static network plot generated. static network plot dynamic network cross-sectional extraction dynamic network specific time point. plotting function wraps network::plot.network function network package. Consult help page plot.network plotting parameters. addition, four plotting parameters specific netsim plots available: sim, , col.status, shp.g2. type=\"formation\": summary network statistics related network model formation plotted. plots similar formation plots netdx objects. running netsim simulation, one must specify save.nwstats=TRUE; plot show network statistics requested explicitly nwstats.formula, use formation formula set netest otherwise. type=\"duration\",\"dissolution\": plot.netdx; supported plot.netsim dissolution model ~offset(edges), tergmLite FALSE, save.network TRUE. type=\"epi\", plotting function extract epidemiological output model object class netsim plot time series data disease prevalence results. summary statistics function calculates plots individual simulation lines, means individual simulation lines, quantiles individual simulation lines. mean line, toggled mean.line=TRUE, calculated row mean across simulations time step. Compartment prevalences size compartment denominator. plot raw numbers compartment, use popfrac=FALSE; default plots flows. popfrac parameter calculates plots denominators specified compartments using rules: 1) one-group models, prevalence compartment compartment size divided total population size; 2) two-group models, prevalence compartment compartment size divided group population size. prevalences automatically calculated, mutate_epi function may used add new variables netsim object plot analyze. quantiles show range outcome values within certain specified quantile range. default, interquartile range shown: middle 50\\ middle 95\\ plotted default, specify qnts=FALSE. type=\"network\", function plot cross sections simulated networks specified time steps. possible plot one time step one simulation time, necessary enter sims parameters. aid visualizing representative extreme simulations specific time steps, sims parameter may set \"mean\" plot simulation disease prevalence closest average across simulations, \"min\" plot simulation prevalence lowest, \"max\" plot simulation prevalence highest.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/plot.netsim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Data from a Stochastic Network Epidemic Model — plot.netsim","text":"","code":"## SI Model without Network Feedback # Initialize network and set network model parameters nw <- network_initialize(n = 100) nw <- set_vertex_attribute(nw, \"group\", rep(1:2, each = 50)) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)  # Estimate the network model est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE.  # Simulate the epidemic model param <- param.net(inf.prob = 0.3, inf.prob.g2 = 0.15) init <- init.net(i.num = 10, i.num.g2 = 10) control <- control.net(type = \"SI\", nsteps = 20, nsims = 3,                        verbose = FALSE, save.nwstats = TRUE,                        nwstats.formula = ~edges + meandeg + concurrent) mod <- netsim(est, param, init, control)  # Plot epidemic trajectory plot(mod)  plot(mod, type = \"epi\", grid = TRUE)  plot(mod, type = \"epi\", popfrac = TRUE)  plot(mod, type = \"epi\", y = \"si.flow\", qnts = 1, ylim = c(0, 4))   # Plot static networks par(mar = c(0, 0, 0, 0)) plot(mod, type = \"network\", vertex.cex = 1.5)   # Automatic coloring of infected nodes as red par(mfrow = c(1, 2), mar = c(0, 0, 2, 0)) plot(mod, type = \"network\", main = \"Min Prev | Time 50\",      col.status = TRUE, at = 20, sims = \"min\", vertex.cex = 1.25) plot(mod, type = \"network\", main = \"Max Prev | Time 50\",      col.status = TRUE, at = 20, sims = \"max\", vertex.cex = 1.25)   # Automatic shape by group number (circle = group 1) par(mar = c(0, 0, 0, 0)) plot(mod, type = \"network\", at = 20, col.status = TRUE,      shp.g2 = \"square\") plot(mod, type = \"network\", at = 20, col.status = TRUE,      shp.g2 = \"triangle\", vertex.cex = 2)   # Plot formation statistics par(mfrow = c(1,1), mar = c(3,3,1,1), mgp = c(2,1,0)) plot(mod, type = \"formation\", grid = TRUE)  plot(mod, type = \"formation\", plots.joined = FALSE)  plot(mod, type = \"formation\", sims = 2:3)  plot(mod, type = \"formation\", plots.joined = FALSE,      stats = c(\"edges\", \"concurrent\"))  plot(mod, type = \"formation\", stats = \"meandeg\",      mean.lwd = 1, qnts.col = \"seagreen\", mean.col = \"black\")"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.transmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot transmat Infection Tree in Three Styles — plot.transmat","title":"Plot transmat Infection Tree in Three Styles — plot.transmat","text":"Plots transmission matrix tree get_transmat one three styles: phylogram, directed network, transmission timeline.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.transmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot transmat Infection Tree in Three Styles — plot.transmat","text":"","code":"# S3 method for class 'transmat' plot(x, style = c(\"phylo\", \"network\", \"transmissionTimeline\"), ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/plot.transmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot transmat Infection Tree in Three Styles — plot.transmat","text":"x transmat object plotted. style Character name plot style. One \"phylo\", \"network\", \"transmissionTimeline\". ... Additional plot arguments passed lower-level plot functions (plot.network, plot.phylo, transmissionTimeline).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/plot.transmat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot transmat Infection Tree in Three Styles — plot.transmat","text":"phylo plot requires ape package. transmissionTimeline plot requires ndtv package.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.icm.bip.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Epidemic Output from icm Model — prevalence.icm.bip","title":"Get Epidemic Output from icm Model — prevalence.icm.bip","text":"function provides active model state sizes network specified time step, output list vectors.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.icm.bip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Epidemic Output from icm Model — prevalence.icm.bip","text":"","code":"prevalence.icm.bip(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.icm.bip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Epidemic Output from icm Model — prevalence.icm.bip","text":"dat Main icm_dat class data object passed icm simulations. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.icm.bip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Epidemic Output from icm Model — prevalence.icm.bip","text":"updated icm_dat class main data object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Epidemic Output from icm Model — prevalence.icm","title":"Get Epidemic Output from icm Model — prevalence.icm","text":"function provides active model state sizes network specified time step, output list vectors.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Epidemic Output from icm Model — prevalence.icm","text":"","code":"prevalence.icm(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Epidemic Output from icm Model — prevalence.icm","text":"dat Main icm_dat class data object passed icm simulations. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Epidemic Output from icm Model — prevalence.icm","text":"updated icm_dat class main data object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Epidemic Output from netsim Model — prevalence.net","title":"Get Epidemic Output from netsim Model — prevalence.net","text":"Provides active model state sizes network specified time step, output list vectors.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Epidemic Output from netsim Model — prevalence.net","text":"","code":"prevalence.net(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Epidemic Output from netsim Model — prevalence.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Epidemic Output from netsim Model — prevalence.net","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/prevalence.net.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Epidemic Output from netsim Model — prevalence.net","text":"network utility used netsim simulation process efficiently query current size state compartment model given timestep. two-group network, current state size group overall provided.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/print.netdx.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Function for Printing netdx Object — print.netdx","title":"Utility Function for Printing netdx Object — print.netdx","text":"Prints basic information statistics netdx object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/print.netdx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Function for Printing netdx Object — print.netdx","text":"","code":"# S3 method for class 'netdx' print(x, digits = 3, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/print.netdx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Function for Printing netdx Object — print.netdx","text":"x object class netdx digits number digits print statistics tables ... additional arguments (currently ignored)","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/print.netdx.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility Function for Printing netdx Object — print.netdx","text":"Given netdx object, print.netdx prints diagnostic method (static/dynamic), number simulations, (dynamic) number time steps per simulation used generating netdx object, well printing formation statistics table (present) duration dissolution statistics tables.  statistics tables interpreted follows. row name particular network statistic.  formation table, correspond actual network statistics obvious way. duration dissolution tables, correspond dissolution model dyad types: homogeneous dissolution model, dyads edges type; heterogeneous dissolution model, dyad nonzero nodematch nodemix change statistic dissolution model type equal statistic, type equal edges otherwise.  statistics interest duration dissolution tables , respectively, mean age extant edges edge dissolution rate, broken dissolution model dyad type.  (current convention treat mean age dissolution rate particular dissolution dyad type 0 time steps edges type; behavior may changed future.) columns named Target, Sim Mean, Pct Diff, Sim SE, Z Score, SD(Sim Means), SD(Statistic).  Sim Mean column refers mean statistic value, across time steps simulations dynamic case, across sampled networks simulations static case. Sim SE column refers standard error mean, estimated using coda::effectiveSize.  Target column indicates target value (present) statistic, Pct Diff column gives (Sim Mean - Target)/Target Target present.  Z Score column gives (Sim Mean - Target)/(Sim SE).  SD(Sim Means) column gives empirical standard deviation across simulations mean statistic value within simulation, SD(Statistic) gives empirical standard deviation statistic value across simulated data.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/print_nwstats_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Helper For Network Stats Tables — print_nwstats_table","title":"Print Helper For Network Stats Tables — print_nwstats_table","text":"Print Helper Network Stats Tables","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/print_nwstats_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Helper For Network Stats Tables — print_nwstats_table","text":"","code":"print_nwstats_table(nwtable, digits)"},{"path":"http://epimodel.github.io/EpiModel/reference/print_nwstats_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Helper For Network Stats Tables — print_nwstats_table","text":"nwtable formation dissolution statistics data.frame. digits Argument passed round.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/process_out.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a List of netsim Data to Output List Format — process_out.net","title":"Save a List of netsim Data to Output List Format — process_out.net","text":"function transfers data list main netsim_dat objects output object end simulations netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/process_out.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a List of netsim Data to Output List Format — process_out.net","text":"","code":"process_out.net(dat_list)"},{"path":"http://epimodel.github.io/EpiModel/reference/process_out.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a List of netsim Data to Output List Format — process_out.net","text":"dat_list list main netsim_dat objects netsim simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/process_out.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a List of netsim Data to Output List Format — process_out.net","text":"list class netsim following elements: param: epidemic parameters passed model param, additional parameters added necessary. control: control settings passed model control, additional controls added necessary. epi: list data frames, one epidemiological output model. Outputs base models always include size compartment, well flows , , compartments. stats: list containing two sublists, nwstats network statistics saved simulation, transmat transmission matrix saved simulation. See control.net details. network: list networkDynamic objects, one model simulation.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/reachable-nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Forward or Backward Reachable Nodes for a Set of Nodes — reachable-nodes","title":"Get the Forward or Backward Reachable Nodes for a Set of Nodes — reachable-nodes","text":"functions return Forward Backward Reachable Nodes set nodes network time. Warning, functions ignore nodes without edges period interest. See Number Nodes section details much faster iterating tsna::tPath. distance node can back calculated using length reachable set time step fact reachable sets ordered time arrival.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/reachable-nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Forward or Backward Reachable Nodes for a Set of Nodes — reachable-nodes","text":"","code":"get_forward_reachable(   el_cuml,   from_step,   to_step,   nodes = NULL,   dense_optim = \"auto\" )  get_backward_reachable(   el_cuml,   from_step,   to_step,   nodes = NULL,   dense_optim = \"auto\" )"},{"path":"http://epimodel.github.io/EpiModel/reference/reachable-nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Forward or Backward Reachable Nodes for a Set of Nodes — reachable-nodes","text":"el_cuml cumulative edgelist object. data.frame least columns: head, tail, start stop. Start stop inclusive. from_step beginning time period. to_step end time period. nodes subset nodes calculate FRP . (default = NULL, nodes) dense_optim pre-process adjacency list speed computations dense networks. \"auto\" (default), enable optimisation n_edges > n_nodes. \"yes\" always enables \"\" always disables. overhead optimization worth sparse networks.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/reachable-nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Forward or Backward Reachable Nodes for a Set of Nodes — reachable-nodes","text":"named list containing: reached: set reachable nodes nodes. lengths: matrix length(nodes) rows one column per timestep + 1 length reachable set step from_step - 1 to_step. first column always one set reachables beginning just node .","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/reachable-nodes.html","id":"number-of-nodes","dir":"Reference","previous_headings":"","what":"Number of Nodes","title":"Get the Forward or Backward Reachable Nodes for a Set of Nodes — reachable-nodes","text":"speed calculations lower memory usage, functions take account nodes edges cumulative edgelist period interest. nodes identified reached lengths sublists names (e.g. node_1093). Nodes without edges therefore calculated node reach themselve (length 1). Take fact account exploring distribution Forward Reachable Paths example. nodes FRP == 1 output.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/reachable-nodes.html","id":"time-and-memory-use","dir":"Reference","previous_headings":"","what":"Time and Memory Use","title":"Get the Forward or Backward Reachable Nodes for a Set of Nodes — reachable-nodes","text":"functions may used efficiently calculate multiple sets reachable nodes. cumulative edgelists way smaller full networkDynamic objects, theses functions suited large dense networks. Also, long size nodes set greater 5, theses functions faster iterating tsna::tPath.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/reachable-nodes.html","id":"displaying-progress","dir":"Reference","previous_headings":"","what":"Displaying Progress","title":"Get the Forward or Backward Reachable Nodes for a Set of Nodes — reachable-nodes","text":"functions using progressr package display progression. Use progressr::with_progress({ fwd_reach <- get_forward_reachable(el, = 1, = 260) }) display progress bar. see progressr package information customization.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/reachable-nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Forward or Backward Reachable Nodes for a Set of Nodes — reachable-nodes","text":"","code":"if (FALSE) { # \\dontrun{  # load a network dynamic object nd <- readRDS(\"nd_obj.Rds\") # convert it to a cumulative edgelist el_cuml <- as_cumulative_edgelist(nd)  # sample 100 node indexes nnodes <- max(el_cuml$head, el_cuml$tail) nodes <- sample(nnodes, 100)  # `get_forward_reachable` uses steps [from_step, to_step] inclusive el_fwd <- get_forward_reachable(el_cuml, 1, 52, nodes)[[\"reached\"]]  # check if the results are consistent with `tsna::tPath` nodes <- strsplit(names(el_fwd), \"_\") for (i in seq_along(el_fwd)) {   node <- as.integer(nodes[[i]][2])   t_fwd <- tsna::tPath(     nd, v = node,     start = 1, end = 52 + 1, # tPath works from [start, end) right exclusive     direction = \"fwd\"   )    t_fwd_set <- which(t_fwd$tdist < Inf)   if(!setequal(el_fwd[[i]], t_fwd_set))     stop(\"Missmatch on node: \", node) }  # Backward: el_bkwd <- get_backward_reachable(el_cuml, 1, 52, nodes = 1)[[\"reached\"]] nodes <- strsplit(names(el_bkwd), \"_\") t_bkwd <- tsna::tPath(   nd, v = nodes[i][2],   start = 1, end = 52 + 1,   direction = \"bkwd\", type = \"latest.depart\" ) t_bkwd_set <- which(t_bkwd$tdist < Inf) setequal(el_bkwd[[1]], t_bkwd_set)  } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/record_attr_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Record Attribute History — record_attr_history","title":"Record Attribute History — record_attr_history","text":"function records values specific time-step group nodes. records, posit_ids converted unique_ids allows recording data nodes longer network end run. records stored dat[[\"attr.history\"]] dat main netsim_dat class object, can accessed netsim object get_attr_history.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/record_attr_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record Attribute History — record_attr_history","text":"","code":"record_attr_history(dat, at, attribute, posit_ids, values)"},{"path":"http://epimodel.github.io/EpiModel/reference/record_attr_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record Attribute History — record_attr_history","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. time recording happens. attribute name value record. posit_ids numeric vector posit_ids measure applies. (see get_posit_ids). values values recorded.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/record_attr_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record Attribute History — record_attr_history","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/record_attr_history.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Record Attribute History — record_attr_history","text":"See \"Time-Varying Parameters\" section \"Working Model Parameters\" vignette.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/record_attr_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Record Attribute History — record_attr_history","text":"","code":"if (FALSE) { # \\dontrun{ # This function must be used inside a custom module dat <- record_attr_history(dat, at, \"attr_1\", get_posit_ids(dat), 5) some_nodes <- get_posit_ids(dat) some_nodes <- some_nodes[runif(length(some_nodes)) < 0.2] dat <- record_attr_history(   dat, at,   \"attr_2\",   some_nodes,   rnorm(length(some_nodes)) ) } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/record_raw_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Record an Arbitrary Object During a Simulation — record_raw_object","title":"Record an Arbitrary Object During a Simulation — record_raw_object","text":"function records object simulation allow inspection afterward. records stored dat[[\"raw.records\"]] simulation, dat main netsim_dat class object, netsim object raw.records collections::queue object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/record_raw_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record an Arbitrary Object During a Simulation — record_raw_object","text":"","code":"record_raw_object(dat, at, label, object)"},{"path":"http://epimodel.github.io/EpiModel/reference/record_raw_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record an Arbitrary Object During a Simulation — record_raw_object","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. time recording happens. label name give recorded object. object object recorded.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/record_raw_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record an Arbitrary Object During a Simulation — record_raw_object","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/record_raw_object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Record an Arbitrary Object During a Simulation — record_raw_object","text":"See \"Time-Varying Parameters\" section \"Working Model Parameters\" vignette.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/record_raw_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Record an Arbitrary Object During a Simulation — record_raw_object","text":"","code":"if (FALSE) { # \\dontrun{  dat <- record_raw_object(dat, at, \"a.df\", data.frame(x = 2:200)) dat <- record_raw_object(dat, at, \"a.message\", \"I recorded something\")  } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.2g.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Recovery: netsim Module — recovery.2g.net","title":"Recovery: netsim Module — recovery.2g.net","text":"function simulates recovery infected state either distinct recovered state (SIR model type) back susceptible state (SIS model type), use netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.2g.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recovery: netsim Module — recovery.2g.net","text":"","code":"recovery.2g.net(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.2g.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recovery: netsim Module — recovery.2g.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.2g.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recovery: netsim Module — recovery.2g.net","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.icm.bip.html","id":null,"dir":"Reference","previous_headings":"","what":"Recovery: icm Module — recovery.icm.bip","title":"Recovery: icm Module — recovery.icm.bip","text":"function simulates recovery infected state either distinct recovered state (SIR model type) back susceptible state (SIS model type), use icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.icm.bip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recovery: icm Module — recovery.icm.bip","text":"","code":"recovery.icm.bip(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.icm.bip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recovery: icm Module — recovery.icm.bip","text":"dat Main icm_dat class data object passed icm simulations. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.icm.bip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recovery: icm Module — recovery.icm.bip","text":"updated icm_dat class main data object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Recovery: icm Module — recovery.icm","title":"Recovery: icm Module — recovery.icm","text":"function simulates recovery infected state either distinct recovered state (SIR model type) back susceptible state (SIS model type), use icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recovery: icm Module — recovery.icm","text":"","code":"recovery.icm(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recovery: icm Module — recovery.icm","text":"dat Main icm_dat class data object passed icm simulations. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recovery: icm Module — recovery.icm","text":"updated icm_dat class main data object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Recovery: netsim Module — recovery.net","title":"Recovery: netsim Module — recovery.net","text":"function simulates recovery infected state either distinct recovered state (SIR model type) back susceptible state (SIS model type), use netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recovery: netsim Module — recovery.net","text":"","code":"recovery.net(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recovery: netsim Module — recovery.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/recovery.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recovery: netsim Module — recovery.net","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/remove_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a Set of Modules From the Module List — remove_modules","title":"Remove a Set of Modules From the Module List — remove_modules","text":"Remove Set Modules Module List","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/remove_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a Set of Modules From the Module List — remove_modules","text":"","code":"remove_modules(dat, names.to.remove)"},{"path":"http://epimodel.github.io/EpiModel/reference/remove_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a Set of Modules From the Module List — remove_modules","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. names..remove character vector containing name modules remove.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/remove_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a Set of Modules From the Module List — remove_modules","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/resim_nets.html","id":null,"dir":"Reference","previous_headings":"","what":"Resimulate Dynamic Network at Time 2+ — resim_nets","title":"Resimulate Dynamic Network at Time 2+ — resim_nets","text":"function resimulates dynamic network stochastic network models simulated netsim dependence epidemic demographic processes network structure.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/resim_nets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resimulate Dynamic Network at Time 2+ — resim_nets","text":"","code":"resim_nets(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/resim_nets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resimulate Dynamic Network at Time 2+ — resim_nets","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/resim_nets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resimulate Dynamic Network at Time 2+ — resim_nets","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.dcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Save dcm Data to Output List Format — saveout.dcm","title":"Save dcm Data to Output List Format — saveout.dcm","text":"function transfers data main df object output object end run dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.dcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save dcm Data to Output List Format — saveout.dcm","text":"","code":"saveout.dcm(df, s, param, control, out = NULL)"},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.dcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save dcm Data to Output List Format — saveout.dcm","text":"df Main object dcm simulations. s Current run number. param Param list set param.dcm. control Control list set control.dcm. list passed back updating runs 2+.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.dcm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save dcm Data to Output List Format — saveout.dcm","text":"list following elements: param: epidemic parameters passed model param.dcm, additional parameters added necessary. control: control settings passed model control.dcm, additional controls added necessary. epi: list data frames, one epidemiological output model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Save icm Data to Output List Format — saveout.icm","title":"Save icm Data to Output List Format — saveout.icm","text":"function transfers data main icm_dat class data object output object end simulation icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save icm Data to Output List Format — saveout.icm","text":"","code":"saveout.icm(dat, s, out = NULL)"},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save icm Data to Output List Format — saveout.icm","text":"dat Main icm_dat class data object passed icm simulations. s Current simulation number. list passed back updating simulations 2+.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.icm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save icm Data to Output List Format — saveout.icm","text":"list following elements: param: epidemic parameters passed model param.icm, additional parameters added necessary. control: control settings passed model control.icm, additional controls added necessary. epi: list data frames, one epidemiological output model.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Save netsim Data to Output List Format — saveout.net","title":"Save netsim Data to Output List Format — saveout.net","text":"function transfers data main netsim_dat object output object end simulation netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save netsim Data to Output List Format — saveout.net","text":"","code":"saveout.net(dat, s, out = NULL)"},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save netsim Data to Output List Format — saveout.net","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. s Current simulation number. list passed back updating simulations 2+.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/saveout.net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save netsim Data to Output List Format — saveout.net","text":"list following elements: param: epidemic parameters passed model param.net, additional parameters added necessary. control: control settings passed model control.net, additional controls added necessary. epi: list data frames, one epidemiological output model. stats: list containing two sublists, nwstats network statistics saved simulation, transmat transmission matrix saved simulation. network: list networkDynamic objects, one model simulation.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_current_timestep.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Current Timestep — set_current_timestep","title":"Set the Current Timestep — set_current_timestep","text":"Changes current timestep netsim_dat object. Use caution. function exists work around unforeseen corner cases. situation, increment_timestep preferred.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_current_timestep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Current Timestep — set_current_timestep","text":"","code":"set_current_timestep(dat, timestep)"},{"path":"http://epimodel.github.io/EpiModel/reference/set_current_timestep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Current Timestep — set_current_timestep","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. timestep new value timestep.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_current_timestep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the Current Timestep — set_current_timestep","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_current_timestep.html","id":"mutability","dir":"Reference","previous_headings":"","what":"Mutability","title":"Set the Current Timestep — set_current_timestep","text":"modify netsim_dat object place. result must assigned back dat order registered: dat <- increment_timestep(dat).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the List of Modules — set_modules","title":"Set the List of Modules — set_modules","text":"Set List Modules","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the List of Modules — set_modules","text":"","code":"set_modules(dat, modules)"},{"path":"http://epimodel.github.io/EpiModel/reference/set_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the List of Modules — set_modules","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. modules named list modules run model","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the List of Modules — set_modules","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Network State During netsim Simulation — set_network","title":"Set Network State During netsim Simulation — set_network","text":"function updates netsim_dat object given network representing current state simulation.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Network State During netsim Simulation — set_network","text":"","code":"set_network(x, ...)  # S3 method for class 'netsim_dat' set_network(x, network = 1L, nw, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/set_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Network State During netsim Simulation — set_network","text":"x netsim_dat object network index network set x nw value network set x","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Network State During netsim Simulation — set_network","text":"netsim_dat object network state updated","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Network State During netsim Simulation — set_network","text":"running tergmLite simulation, function updates x$el[[network]] (tergmLite.track.duration TRUE network index network) network attributes \"time\" \"lasttoggle\" x$net_attr[[network]]. running tergmLite simulation, function updates networkDynamic object stored x$nw[[network]]. input nw class networkLite running tergmLite simulation, class networkDynamic running tergmLite simulation.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_transmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Transmission Matrix — set_transmat","title":"Save Transmission Matrix — set_transmat","text":"function appends transmission matrix created infection.net infection.2g.net.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_transmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Transmission Matrix — set_transmat","text":"","code":"set_transmat(dat, del, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/set_transmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Transmission Matrix — set_transmat","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. del Discordant edgelist created within infection.net infection.2g.net. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_transmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Transmission Matrix — set_transmat","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_transmat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Transmission Matrix — set_transmat","text":"internal function works within parent infection.net functions save transmission matrix created time step main netsim_dat class object dat.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_vertex_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Vertex Attribute on Network Object — set_vertex_attribute","title":"Set Vertex Attribute on Network Object — set_vertex_attribute","text":"Sets vertex attribute object class network. function simplifies related function network package.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_vertex_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Vertex Attribute on Network Object — set_vertex_attribute","text":"","code":"set_vertex_attribute(x, attrname, value, v)"},{"path":"http://epimodel.github.io/EpiModel/reference/set_vertex_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Vertex Attribute on Network Object — set_vertex_attribute","text":"x object class network. attrname name attribute set. value vector values attribute set. v IDs vertices whose attributes altered.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_vertex_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Vertex Attribute on Network Object — set_vertex_attribute","text":"Returns object class network.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_vertex_attribute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Vertex Attribute on Network Object — set_vertex_attribute","text":"function used EpiModel workflows set vertex attributes initialized empty network object (see network_initialize.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/set_vertex_attribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Vertex Attribute on Network Object — set_vertex_attribute","text":"","code":"nw <- network_initialize(100) nw <- set_vertex_attribute(nw, \"age\", runif(100, 15, 65)) nw #>  Network attributes: #>   vertices = 100  #>   directed = FALSE  #>   hyper = FALSE  #>   loops = FALSE  #>   multiple = FALSE  #>   bipartite = FALSE  #>   total edges= 0  #>     missing edges= 0  #>     non-missing edges= 0  #>  #>  Vertex attribute names:  #>     age vertex.names  #>  #> No edge attributes"},{"path":"http://epimodel.github.io/EpiModel/reference/sim_nets_t1.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Networks Used in netsim — sim_nets_t1","title":"Initialize Networks Used in netsim — sim_nets_t1","text":"function initializes networks used netsim. initial edge set given network obtained either simulating cross-sectional model (edapprox == TRUE) newnetwork element netest object (edapprox == FALSE). initial edge sets determined, first time step simulated resimulate.network == TRUE, time steps simulated resimulate.network == FALSE. Initializes num(.g2) epi fields used edges_correct computing edge coefficient adjustments.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/sim_nets_t1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Networks Used in netsim — sim_nets_t1","text":"","code":"sim_nets_t1(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/sim_nets_t1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Networks Used in netsim — sim_nets_t1","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/sim_nets_t1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Networks Used in netsim — sim_nets_t1","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/simulate_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Network for a Specified Number of Time Steps — simulate_dat","title":"Simulate a Network for a Specified Number of Time Steps — simulate_dat","text":"function simulates dynamic network one multiple time steps TERGMs one multiple cross-sectional network panels ERGMs, use netsim modeling. Network statistics also extracted saved save.nwstats == TRUE resimulate.network == FALSE.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/simulate_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Network for a Specified Number of Time Steps — simulate_dat","text":"","code":"simulate_dat(dat, at, network = 1L, nsteps = 1L)"},{"path":"http://epimodel.github.io/EpiModel/reference/simulate_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Network for a Specified Number of Time Steps — simulate_dat","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step. network index network simulate nsteps number time steps simulate","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/simulate_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Network for a Specified Number of Time Steps — simulate_dat","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/ssample.html","id":null,"dir":"Reference","previous_headings":"","what":"Stable Sampling Function — ssample","title":"Stable Sampling Function — ssample","text":"Provides sampling function useful dynamic simulations, length input vector may multiple lengths size sample may 0.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/ssample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stable Sampling Function — ssample","text":"","code":"ssample(x, size, replace = FALSE, prob = NULL)"},{"path":"http://epimodel.github.io/EpiModel/reference/ssample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stable Sampling Function — ssample","text":"x Either vector one elements choose, positive integer. size Non-negative integer giving number items choose. replace sampling replacement? prob Vector probability weights obtaining elements vector sampled.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/ssample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stable Sampling Function — ssample","text":"vector containing sampled value(s).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary.dcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Model Statistics — summary.dcm","title":"Summary Model Statistics — summary.dcm","text":"Extracts prints model statistics solved dcm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary.dcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Model Statistics — summary.dcm","text":"","code":"# S3 method for class 'dcm' summary(object, at, run = 1, digits = 3, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/summary.dcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Model Statistics — summary.dcm","text":"object EpiModel object class dcm. Time step model statistics. run Model run number, dcm class models multiple runs (sensitivity analyses). digits Number significant digits print. ... Additional summary function arguments (used).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary.dcm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary Model Statistics — summary.dcm","text":"function provides summary statistics main epidemiological outcomes (state transition size prevalence) dcm model. Time-specific summary measures provided, necessary input time interest. multiple-run models (sensitivity analyses), input model run number. See examples .","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/summary.dcm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Model Statistics — summary.dcm","text":"","code":"## Deterministic SIR model with varying act.rate param <- param.dcm(inf.prob = 0.2, act.rate = 2:4, rec.rate = 1/3,                    a.rate = 0.011, ds.rate = 0.01,                    di.rate = 0.03, dr.rate = 0.01) init <- init.dcm(s.num = 1000, i.num = 1, r.num = 0) control <- control.dcm(type = \"SIR\", nsteps = 50) mod <- dcm(param, init, control) summary(mod, at = 25, run = 1) #> EpiModel Summary #> ======================= #> Model class: dcm #>  #> Simulation Summary #> ----------------------- #> Model type: SIR #> No. runs: 3 #> No. time steps: #> No. groups: 1 #>  #> Model Statistics #> ------------------------------ #> Time: 25\t Run: 1  #> ------------------------------  #>                        n    pct #> Suscept.        1010.999  0.987 #> Infect.            2.265  0.002 #> Recov.            11.293  0.011 #> Total           1024.557  1.000 #> S -> I             0.908     NA #> I -> R             0.767     NA #> Arrival ->        11.276     NA #> S Departure ->    10.111     NA #> I Departure ->     0.069     NA #> R Departure ->     0.116     NA #> ------------------------------  summary(mod, at = 25, run = 3) #> EpiModel Summary #> ======================= #> Model class: dcm #>  #> Simulation Summary #> ----------------------- #> Model type: SIR #> No. runs: 3 #> No. time steps: #> No. groups: 1 #>  #> Model Statistics #> ------------------------------ #> Time: 25\t Run: 3  #> ------------------------------  #>                       n    pct #> Suscept.        224.736  0.229 #> Infect.          79.014  0.081 #> Recov.          677.357  0.690 #> Total           981.106  1.000 #> S -> I           13.102     NA #> I -> R           24.087     NA #> Arrival ->       10.789     NA #> S Departure ->    2.222     NA #> I Departure ->    2.168     NA #> R Departure ->    6.863     NA #> ------------------------------  summary(mod, at = 26, run = 3) #> EpiModel Summary #> ======================= #> Model class: dcm #>  #> Simulation Summary #> ----------------------- #> Model type: SIR #> No. runs: 3 #> No. time steps: #> No. groups: 1 #>  #> Model Statistics #> ------------------------------ #> Time: 26\t Run: 3  #> ------------------------------  #>                       n    pct #> Suscept.        220.201  0.225 #> Infect.          65.862  0.067 #> Recov.          694.580  0.708 #> Total           980.642  1.000 #> S -> I           10.746     NA #> I -> R           20.049     NA #> Arrival ->       10.786     NA #> S Departure ->    2.189     NA #> I Departure ->    1.804     NA #> R Departure ->    7.014     NA #> ------------------------------"},{"path":"http://epimodel.github.io/EpiModel/reference/summary.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Model Statistics — summary.icm","title":"Summary Model Statistics — summary.icm","text":"Extracts prints model statistics simulated icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Model Statistics — summary.icm","text":"","code":"# S3 method for class 'icm' summary(object, at, digits = 3, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/summary.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Model Statistics — summary.icm","text":"object EpiModel object class icm. Time step model statistics. digits Number significant digits print. ... Additional summary function arguments.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary.icm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary Model Statistics — summary.icm","text":"function provides summary statistics main epidemiological outcomes (state transition size prevalence) icm model. Time-specific summary measures provided, necessary input time interest.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/summary.icm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Model Statistics — summary.icm","text":"","code":"## Stochastic ICM SI model with 3 simulations param <- param.icm(inf.prob = 0.2, act.rate = 1) init <- init.icm(s.num = 500, i.num = 1) control <- control.icm(type = \"SI\", nsteps = 50,                        nsims = 5, verbose = FALSE) mod <- icm(param, init, control) summary(mod, at = 25) #> EpiModel Summary #> ======================= #> Model class: icm #>  #> Simulation Details #> ----------------------- #> Model type: SI #> No. simulations: 5 #> No. time steps: 50 #> No. groups: 1 #>  #> Model Statistics #> ------------------------------ #> Time: 25  #> ------------------------------  #>            mean      sd    pct #> Suscept.  417.0  38.177  0.832 #> Infect.    84.0  38.177  0.168 #> Total     501.0   0.000  1.000 #> S -> I     11.8   4.658     NA #> ------------------------------  summary(mod, at = 50) #> EpiModel Summary #> ======================= #> Model class: icm #>  #> Simulation Details #> ----------------------- #> Model type: SI #> No. simulations: 5 #> No. time steps: 50 #> No. groups: 1 #>  #> Model Statistics #> ------------------------------ #> Time: 50  #> ------------------------------  #>            mean      sd    pct #> Suscept.   22.6  16.994  0.045 #> Infect.   478.4  16.994  0.955 #> Total     501.0   0.000  1.000 #> S -> I      5.8   3.033     NA #> ------------------------------"},{"path":"http://epimodel.github.io/EpiModel/reference/summary.netest.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for Network Model Fit — summary.netest","title":"Summary for Network Model Fit — summary.netest","text":"Prints summary model fit statistics ERGM STERGM fit.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary.netest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for Network Model Fit — summary.netest","text":"","code":"# S3 method for class 'netest' summary(object, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/summary.netest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for Network Model Fit — summary.netest","text":"object EpiModel object class netest. ... Additional summary function arguments.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary.netest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary for Network Model Fit — summary.netest","text":"function simply wrapper function summary.ergm. Additionally, edges dissolution approximation used fit temporal ERGM, dissolution coefficient information printed. fit object attached netest object, summary.netest call summary fit using ... passed summary.netest.  Otherwise, summary.netest print stored summary fit generated original netest call, using ... passed netest.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary.netsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Model Statistics — summary.netsim","title":"Summary Model Statistics — summary.netsim","text":"Extracts prints model statistics simulated netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary.netsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Model Statistics — summary.netsim","text":"","code":"# S3 method for class 'netsim' summary(object, at, digits = 3, ...)"},{"path":"http://epimodel.github.io/EpiModel/reference/summary.netsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Model Statistics — summary.netsim","text":"object EpiModel object class netsim. Time step model statistics. digits Number significant digits print. ... Additional summary function arguments.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary.netsim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary Model Statistics — summary.netsim","text":"function provides summary statistics main epidemiological outcomes (state transition size prevalence) netsim model. Time-specific summary measures provided, necessary input time interest.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/reference/summary.netsim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Model Statistics — summary.netsim","text":"","code":"if (FALSE) { # \\dontrun{ ## SI Model without Network Feedback # Initialize network and set network model parameters nw <- network_initialize(n = 100) nw <- set_vertex_attribute(nw, \"group\", rep(1:2, each = 50)) formation <- ~edges target.stats <- 50 coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)  # Estimate the ERGM models (see help for netest) est1 <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)  # Parameters, initial conditions, and controls for model param <- param.net(inf.prob = 0.3, inf.prob.g2 = 0.15) init <- init.net(i.num = 10, i.num.g2 = 10) control <- control.net(type = \"SI\", nsteps = 100, nsims = 5, verbose.int = 0)  # Run the model simulation mod <- netsim(est1, param, init, control)  summary(mod, at = 1) summary(mod, at = 50) summary(mod, at = 100) } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/summary_nets.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Summary Statistics of Networks Used in netsim — summary_nets","title":"Extract Summary Statistics of Networks Used in netsim — summary_nets","text":"function calls summary network simulated netsim, provided save.nwstats resimulate.network TRUE. records statistics represented nwstats.formula dat$stats$nwstats, dat main netsim_dat class object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary_nets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Summary Statistics of Networks Used in netsim — summary_nets","text":"","code":"summary_nets(dat, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/summary_nets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Summary Statistics of Networks Used in netsim — summary_nets","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. Current time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/summary_nets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Summary Statistics of Networks Used in netsim — summary_nets","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/tedgelist_to_toggles.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Timed Edgelist to Matrix of Toggles — tedgelist_to_toggles","title":"Convert Timed Edgelist to Matrix of Toggles — tedgelist_to_toggles","text":"Convert Timed Edgelist Matrix Toggles","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/tedgelist_to_toggles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Timed Edgelist to Matrix of Toggles — tedgelist_to_toggles","text":"","code":"tedgelist_to_toggles(tedgelist)"},{"path":"http://epimodel.github.io/EpiModel/reference/tedgelist_to_toggles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Timed Edgelist to Matrix of Toggles — tedgelist_to_toggles","text":"tedgelist timed edgelist, produced networkDynamic::.data.frame.networkDynamic.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/tedgelist_to_toggles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Timed Edgelist to Matrix of Toggles — tedgelist_to_toggles","text":"matrix toggles corresponding tedgelist.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/test_icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the Model Output from a Stochastic Individual Contact Model — test_icm","title":"Test the Model Output from a Stochastic Individual Contact Model — test_icm","text":"Tests whether model output individual contact model consistent key balancing equations compartment flow sizes simulation time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/test_icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the Model Output from a Stochastic Individual Contact Model — test_icm","text":"","code":"test_icm(x)"},{"path":"http://epimodel.github.io/EpiModel/reference/test_icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the Model Output from a Stochastic Individual Contact Model — test_icm","text":"x object class icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/test_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the Model Output from a Network Model — test_net","title":"Test the Model Output from a Network Model — test_net","text":"Tests whether model output network model consistent key balancing equations compartment flow sizes simulation time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/test_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the Model Output from a Network Model — test_net","text":"","code":"test_net(x)"},{"path":"http://epimodel.github.io/EpiModel/reference/test_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the Model Output from a Network Model — test_net","text":"x object class netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/toggles_to_diss_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Matrix of Toggles to Dissolution and Duration Statistics — toggles_to_diss_stats","title":"Convert Matrix of Toggles to Dissolution and Duration Statistics — toggles_to_diss_stats","text":"Convert Matrix Toggles Dissolution Duration Statistics","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/toggles_to_diss_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Matrix of Toggles to Dissolution and Duration Statistics — toggles_to_diss_stats","text":"","code":"toggles_to_diss_stats(toggles, coef.diss, nsteps, nw, time.start = 0L)"},{"path":"http://epimodel.github.io/EpiModel/reference/toggles_to_diss_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Matrix of Toggles to Dissolution and Duration Statistics — toggles_to_diss_stats","text":"toggles matrix toggles, produced tedgelist_to_toggles. coef.diss Dissolution coefficients used simulation. nsteps Number time steps simulation. nw Network used simulation. time.start Starting time simulation.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/toggles_to_diss_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Matrix of Toggles to Dissolution and Duration Statistics — toggles_to_diss_stats","text":"Named list containing dissolution duration statistics matrices related information.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/trigger_end_horizon.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Trigger the End Horizon — trigger_end_horizon","title":"Function to Trigger the End Horizon — trigger_end_horizon","text":"Function Trigger End Horizon","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/trigger_end_horizon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Trigger the End Horizon — trigger_end_horizon","text":"","code":"trigger_end_horizon(dat)"},{"path":"http://epimodel.github.io/EpiModel/reference/trigger_end_horizon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Trigger the End Horizon — trigger_end_horizon","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/trigger_end_horizon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to Trigger the End Horizon — trigger_end_horizon","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/trigger_end_horizon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to Trigger the End Horizon — trigger_end_horizon","text":"function triggers end horizon control end.horizon exists value equal current timestep. end horizon consists removal set modules module list.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/trim_netest.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Reduce the Size of a netest Object — trim_netest","title":"Function to Reduce the Size of a netest Object — trim_netest","text":"Trims formula environments netest object. Optionally converts newnetwork element netest object networkLite class, removes fit element (present) netest object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/trim_netest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Reduce the Size of a netest Object — trim_netest","text":"","code":"trim_netest(   object,   as.networkLite = TRUE,   keep.fit = FALSE,   keep = character(0) )"},{"path":"http://epimodel.github.io/EpiModel/reference/trim_netest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Reduce the Size of a netest Object — trim_netest","text":"object netest class object. .networkLite TRUE, converts object$newnetwork networkLite. keep.fit FALSE, removes object$fit (present) netest object. keep Character vector object names keep formula environments. default, objects removed.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/trim_netest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to Reduce the Size of a netest Object — trim_netest","text":"netest object formula environments trimmed, optionally newnetwork element converted networkLite fit element removed.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/trim_netest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to Reduce the Size of a netest Object — trim_netest","text":"larger, complex network structures epidemic models, generally useful reduce memory footprint fitted TERGM model object (estimated netest). utility function removes bare essentials needed simulating network model netsim. function always trims environments object$constraints object$coef.diss$dissolution. edapprox = TRUE nested.edapprox = TRUE netest call, also trims environments object$formula object$formation. edapprox = TRUE nested.edapprox = FALSE netest call, also trims environments object$formula, environment(object$formation)$formation, environment(object$formation)$dissolution. edapprox = FALSE netest call, also trims environments object$formation, environment(object$formula)$formation environment(object$formula)$dissolution. default objects removed trimmed environments. Specific objects may retained passing names keep argument. output trim_netest usable netsim simulation, objects referenced formulas included keep argument. .networkLite = TRUE, converts object$newnetwork networkLite object. keep.fit = FALSE, removes fit (present) object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/trim_netest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to Reduce the Size of a netest Object — trim_netest","text":"","code":"nw <- network_initialize(n = 100) formation <- ~edges + concurrent target.stats <- c(50, 25) coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 10) est <- netest(nw, formation, target.stats, coef.diss,               set.control.ergm = control.ergm(MCMC.burnin = 1e5,                                               MCMC.interval = 1000)) #> Starting maximum pseudolikelihood estimation (MPLE): #> Obtaining the responsible dyads. #> Evaluating the predictor and response matrix. #> Maximizing the pseudolikelihood. #> Finished MPLE. #> Starting Monte Carlo maximum likelihood estimation (MCMLE): #> Iteration 1 of at most 60: #> 1  #> Optimizing with step length 1.0000. #> The log-likelihood improved by 0.7827. #> Estimating equations are not within tolerance region. #> Iteration 2 of at most 60: #> 1  #> Optimizing with step length 1.0000. #> The log-likelihood improved by 0.1112. #> Estimating equations are not within tolerance region. #> Iteration 3 of at most 60: #> 1  #> Optimizing with step length 1.0000. #> The log-likelihood improved by 0.0299. #> Convergence test p-value: < 0.0001.  #> Converged with 99% confidence. #> Finished MCMLE. #> This model was fit using MCMC.  To examine model diagnostics and check #> for degeneracy, use the mcmc.diagnostics() function. print(object.size(est), units = \"KB\") #> 413.9 Kb  est.small <- trim_netest(est) print(object.size(est.small), units = \"KB\") #> 57.6 Kb"},{"path":"http://epimodel.github.io/EpiModel/reference/truncate_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncate Simulation Time Series — truncate_sim","title":"Truncate Simulation Time Series — truncate_sim","text":"Left-truncates simulation epidemiological summary statistics network statistics specified time step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/truncate_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncate Simulation Time Series — truncate_sim","text":"","code":"truncate_sim(x, at)"},{"path":"http://epimodel.github.io/EpiModel/reference/truncate_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncate Simulation Time Series — truncate_sim","text":"x Object class netsim icm. Time step left-truncate time series.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/truncate_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncate Simulation Time Series — truncate_sim","text":"updated object class netsim icm.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/truncate_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Truncate Simulation Time Series — truncate_sim","text":"function used running follow-simulation time steps b c burn-period time b, final time window interest data analysis b c .","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/truncate_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Truncate Simulation Time Series — truncate_sim","text":"","code":"param <- param.icm(inf.prob = 0.2, act.rate = 0.25) init <- init.icm(s.num = 500, i.num = 1) control <- control.icm(type = \"SI\", nsteps = 200, nsims = 1) mod1 <- icm(param, init, control) df <- as.data.frame(mod1) print(df) #>     sim time s.num i.num num si.flow #> 1     1    1   500     1 501       0 #> 2     1    2   499     2 501       1 #> 3     1    3   499     2 501       0 #> 4     1    4   499     2 501       0 #> 5     1    5   499     2 501       0 #> 6     1    6   499     2 501       0 #> 7     1    7   499     2 501       0 #> 8     1    8   499     2 501       0 #> 9     1    9   499     2 501       0 #> 10    1   10   499     2 501       0 #> 11    1   11   499     2 501       0 #> 12    1   12   499     2 501       0 #> 13    1   13   499     2 501       0 #> 14    1   14   499     2 501       0 #> 15    1   15   499     2 501       0 #> 16    1   16   499     2 501       0 #> 17    1   17   499     2 501       0 #> 18    1   18   499     2 501       0 #> 19    1   19   499     2 501       0 #> 20    1   20   499     2 501       0 #> 21    1   21   499     2 501       0 #> 22    1   22   499     2 501       0 #> 23    1   23   499     2 501       0 #> 24    1   24   499     2 501       0 #> 25    1   25   498     3 501       1 #> 26    1   26   498     3 501       0 #> 27    1   27   498     3 501       0 #> 28    1   28   498     3 501       0 #> 29    1   29   498     3 501       0 #> 30    1   30   498     3 501       0 #> 31    1   31   498     3 501       0 #> 32    1   32   498     3 501       0 #> 33    1   33   498     3 501       0 #> 34    1   34   498     3 501       0 #> 35    1   35   498     3 501       0 #> 36    1   36   498     3 501       0 #> 37    1   37   498     3 501       0 #> 38    1   38   498     3 501       0 #> 39    1   39   498     3 501       0 #> 40    1   40   498     3 501       0 #> 41    1   41   497     4 501       1 #> 42    1   42   497     4 501       0 #> 43    1   43   497     4 501       0 #> 44    1   44   497     4 501       0 #> 45    1   45   497     4 501       0 #> 46    1   46   497     4 501       0 #> 47    1   47   497     4 501       0 #> 48    1   48   497     4 501       0 #> 49    1   49   497     4 501       0 #> 50    1   50   497     4 501       0 #> 51    1   51   497     4 501       0 #> 52    1   52   497     4 501       0 #> 53    1   53   497     4 501       0 #> 54    1   54   497     4 501       0 #> 55    1   55   496     5 501       1 #> 56    1   56   496     5 501       0 #> 57    1   57   496     5 501       0 #> 58    1   58   495     6 501       1 #> 59    1   59   495     6 501       0 #> 60    1   60   495     6 501       0 #> 61    1   61   494     7 501       1 #> 62    1   62   494     7 501       0 #> 63    1   63   492     9 501       2 #> 64    1   64   491    10 501       1 #> 65    1   65   491    10 501       0 #> 66    1   66   490    11 501       1 #> 67    1   67   490    11 501       0 #> 68    1   68   488    13 501       2 #> 69    1   69   488    13 501       0 #> 70    1   70   488    13 501       0 #> 71    1   71   487    14 501       1 #> 72    1   72   487    14 501       0 #> 73    1   73   486    15 501       1 #> 74    1   74   486    15 501       0 #> 75    1   75   485    16 501       1 #> 76    1   76   483    18 501       2 #> 77    1   77   482    19 501       1 #> 78    1   78   481    20 501       1 #> 79    1   79   481    20 501       0 #> 80    1   80   481    20 501       0 #> 81    1   81   480    21 501       1 #> 82    1   82   477    24 501       3 #> 83    1   83   476    25 501       1 #> 84    1   84   475    26 501       1 #> 85    1   85   474    27 501       1 #> 86    1   86   470    31 501       4 #> 87    1   87   469    32 501       1 #> 88    1   88   467    34 501       2 #> 89    1   89   467    34 501       0 #> 90    1   90   466    35 501       1 #> 91    1   91   466    35 501       0 #> 92    1   92   466    35 501       0 #> 93    1   93   464    37 501       2 #> 94    1   94   462    39 501       2 #> 95    1   95   461    40 501       1 #> 96    1   96   460    41 501       1 #> 97    1   97   457    44 501       3 #> 98    1   98   456    45 501       1 #> 99    1   99   453    48 501       3 #> 100   1  100   450    51 501       3 #> 101   1  101   450    51 501       0 #> 102   1  102   447    54 501       3 #> 103   1  103   445    56 501       2 #> 104   1  104   442    59 501       3 #> 105   1  105   437    64 501       5 #> 106   1  106   434    67 501       3 #> 107   1  107   430    71 501       4 #> 108   1  108   426    75 501       4 #> 109   1  109   420    81 501       6 #> 110   1  110   413    88 501       7 #> 111   1  111   412    89 501       1 #> 112   1  112   408    93 501       4 #> 113   1  113   405    96 501       3 #> 114   1  114   403    98 501       2 #> 115   1  115   399   102 501       4 #> 116   1  116   398   103 501       1 #> 117   1  117   392   109 501       6 #> 118   1  118   384   117 501       8 #> 119   1  119   379   122 501       5 #> 120   1  120   373   128 501       6 #> 121   1  121   368   133 501       5 #> 122   1  122   363   138 501       5 #> 123   1  123   355   146 501       8 #> 124   1  124   354   147 501       1 #> 125   1  125   350   151 501       4 #> 126   1  126   345   156 501       5 #> 127   1  127   340   161 501       5 #> 128   1  128   335   166 501       5 #> 129   1  129   329   172 501       6 #> 130   1  130   323   178 501       6 #> 131   1  131   315   186 501       8 #> 132   1  132   309   192 501       6 #> 133   1  133   297   204 501      12 #> 134   1  134   293   208 501       4 #> 135   1  135   288   213 501       5 #> 136   1  136   282   219 501       6 #> 137   1  137   278   223 501       4 #> 138   1  138   271   230 501       7 #> 139   1  139   266   235 501       5 #> 140   1  140   261   240 501       5 #> 141   1  141   255   246 501       6 #> 142   1  142   250   251 501       5 #> 143   1  143   241   260 501       9 #> 144   1  144   236   265 501       5 #> 145   1  145   232   269 501       4 #> 146   1  146   221   280 501      11 #> 147   1  147   215   286 501       6 #> 148   1  148   208   293 501       7 #> 149   1  149   204   297 501       4 #> 150   1  150   199   302 501       5 #> 151   1  151   188   313 501      11 #> 152   1  152   181   320 501       7 #> 153   1  153   178   323 501       3 #> 154   1  154   177   324 501       1 #> 155   1  155   174   327 501       3 #> 156   1  156   172   329 501       2 #> 157   1  157   169   332 501       3 #> 158   1  158   162   339 501       7 #> 159   1  159   159   342 501       3 #> 160   1  160   156   345 501       3 #> 161   1  161   151   350 501       5 #> 162   1  162   147   354 501       4 #> 163   1  163   143   358 501       4 #> 164   1  164   137   364 501       6 #> 165   1  165   133   368 501       4 #> 166   1  166   127   374 501       6 #> 167   1  167   124   377 501       3 #> 168   1  168   121   380 501       3 #> 169   1  169   115   386 501       6 #> 170   1  170   114   387 501       1 #> 171   1  171   111   390 501       3 #> 172   1  172   110   391 501       1 #> 173   1  173   106   395 501       4 #> 174   1  174    99   402 501       7 #> 175   1  175    95   406 501       4 #> 176   1  176    91   410 501       4 #> 177   1  177    88   413 501       3 #> 178   1  178    87   414 501       1 #> 179   1  179    81   420 501       6 #> 180   1  180    76   425 501       5 #> 181   1  181    73   428 501       3 #> 182   1  182    70   431 501       3 #> 183   1  183    67   434 501       3 #> 184   1  184    63   438 501       4 #> 185   1  185    60   441 501       3 #> 186   1  186    56   445 501       4 #> 187   1  187    52   449 501       4 #> 188   1  188    48   453 501       4 #> 189   1  189    45   456 501       3 #> 190   1  190    42   459 501       3 #> 191   1  191    41   460 501       1 #> 192   1  192    38   463 501       3 #> 193   1  193    38   463 501       0 #> 194   1  194    35   466 501       3 #> 195   1  195    33   468 501       2 #> 196   1  196    33   468 501       0 #> 197   1  197    31   470 501       2 #> 198   1  198    30   471 501       1 #> 199   1  199    30   471 501       0 #> 200   1  200    29   472 501       1 plot(mod1)  mod1$control$nsteps #> [1] 200  mod2 <- truncate_sim(mod1, at = 150) df2 <- as.data.frame(mod2) print(df2) #>    sim time s.num i.num num si.flow #> 1    1    1   199   302 501       5 #> 2    1    2   188   313 501      11 #> 3    1    3   181   320 501       7 #> 4    1    4   178   323 501       3 #> 5    1    5   177   324 501       1 #> 6    1    6   174   327 501       3 #> 7    1    7   172   329 501       2 #> 8    1    8   169   332 501       3 #> 9    1    9   162   339 501       7 #> 10   1   10   159   342 501       3 #> 11   1   11   156   345 501       3 #> 12   1   12   151   350 501       5 #> 13   1   13   147   354 501       4 #> 14   1   14   143   358 501       4 #> 15   1   15   137   364 501       6 #> 16   1   16   133   368 501       4 #> 17   1   17   127   374 501       6 #> 18   1   18   124   377 501       3 #> 19   1   19   121   380 501       3 #> 20   1   20   115   386 501       6 #> 21   1   21   114   387 501       1 #> 22   1   22   111   390 501       3 #> 23   1   23   110   391 501       1 #> 24   1   24   106   395 501       4 #> 25   1   25    99   402 501       7 #> 26   1   26    95   406 501       4 #> 27   1   27    91   410 501       4 #> 28   1   28    88   413 501       3 #> 29   1   29    87   414 501       1 #> 30   1   30    81   420 501       6 #> 31   1   31    76   425 501       5 #> 32   1   32    73   428 501       3 #> 33   1   33    70   431 501       3 #> 34   1   34    67   434 501       3 #> 35   1   35    63   438 501       4 #> 36   1   36    60   441 501       3 #> 37   1   37    56   445 501       4 #> 38   1   38    52   449 501       4 #> 39   1   39    48   453 501       4 #> 40   1   40    45   456 501       3 #> 41   1   41    42   459 501       3 #> 42   1   42    41   460 501       1 #> 43   1   43    38   463 501       3 #> 44   1   44    38   463 501       0 #> 45   1   45    35   466 501       3 #> 46   1   46    33   468 501       2 #> 47   1   47    33   468 501       0 #> 48   1   48    31   470 501       2 #> 49   1   49    30   471 501       1 #> 50   1   50    30   471 501       0 #> 51   1   51    29   472 501       1 plot(mod2)  mod2$control$nsteps #> [1] 51"},{"path":"http://epimodel.github.io/EpiModel/reference/unique_id-tools.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Unique Identifiers to/from Positional Identifiers — unique_id-tools","title":"Convert Unique Identifiers to/from Positional Identifiers — unique_id-tools","text":"EpiModel refers nodes either positional identifiers (posit_ids), describe position node attr vector, unique identifiers (unique_ids), allow references nodes even deactivated.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/unique_id-tools.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Unique Identifiers to/from Positional Identifiers — unique_id-tools","text":"","code":"get_unique_ids(dat, posit_ids = NULL)  get_posit_ids(dat, unique_ids = NULL)"},{"path":"http://epimodel.github.io/EpiModel/reference/unique_id-tools.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Unique Identifiers to/from Positional Identifiers — unique_id-tools","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. posit_ids vector node positional identifiers (default = NULL). unique_ids vector node unique identifiers (default = NULL).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/unique_id-tools.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Unique Identifiers to/from Positional Identifiers — unique_id-tools","text":"vector unique positional identifiers.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/unique_id-tools.html","id":"all-elements","dir":"Reference","previous_headings":"","what":"All elements","title":"Convert Unique Identifiers to/from Positional Identifiers — unique_id-tools","text":"unique_ids posit_ids NULL (default) full list positional IDs unique IDs returned.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/unique_id-tools.html","id":"deactivated-nodes","dir":"Reference","previous_headings":"","what":"Deactivated nodes","title":"Convert Unique Identifiers to/from Positional Identifiers — unique_id-tools","text":"providing unique_ids deactivated nodes get_posit_ids, NAs returned instead warning produced.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_cumulative_edgelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Cumulative Edgelist of the Specified Network — update_cumulative_edgelist","title":"Update a Cumulative Edgelist of the Specified Network — update_cumulative_edgelist","text":"Update Cumulative Edgelist Specified Network","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_cumulative_edgelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Cumulative Edgelist of the Specified Network — update_cumulative_edgelist","text":"","code":"update_cumulative_edgelist(dat, network, truncate = 0)"},{"path":"http://epimodel.github.io/EpiModel/reference/update_cumulative_edgelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Cumulative Edgelist of the Specified Network — update_cumulative_edgelist","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. network Numerical index network cumulative edgelist updated. (May > 1 models multiple overlapping networks.) truncate many time steps partnership longer active removed output.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_cumulative_edgelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a Cumulative Edgelist of the Specified Network — update_cumulative_edgelist","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_cumulative_edgelist.html","id":"truncation","dir":"Reference","previous_headings":"","what":"Truncation","title":"Update a Cumulative Edgelist of the Specified Network — update_cumulative_edgelist","text":"avoid storing cumulative edgelist long, truncate parameter defines number steps edge longer active truncated cumulative edgelist. truncate = Inf, edges ever removed. truncate = 0, active edges kept. may want behavior keep track active edges' start step.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_dissolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Dissolution Component of Network Model Fit — update_dissolution","title":"Adjust Dissolution Component of Network Model Fit — update_dissolution","text":"Adjusts dissolution component dynamic ERGM fit using netest function edges dissolution approximation method.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_dissolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Dissolution Component of Network Model Fit — update_dissolution","text":"","code":"update_dissolution(old.netest, new.coef.diss, nested.edapprox = TRUE)"},{"path":"http://epimodel.github.io/EpiModel/reference/update_dissolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Dissolution Component of Network Model Fit — update_dissolution","text":"old.netest object class netest, netest function. new.coef.diss object class disscoef, dissolution_coefs function. nested.edapprox Logical. edapprox = TRUE dissolution model initial segment formation model (see details netest).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_dissolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Dissolution Component of Network Model Fit — update_dissolution","text":"updated network model object class netest.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_dissolution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Dissolution Component of Network Model Fit — update_dissolution","text":"Fitting ERGM computationally intensive process model includes dyad dependent terms. edges dissolution approximation method Carnegie et al, coefficients temporal ERGM approximated fitting static ERGM adjusting formation coefficients account edge dissolution. function provides efficient method adjust coefficients model one wants use different dissolution model; typical use case may fit several different models different average edge durations targets. example exhibits case.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_dissolution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Dissolution Component of Network Model Fit — update_dissolution","text":"","code":"if (FALSE) { # \\dontrun{ nw <- network_initialize(n = 1000)  # Two dissolutions: an average duration of 300 versus 200 diss.300 <- dissolution_coefs(~offset(edges), 300, 0.001) diss.200 <- dissolution_coefs(~offset(edges), 200, 0.001)  # Fit the two reference models est300 <- netest(nw = nw,                 formation = ~edges,                 target.stats = c(500),                 coef.diss = diss.300)  est200 <- netest(nw = nw,                 formation = ~edges,                 target.stats = c(500),                 coef.diss = diss.200)  # Alternatively, update the 300 model with the 200 coefficients est200.compare <- update_dissolution(est300, diss.200)  identical(est200$coef.form, est200.compare$coef.form) } # }"},{"path":"http://epimodel.github.io/EpiModel/reference/update_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Update List x Using the Elements of List new.x. — update_list","title":"Update List x Using the Elements of List new.x. — update_list","text":"Update List x Using Elements List new.x.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update List x Using the Elements of List new.x. — update_list","text":"","code":"update_list(x, new.x)"},{"path":"http://epimodel.github.io/EpiModel/reference/update_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update List x Using the Elements of List new.x. — update_list","text":"x list. new.x list.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update List x Using the Elements of List new.x. — update_list","text":"full x list modifications added new.x.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update List x Using the Elements of List new.x. — update_list","text":"function updates list x name. x new.x elements named, function work properly. function provided replace element originally function, function applied original value.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Model Parameters for Stochastic Network Models — update_params","title":"Update Model Parameters for Stochastic Network Models — update_params","text":"Updates epidemic model parameters originally set param.net adds new parameters.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Model Parameters for Stochastic Network Models — update_params","text":"","code":"update_params(param, new.param.list)"},{"path":"http://epimodel.github.io/EpiModel/reference/update_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Model Parameters for Stochastic Network Models — update_params","text":"param Object class param.net, output function name. new.param.list Named list new parameters add original parameters.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Model Parameters for Stochastic Network Models — update_params","text":"updated list object class param.net, can passed EpiModel function netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update Model Parameters for Stochastic Network Models — update_params","text":"function can update original parameters specified param.net add new parameters. function used inputs param.net long list fixed model parameters needed supplemental replacements additions particular model runs (e.g., changing intervention efficacy parameter leaving parameters fixed). new.param.list object named list object containing named parameters matching already x (case original parameter values replaced) matching (case new parameters added param).","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Model Parameters for Stochastic Network Models — update_params","text":"","code":"x <- param.net(inf.prob = 0.5, act.rate = 2) y <- list(inf.prob = 0.75, dx.rate = 0.2) z <- update_params(x, y) print(z) #> Fixed Parameters #> --------------------------- #> inf.prob = 0.75 #> act.rate = 2 #> dx.rate = 0.2"},{"path":"http://epimodel.github.io/EpiModel/reference/update_unique_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Unique Identifiers for New Nodes — update_unique_ids","title":"Create the Unique Identifiers for New Nodes — update_unique_ids","text":"function called append_core_attr appends new unique_ids created nodes. also keeps track already used unique_ids dat$run$last_unique_id variable.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_unique_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Unique Identifiers for New Nodes — update_unique_ids","text":"","code":"update_unique_ids(dat, n.new)"},{"path":"http://epimodel.github.io/EpiModel/reference/update_unique_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the Unique Identifiers for New Nodes — update_unique_ids","text":"dat Main netsim_dat object containing networkDynamic object initialization information passed netsim. n.new number new nodes give unique_ids .","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/update_unique_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the Unique Identifiers for New Nodes — update_unique_ids","text":"updated netsim_dat main list object.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/use_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a scenario object to a param.net object — use_scenario","title":"Apply a scenario object to a param.net object — use_scenario","text":"Apply scenario object param.net object","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/use_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a scenario object to a param.net object — use_scenario","text":"","code":"use_scenario(param, scenario)"},{"path":"http://epimodel.github.io/EpiModel/reference/use_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a scenario object to a param.net object — use_scenario","text":"param Object class param.net, output function name. scenario scenario object usually created data.frame scenarios using create_scenario_list function. See vignette \"network-model-scenarios\".","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/use_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a scenario object to a param.net object — use_scenario","text":"updated list object class param.net, can passed EpiModel function netsim.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/use_scenario.html","id":"scenario","dir":"Reference","previous_headings":"","what":"scenario","title":"Apply a scenario object to a param.net object — use_scenario","text":"scenario list containing \"id\" field, name scenario \".param.updater.list\" containing list updaters modifies parameters model given time steps. scenario contains parameter defined param object, error produced. See vignette \"model-parameters\" technical detail implementation.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/verbose.dcm.html","id":null,"dir":"Reference","previous_headings":"","what":"Progress Print Module for Deterministic Compartmental Models — verbose.dcm","title":"Progress Print Module for Deterministic Compartmental Models — verbose.dcm","text":"function prints progress deterministic compartmental models simulated dcm console.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/verbose.dcm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Print Module for Deterministic Compartmental Models — verbose.dcm","text":"","code":"verbose.dcm(x, type, s = 1)"},{"path":"http://epimodel.github.io/EpiModel/reference/verbose.dcm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Print Module for Deterministic Compartmental Models — verbose.dcm","text":"x type \"startup\", object class control.dcm, otherwise main df object dcm runs. type Progress type, either \"startup\" starting messages runs, \"progress\" time step specific messages. s Current run number, type \"progress\".","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/verbose.icm.html","id":null,"dir":"Reference","previous_headings":"","what":"Progress Print Module for Stochastic Individual Contact Models — verbose.icm","title":"Progress Print Module for Stochastic Individual Contact Models — verbose.icm","text":"function prints progress stochastic individual contact models simulated icm console.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/verbose.icm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Print Module for Stochastic Individual Contact Models — verbose.icm","text":"","code":"verbose.icm(x, type, s = 1, at = 2)"},{"path":"http://epimodel.github.io/EpiModel/reference/verbose.icm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Print Module for Stochastic Individual Contact Models — verbose.icm","text":"x type \"startup\", object class control.icm; otherwise, object class icm_dat, main data object icm simulations. type Progress type, either \"startup\" starting messages simulations, \"progress\" time step specific messages. s Current simulation number, type \"progress\". Current time step, type \"progress\".","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/verbose.net.html","id":null,"dir":"Reference","previous_headings":"","what":"Progress Print Module for Stochastic Network Models — verbose.net","title":"Progress Print Module for Stochastic Network Models — verbose.net","text":"function prints progress stochastic network models simulated netsim console.","code":""},{"path":"http://epimodel.github.io/EpiModel/reference/verbose.net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress Print Module for Stochastic Network Models — verbose.net","text":"","code":"verbose.net(x, type, s = 1, at = 2)"},{"path":"http://epimodel.github.io/EpiModel/reference/verbose.net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress Print Module for Stochastic Network Models — verbose.net","text":"x type \"startup\", object class control.net; otherwise, object class netsim_dat, main data object netsim simulations. type Progress type, either \"startup\" starting messages simulations, \"progress\" time step specific messages. s Current simulation number, type \"progress\". Current time step, type \"progress\".","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-2-5","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 2.5","text":"Export generic get_discordant_edgelist attribute used assess discordance well values group can specified. Export param.net_from_table param.net_to_table helper functions convert parameter list parameter data.frames used param.net. Allow saving cumulative edge-list end simulation using save.cumulative.edgelist control argument. Restarting simulation now requires saving dat$run. removes need keep track elements required end simulation. requires EpiModel user put elements dat$run. Export get_forward_reachable get_backward_reachable functions works similarly efficiently tsna::tPath multiple nodes using cumulative edgelists. Export overwrite_attrs, helper function overwrite attributes nodes data.frame start simulation. (see ?overwrite_attrs). .data.frame model classes netsim icm now assign epi.data.frame class addition data.frame. Add plot.epi.data.frame method plot epi.data.frame similar plot.netsim(type = \"epi\"). Export .epi.data.frame assign epi.data.frame class validate input data.frame correctly formatted.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-2-5","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 2.5","text":"Speed raw.records attr.history collections::queue instead base::list. Add save.diss.stats checked control values. Prevents undefined values using control.net wrappers. Move el.cuml, _last_unique_id, _last_timestep attr dat$run update tests; part restructuring dat object. Remove dat$epi$sim.num(.g2) replace dat$run$num(.g2) (single value). values keep track current size network needed model runs. Speed cumulative edge-list calculation splitting current historic edges. Remove deleteAttr function deprecated since EpiModel v2.4.0. function accepting posit_ids argument must now pass exclusively numeric vector. Logical vectors accepted anymore making code heavier error prone. ergm.ego now suggestion shorten dependency chain. needs installed separately use netest egor object.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-240","dir":"Changelog","previous_headings":"","what":"EpiModel 2.4.0","title":"EpiModel 2.4.0","text":"CRAN release: 2023-06-20","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-2-4-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 2.4.0","text":"Stochastic network models, simulated netsim, now support multi-layer networks. networks common common node set different edge set (e.g., home-based community-based contact layers). example implementation can found EpiModel Gallery. Add get_cumulative_degree function interface similar get_partners. function helps look cumulative degree time period (e.g., number partners past year) specified set nodes. Generic get_network set_network functions created consistent access network objects within netsim_dat class objects.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-2-4-0","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 2.4.0","text":"update_cumulative_edgelist now called unconditionally governed cumulative.edgelist control. Attempting access cumulative edgelist control.net setting cumulative.edgelist == FALSE causes error. netsim data objects now properly classed netsim_dat. icm data objects now properly classed icm_dat, consistent netsim objects. Update network simulation handling ergm objects address backwards incompatible data structures ergm package v4.5.0.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-232","dir":"Changelog","previous_headings":"","what":"EpiModel 2.3.2","title":"EpiModel 2.3.2","text":"CRAN release: 2023-02-16","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-2-3-2","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 2.3.2","text":"Estimation ergm.ego package estimation now supported. accomplished passing egor class object instead network class object nw argument netest. Added end.horizon control setting control.net. allows one remove set modules within network epidemic models given time step. end horizon needed cost-effectiveness analyses related models require tracking person time absence disease transmision. Added .traceback..error .dump.frames..error controls print traceback error even multicore settings dump.frames remote debugging.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-2-3-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 2.3.2","text":"Fixed error get_attr_history crash attribute history posit_ids argument integer(0). Changed internal behavior saveout.net: missing elements simulations now produce warning instead error. Additionally, elements passed save.present final object skipped silently instead producing error.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-2-3-2","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 2.3.2","text":"Removed functionality networkLite class (sparse network representations needed epidemic modeling) EpiModel placed package CRAN: https://CRAN.R-project.org/package=networkLite. cumulative.edgelist truncate.el.cuml controls get default values netsim_validate_control (FALSE 0). Better messages warnings sent trying access uncreated cumulative edgelist.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-231","dir":"Changelog","previous_headings":"","what":"EpiModel 2.3.1","title":"EpiModel 2.3.1","text":"CRAN release: 2022-10-01","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-2-3-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 2.3.1","text":"netdx now calculates additional summary statistics quantify variability within across simulations model diagnostics. See help page associated print function futher details: help(\"print.netdx\"). get_transmat adds deduplicate argument randomly select one transmitting act case multiple potential transmissions occur within time step newly infected person.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-2-3-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 2.3.1","text":"Fix get_sims properly subsetting el.cuml _last_unique_id. Fix parallel memory leak netsim. Rework network resimulation module allow working observed network data. See EpiModel Gallery Example. Fix error message tergmLite/resimulate.network collision","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-2-3-1","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 2.3.1","text":"tracker.net module removed optional extension module, functionality now default network models (built-extension models). See Working Attributes Summary Statistics Vignette details. Speed transmission matrix (transmat) storage using padded_vector instead repeated rbind calls. result get_transmat(netsim_object) unchanged. Use unflatten_params generate_random_params instead bespoke code. Standardize speed summary calculations plotting functionality netdx netsim objects. Streamline unit tests testing CRAN.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-230","dir":"Changelog","previous_headings":"","what":"EpiModel 2.3.0","title":"EpiModel 2.3.0","text":"CRAN release: 2022-07-19","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-2-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 2.3.0","text":"Network models can now use predefined scenarios use_scenario function. See Working Model Parameters vignette details. trim_netest function added reduce netest object sizes common use cases. networkLite class now supports additional functionalities. Duration = 1 time step models netsim tergmLite = FALSE now use tergm simulation produce networkDynamic class object, similar duration > 1 time step case. netdx now supports heterogeneous dissolution model diagnostics. See example help(\"netdx\"). plot.netsim now supports type = \"duration\",\"dissolution\" homogeneous (“edges-”) dissolution models. Network model parameters can now supplied param.net via data.frame. See Working Model Parameters vignette details. new term fuzzynodematch added, support modeling generalized notions homophily. Network models can now checkpointed automate saving, recovering, restarting simulations interruption, might occur large-scale simulation jobs high-performance computing (HPC) systems. See help(\"control.net).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-2-3-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 2.3.0","text":"EpiModel’s custom terms absdiffby absdiffnodemix now usable (due enabling symbol search). correct formula now used sim_nets_t1 initializing network non-nested edges dissolution approximation approach netest. References network class internals removed net.utils.R make code function properly networkLites. update_dissolution now correctly handles duration 1 models. get_edgelists get_cumulative_edgelists now throw informative errors network refers non-existing networks. get_partners get_cumulative_edgelists_df throw errors well call functions internally. fix double memory allocation netsim ncores > 1","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-2-3-0","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 2.3.0","text":"updater.net module removed optional module functionalities now default behavior network models (built-custom). parameters param.updater.list control.updater.list param.net control.net respectively renamed .param.updater.list .control.updater.list. leading dot indicates built-EpiModel elements confused user-defined ones. Dissolution models using nodefactor term deprecated. stergm controls deprecated favor tergm controls. Formula-style simulations used consistently ergm tergm simulation, requiring control arguments class control.simulate.formula control.simulate.formula.tergm. ndtv added “Suggests” () plot.transmat now accepts transmissionTimeline style argument (). Systematic review improvement documentation across package. netest netdx now default control arguments following R’s default argument mechanism. Simulation names now attached netsim object fields produced via save.mechanism. Imputed durational corrections onset-censored edges now sampled geometric distribution rather simply using mean distribution.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-221","dir":"Changelog","previous_headings":"","what":"EpiModel 2.2.1","title":"EpiModel 2.2.1","text":"CRAN release: 2022-02-02","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-2-2-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 2.2.1","text":"Improved optional module updater.net allowing update model controls well parameters. See vignette, “Working model parameters.” General updates names content included vignettes.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-2-2-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 2.2.1","text":"Fix dissolution model statistics calculations netsim case model “end horizon” (network resimulated end time series). Fix duplicate printing issues across print.netsim, print.param.net, print.control.net. Fix use .equal unit tests requested CRAN. Change defaults newly introduced cumulative edgelist functionality store (improves speed). Allow set_attr posit_ids return unchanged dat object.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-2-2-1","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 2.2.1","text":"changed names arguments function get_partners newly introduced EpiModel v2.2.0: max.age renamed truncate consistency cumulative edgelist functions; .active renamed .active.nodes clarify argument subsets nodes partnerships.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-220","dir":"Changelog","previous_headings":"","what":"EpiModel 2.2.0","title":"EpiModel 2.2.0","text":"CRAN release: 2021-11-09","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-2-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 2.2.0","text":"Developed general approach tracking querying historical contacts, called cumulative edgelist. may used, example, query recent non-current contacts newly infected nodes. See vignette, “Working network objects”. create_dat_object helper function added standardize creation core dat object within initialize.net. current timestep within netsim simulations now stored dat object accessible get_current_timestep. eliminates need explicitly pass function argument, although still allowed. Addition get_param_set function extracts netsim object set parameters used simulation. See help page: help(\"get_param_set\"). Developed mechanism store nodal attribute history course netsim simulation. See vignette, “Working attributes summary statistics.” Developed optional module define prevalence statistics (also called “epi stats”) functions passed model control settings netsim simulation. allows users avoid updating prevalence.net module. See vignette, “Working attributes summary statistics.” Developed optional module allowing update model controls parameters timesteps within netsim simulations (.e., time-varying parameters). See vignette, “Working model parameters.” Improved random parameterization programming interface allow correlation parameters simulation (e.g., ability pass multivariate parameter set simulation). See vignette, “Working model parameters.”","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-2-2-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 2.2.0","text":"calling plot netsim object, arguments ellipsis (...) now correctly passed base::plot call. trying use built-group attribute, netsim now output explicit error values used 1 2. Fixed names target formation statistics netdx edapprox == FALSE causing plotting functions misbehave. Simplification set_transmat function removing assumption dat$stats$transmat exist != 2 (thanks @thednainus). consistent formation dissolution statistics print netdx netsim. Removed duplication printing parameters parameter defined fixed random. using custom netsim modules type == NULL, built-modules longer stop required type string. Fixed issue Error, Warning Message netsim printing twice. Fixed problem unique ID counter saved saveout.net, resulting unique ids start 1 restarting model previous simulation.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-2-2-0","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 2.2.0","text":"new home EpiModel Github : https://github.com/EpiModel/EpiModel. previously located statnet organization Github.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-210","dir":"Changelog","previous_headings":"","what":"EpiModel 2.1.0","title":"EpiModel 2.1.0","text":"CRAN release: 2021-06-25","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-2-1-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 2.1.0","text":"Summary network statistics netsim class objects (epidemic simulations) now available tergmLite used. Previously network statistics available tergmLite = FALSE updates networkLite class tergmLite made possible. network stats output save.nwstats nwstats.formula arguments control.net. Developed general storage printing mechanism recently developed random parameterization interface. See help page help(\"param.net\"). Cleaned handling initial network simulation initialize.net, user-facing code function readable, complex code put sim_nets_t1.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-2-1-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 2.1.0","text":"Addressed errors handling cross-sectional network simulations embedded within dynamic epidemic model (e.g., contacts last length one time step, specified duration = 1 dissolution_coefs).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-205","dir":"Changelog","previous_headings":"","what":"EpiModel 2.0.5","title":"EpiModel 2.0.5","text":"CRAN release: 2021-05-15 Minor updates CRAN submission.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-2-0-4","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 2.0.4","text":"Added new update_params function add new parameters existing list network parameters specified param.net. aids workflows distinguish fixed parameters versus varying parameters may change across scenarios simulations. Added new general interface random parameters network models allows randomly drawing parameter value specified statistical distribution, distribution may either sampling discrete values factory function R’s random statistical distribution functions. See help file generate_random_params examples. Implemented standardized approach helper functions setting core attributes (nodal attributes present workflows) network models. functionality specified append_core_attr function initialization arrival modules extension models. includes standardized implementation persistent, unique IDs attribute remains constant nodes even open population models.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-2-0-4","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 2.0.4","text":"use standardized core attribute framework now correctly handles unique IDs models, now transmission matrix objects output network model work consistently correctly closed population open population models. DCM models dt < 1, fix NA output .flow variables. Reduce complexity unit tests stochastically generating errors due ERGM MCMC estimation problems. Fix problem temporally extended status variables network models (.e., tracking disease status history across time steps) simplifying general approach works across built-extension model types.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-2-0-4","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 2.0.4","text":"Reimplemented handling relational age diagnostics netdx, updated numerical summaries print.netdx visuals plot.netdx. relational ages left-censored edges existed time zero, led misleading diagnostic ages lower targeted durations. Imputation start time edges added, option plot.netdx visualize imputed start times (default = TRUE) . consistent approach trimming unneeded environmental data ERGM objects implemented statnet.common::trim_env(), used netest. Reimplemented netest “edges dissolution approximation” efficient estimation temporal ERGM via cross-sectional ERGM estimation adjustment formation model coefficients (see netest help page). new approach reduces bias approximation method, plus now allows non-nested dissolution models (.e., dissolution formula need subset formation formula).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-203","dir":"Changelog","previous_headings":"","what":"EpiModel 2.0.3","title":"EpiModel 2.0.3","text":"CRAN release: 2020-11-09","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-2-0-3","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 2.0.3","text":"Implemented error catching approach netsim epidemic modules errors warnings clearly identified console. Allow saving transmission matrix save.transmat control.net independently using tergmLite methods (previously use tergmLite allow saving data). Added infstat parameter internal discord_edgelist function used infection module, allow arbitrary specification disease statuses considered infectious purpose dyad discordance. Added ability vary node size plot.netsim type = 'network' vertex.cex parameter.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-2-0-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 2.0.3","text":"Fix issue plot.netdx plot legend set FALSE. Updated print.netsim error displaying new epidemic modules extension models. Use appropriate tergmLite resimulation methods netsim networks duration 1 (.e., one-time contacts handled cross-sectional ERGMs).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-2-0-3","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 2.0.3","text":"minor edits/updates EpiModel 2.0 migration documentation (posted https://www.epimodel.org/).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-202","dir":"Changelog","previous_headings":"","what":"EpiModel 2.0.2","title":"EpiModel 2.0.2","text":"CRAN release: 2020-08-05 Minor updates CRAN submission.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-201","dir":"Changelog","previous_headings":"","what":"EpiModel 2.0.1","title":"EpiModel 2.0.1","text":"Minor updates CRAN submission.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-200","dir":"Changelog","previous_headings":"","what":"EpiModel 2.0.0","title":"EpiModel 2.0.0","text":"release introduces major update EpiModel package infrastructure application programming interface built-models (primarily used teaching purposes) extension models (primarily used research purposes). major substantive changes summarized EpiModel 1.x EpiModel 2.0 migration guide primary website: https://www.epimodel.org/.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-180","dir":"Changelog","previous_headings":"","what":"EpiModel 1.8.0","title":"EpiModel 1.8.0","text":"CRAN release: 2020-05-08","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-8-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.8.0","text":"Improve error handling inputs dissolution_coefs. Skip dissolution diagnostics netdx static ERGM passed.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"note-1-8-0","dir":"Changelog","previous_headings":"","what":"NOTE","title":"EpiModel 1.8.0","text":"last version EpiModel 1.0 major revisions package infrastructure API released EpiModel 2.0.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-175","dir":"Changelog","previous_headings":"","what":"EpiModel 1.7.5","title":"EpiModel 1.7.5","text":"CRAN release: 2020-01-07","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-7-5","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.7.5","text":"Add foundation updates support tergmLite package (released). Print network statistic diagnostics stored netsim object print.netsim(x, formation.stats = TRUE).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-7-5","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.7.5","text":"Fix issue plot.netsim default colors number variables exceeds 3.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-7-5","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.7.5","text":"Add example differential homophily TERGM dissolution model dissolution_coefs documentation.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-173","dir":"Changelog","previous_headings":"","what":"EpiModel 1.7.3","title":"EpiModel 1.7.3","text":"CRAN release: 2019-08-29","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-7-3","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.7.3","text":"Add skip.dissolution argument netdx skip dissolution diagnostics computational efficiency.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-7-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.7.3","text":"Fixes output formatting network stats saved netsim runs. Correctly errors running dynamic network diagnostics netdx cross-sectional ergm. Remove old unused utility functions. Enforce depend ergm >= 3.10 package.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-172","dir":"Changelog","previous_headings":"","what":"EpiModel 1.7.2","title":"EpiModel 1.7.2","text":"CRAN release: 2018-12-18","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-7-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.7.2","text":"Fix logical evaluations get_sims unit tests plot.transmat found CRAN submission v1.7.1.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-7-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.7.1","text":"Two helper functions, get_args apportion_lr, ported EpiModelHIV. Two custom ERGM terms, absdiffby absdiffnodemix, ported EpiModelHIV.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-7-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.7.1","text":"Fix linked functions embedded Shiny apps broken v1.7.0. Update handling parameter module name changes related births/deaths arrivals/departures renames v1.7.0. Reduce complexity verbose output can generalize across EpiModel extension packages. Fix bug .data.frame.dcm dt control setting < 1.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-170","dir":"Changelog","previous_headings":"","what":"EpiModel 1.7.0","title":"EpiModel 1.7.0","text":"CRAN release: 2018-11-21","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-7-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.7.0","text":"Add keep.tnetwork parameter netdx allow retaining full networkDynamic object dynamic network simulations. Relatedly, add support get_network extract networks netdx objects. Change default handling .data.frame function processing model output three model classes (DCM, ICM, Network Models) generate stacked data frame simulations (instead row means across simulations). breaking change may require updating old code. New .data.frame.netdx function extracts timed edgelists directly netdx object. get_nwstats function now extracts data frames network statistics netdx netsim objects.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-7-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.7.0","text":"Improve functionality error handling get_sims. Fix problems color handling network statistics plots plot.netdx plot.netsim. Enforce maximum number ncores argument netdx prevent parallelization simulations. Removed redundant storage timed edgelist data netdx objects. Fix errors calculation population sizes verbose module prints simulation output console.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-7-0","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.7.0","text":"Add warning input parameter name act.rate.m2 network models param.net, unused parameter built-models. Updated parameters documentation throughout EpiModel vital dynamics parameters processes reflect general method demographic -flows -flows population. Previous terms births deaths; new terms arrivals departures. default parameter births previously b.rate; now .rate. Inputs b.rate parameter yield message automatically set .rate b.rate value. breaking change may require updating old code. Adapted y-axis limit calculation stochastic plots depend dynamic range data displayed instead full data range. Changed default plot type static diagnostics netdx (dynamic set FALSE) smoothed rolling averages instead full MCMC trace. trace plots may turned back sim.lines = TRUE.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-165","dir":"Changelog","previous_headings":"","what":"EpiModel 1.6.5","title":"EpiModel 1.6.5","text":"CRAN release: 2018-04-10","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-6-5","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.6.5","text":"netdx now includes new argument, sequential, static diagnostics mirrors argument ergm::simulate.ergm simulate MCMC chains based previous draws versus new draws.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-6-5","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.6.5","text":"Fix mutate_epi output new variable constant.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-6-5","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.6.5","text":"Move ggplot2 depend import. References added publication Journal Statistical Software methods paper EpiModel: Jenness SM, Goodreau SM, Morris M. EpiModel: R Package Mathematical Modeling Infectious Disease Networks. Journal Statistical Software. 2018; 84(8): 1-47. DOI: 10.18637/jss.v084.i08.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-161","dir":"Changelog","previous_headings":"","what":"EpiModel 1.6.1","title":"EpiModel 1.6.1","text":"CRAN release: 2018-01-25","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-6-1","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.6.1","text":"Fixed minor issue unit tests using identical function causing fail alternative BLAS/LAPACK implementations.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-160","dir":"Changelog","previous_headings":"","what":"EpiModel 1.6.0","title":"EpiModel 1.6.0","text":"CRAN release: 2018-01-24","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-6-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.6.0","text":".data.frame methods netsim icm classes now allow creation single data frame epidemic outcomes across multiple simulations, previous single individual simulations output. specified sim = \"\" parameter = \"vals\". See help page examples. “tidy” data format allows easier integration external plotting analysis approaches, including ggplot2. geom_bands new “geom” use ggplot2 facilitate plotting simulation intervals given specified lower upper quantile set. Examples plotting ICM simulations provided, principle applies network models. result , ggplot2 added depend. truncate_sims new utility function takes truncates time series netsim icm class object specified time step. truncation remove epidemic output time step, reset control settings start time step. useful modeling workflows need remove pre-intervention burnin period model simulations. init.net allows pass vector backwards-looking infection times initally infected t_1 infTime.vector parameter. Combined status.vector parameter, provides users maximal control infected long initial conditions.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-6-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.6.0","text":"Fixed bug DCM Shiny app related plotting prevalence vs count outcomes. Removed unneeded unused input parameters discord_edgelist function. Fixed issue SIS/SIR models vital dynamics, low mortality rate relative recovery rate (typical) get long initial infection times assigned t_1.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-6-0","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.6.0","text":"Changed title (actually, ’s subtitle) DESCRIPTION : “Mathematical Modeling Infectious Disease Dynamics”. Deprecated status.rand argument init.net init.icm allowed users specify random number initially infected. Support got complex little (never) used argument, users interested randomly setting initial number infected may control flexibly status.vector parameter.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-150","dir":"Changelog","previous_headings":"","what":"EpiModel 1.5.0","title":"EpiModel 1.5.0","text":"CRAN release: 2017-06-01","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-5-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.5.0","text":"Add grid argument plot functions overlay grid line plots.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-5-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.5.0","text":"Fix bug plot.netdx examples help file.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-5-0","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.5.0","text":"Reset verbose default network models TRUE (reverts change v1.3.0 specifically network models). Rename leg argument name (add default legends plots) legend. Note backwards-incompatible fuzzy matching function arguments starting leg; prior model code must updated. Change default transparency level 0.5 (unspecified).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-130","dir":"Changelog","previous_headings":"","what":"EpiModel 1.3.0","title":"EpiModel 1.3.0","text":"CRAN release: 2017-03-13","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.3.0","text":"control.dcm, nsteps may now vector time steps , , integer containing number time steps within DCM simulation. example, control.dcm(..., nsteps = seq(1980, 2015, 1/12), ...) solve monthly outputs range dates 1980 2015. mutate_epi adding new variables epidemic simulation object now works three model classes.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-3-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.3.0","text":"Outputs param, init, control functions now dual-classed lists well native classes. passing new.mod control.dcm, printing control.dcm object longer yields warning instead prints function name.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-3-0","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.3.0","text":"Update handling transparent colors within transco use base adjustcolor function. Derivatives tracking “flow” size transition compartments DCM simulations (e.g., disease incidence) often output NA final value, creating issues analyzing data. NAs replaced penultimate value vector. Simplify printing dcm, icm, netsim objects list “Variables” together instead dividing compartments, flows, . Change popfrac default plotting dcm, icm, netsim objects FALSE. avoids problems prevalences already stored within model simulation. Change verbose default control functions FALSE.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-128","dir":"Changelog","previous_headings":"","what":"EpiModel 1.2.8","title":"EpiModel 1.2.8","text":"CRAN release: 2016-12-16","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-2-8","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.2.8","text":"Print simulation number prevalence value static network plots print.netsim sims mean, min, `max.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-2-8","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.2.8","text":"Add new line end print.coefdiss output. Tighten default ylim ranges plot.netsim","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-2-8","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.2.8","text":"Include error check duration < 1 dissolution_coefs. Update documentation number places.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-127","dir":"Changelog","previous_headings":"","what":"EpiModel 1.2.7","title":"EpiModel 1.2.7","text":"CRAN release: 2016-07-30","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-2-7","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.2.7","text":"Add new mutate_epi function inspired dplyr package, add post-hoc summary statistic calculations completed network simulations. See function help file examples. Added speedy get_degree function returns vector current network degree person network.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-2-7","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.2.7","text":"Updated internal plot functions calculate prevalences. Disable verbose output running network models parallel.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-2-7","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.2.7","text":"Allow network simulations 1 time step (mainly used debugging testing).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-126","dir":"Changelog","previous_headings":"","what":"EpiModel 1.2.6","title":"EpiModel 1.2.6","text":"CRAN release: 2016-05-24","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-2-6","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.2.6","text":"Updates .phylo.transmat fix issues vertex exit times now accept multiple seed vertices multiple seeds detected, returning list phylo objects class multiPhylo following convention ape::read.tree.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-2-6","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.2.6","text":"Corrected error governing birth rate 2-group, open-population deterministic compartmental models (DCMs).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-2-6","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.2.6","text":"Updated license GPL-3.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-125","dir":"Changelog","previous_headings":"","what":"EpiModel 1.2.5","title":"EpiModel 1.2.5","text":"CRAN release: 2016-03-09","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-2-5","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.2.5","text":"Added multicore functionality simulating stochastic network models netsim. supports single-node frameworks currently, using doParallel package. Run models parallel using ncores parameter control.net. Modifications .phylo.transmat function construct phylo tree network vertices phylo-tips transmissions phylo nodes.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-2-5","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.2.5","text":"General code cleanup improvement package tests increase coverage 90%.","code":""},{"path":[]},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-2-3","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.2.3","text":"stochastic network model Shiny application now features adaptive concurrency levels ERGMs including network statistic.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-2-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.2.3","text":"plot.netsim now correctly functions diagnostic plots (type = \"formation\") summary statistics contain variable names numeric values suffixes. Avoided duplicate reinitialization persistent IDs network models started full STERGM fit (edapprox = FALSE netest function). Fixed error stochastic network model simulations netest models fit full STERGM method. Automatically set depend parameter TRUE control.net user passes new birth death modules.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-122","dir":"Changelog","previous_headings":"","what":"EpiModel 1.2.2","title":"EpiModel 1.2.2","text":"CRAN release: 2015-11-03","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-2-2","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.2.2","text":"New translation plotting functions temporal transmission chains measured stochastic network models. include dendogram using methods ape package transmission timeline ndtv package. See help files .phylo.transmat plot.transmat functions. Added Shiny application stochastic network models. may accessed within package epiweb(class = \"net\"). also hosted online shinyapps. get_sims function used extract individual simulations larger netsim objects. function updated include var argument allows automatic calculation simulation closest mean across simulations extraction. Added quantile extraction method .data.frame method icm netsim classes. provide data frame output corresponding defined quantiles across simulations contained within model object.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-2-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.2.2","text":"Supress warnings lowess smoother plot.netsim cases NA values epidemiological output. Removed error check control.net type missing, automatically sets type \"SI\". impact extensions EpiModel case default transmission module replaced. Fixed bug netdx calculating summary statistics models multiple structural zeros target statistics.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-2-2","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.2.2","text":"Changed default status.rand, controls whether number initially infected stochastic epidemic models, FALSE. ensure exactly number specified init.icm init.net matched simulation. Fully removed netsim_parallel function package. See EpiModelHPC extension package https://github.com/EpiModel/EpiModelHPC running network simulations parallel.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-121","dir":"Changelog","previous_headings":"","what":"EpiModel 1.2.1","title":"EpiModel 1.2.1","text":"CRAN release: 2015-07-24","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-2-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.2.1","text":"check_bip_degdist now uses tolerant checks equality comparing bipartite mode statistics. Fixes formatting issue output DCMs run dcm function. Fixes variable name collision problem epidemic plotting functions. Removes long burn-ins network model estimation netest improve performance fitting models. stochastic network models, one may now remove built-modules, births.FUN, dynamic workflow setting argument value module NULL control.net inputs.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-120","dir":"Changelog","previous_headings":"","what":"EpiModel 1.2.0","title":"EpiModel 1.2.0","text":"CRAN release: 2015-07-08","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.2.0","text":"calc_eql function now returns test statistics invisibly. Major overhaul plotting functions stochastic model plots. plot.netsim now separate method epidemic plots (previously function call plot.icm), function arguments default settings consistent across plotting functions. may minor backwards incompatibility epidemic plots. Network statistic plots plot.netdx plot.netsim now use methods share defaults. defaults plots plot smoothed quantile bands (IQR) means simulations without individual simulation lines. individual elements may toggled . Modules now listed output param.icm param.net classes. Removed dissolution argument netest. argument specified right- hand sided dissolution formula temporal ERGMs. removed formula already specified dissolution_coefs function, output passed netest, thereby removing duplication.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.2.0","text":".data.frame methods stochastic models remove NA individual simulations calculating row means. Fixed bug network birth module assigning infection status incoming nodes. verbose parameter netest now correctly controls model fitting output level underlying ergm stergm functions. merge.netsim now correctly checks elements two objects merged classes elements may length greater 1.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-2-0","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.2.0","text":"Major updated internal package function testing reliable performance. Added ... argument epiweb pass additional arguments shiny::runApp. Importing graphics, grDevices, stats, utils packages required CRAN.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-116","dir":"Changelog","previous_headings":"","what":"EpiModel 1.1.6","title":"EpiModel 1.1.6","text":"CRAN release: 2015-05-16","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-1-6","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.1.6","text":"Built-parallelization stochastic network model simulations directly within package netsim_parallel function deprecated. functionality replaced model simulation functions within EpiModelHPC extension package: https://github.com/EpiModel/EpiModelHPC Cosmetic functional updates built-Shiny applications accessible within package via epiweb. New function, calc_eql, calculates whether model class EpiModel reached equilibrium state defined time series. Equilibrium defined absolute value difference maximum prevalence minimum prevalence specified time series falling specified threshold. stochastic models, values calcualted based mean individual time series simulations. netest now includes new argument, nonconv.error, send function error state ERGM coverge specified number interations. default allow nonconverged model fit returned. Requiring error may helpful running number models batch mode.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-1-6","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.1.6","text":"Within built-deterministic compartmental models solved dcm function, error calculation flows (e.g., disease incidence number deaths per unit time) models integrated methods “Euler” solution. Flows now calculated correctly numerical integration methods supported via deSolve package. Minor bugs default deaths module stochastic network models corrected.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-1-6","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.1.6","text":"netest now check ensure formation dissolution models allignment (terms specified order) dissolution model proper forms (see v1.1.4 notes).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-114","dir":"Changelog","previous_headings":"","what":"EpiModel 1.1.4","title":"EpiModel 1.1.4","text":"CRAN release: 2015-04-12","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-1-4","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.1.4","text":"limited set heterogeneous dissolution models now allowed network models (#184): edges + nodematch, nodemix, nodefactor formulas now supported. See help file dissolution_coefs examples. Network models now feature consistent flexible use persistent IDs networkDynamic objects (#199). involved adding new control setting, use.pids control.net. See help(“persistent.ids”) networkDynamic package background. Interventions added model classes (#20). DCMs, ICMs, network models, new parameters, inter.eff inter.start, efficacy starting time intervention. generic intervention effect reducing probability transmission given contact susceptible infected person efficacy parameter.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-1-4","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.1.4","text":"Fixed error births.net module set default entrTime exitTime attributes twice bipartite models (#205). Plotting model classes now allow setting xlab ylab (#206). get_sims extraction now outputs correct data object contains single simulation.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-1-4","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.1.4","text":"robust testing functions. Updated hyperlinks within doc files new github-based website.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-113","dir":"Changelog","previous_headings":"","what":"EpiModel 1.1.3","title":"EpiModel 1.1.3","text":"CRAN release: 2015-01-18","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-1-3","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.1.3","text":"skip.check argument control.net even flexible, allow passing different class elements netsim original models. New param.error argument merge.netsim allows bypassing stop error parameters control settings two merged objects identical. control.net new module.order argument provide control order modules evaluated within time step. default ordering maintained explained updated help file.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-1-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.1.3","text":"netsim_parallel now returns correct object used single simulations single cores. plot.icm removes NA values data calculating ylim quantile bands.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-1-3","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.1.3","text":"netest now implements improved “Edges Dissolution Approximation” via edapprox argument. Several documentation updates.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-112","dir":"Changelog","previous_headings":"","what":"EpiModel 1.1.2","title":"EpiModel 1.1.2","text":"CRAN release: 2014-12-01","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-1-2","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.1.2","text":"Implement control.dcm option dede, true allows delayed differential equations passed new model solved dcm. New option netdx simulate static diagnostics ERGM, rather temporal diagnostics (still default). help better diagnose poor dynamic model fit using edges dissolution approximation (#175). Plot option added netdx, method parameter, plot boxplots simulations target statistics. default still line plots (#191). Additional summary elements may now plotted netdx objects, similar epidemic data plots: mean lines quantile bands. Additional arguments added allow toggling along individual simulation lines target lines. Print method netdx updated, along new statistic percent deviation simulation means target statistics (#192). Added epidemiological outcomes saved user-defined modules print output print.netsim (#183). New function get_sims subset extract entire simulations netsim objects multiple simulations. vector simulation numbers may specified, set “mean”, simulation infected prevalence closest means across simulations chosen.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-1-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.1.2","text":"Object elements saved stochastic network models save.parameter control.net may now merged merge.netsim (#185). Quantile band displayed plot ICMs network models y argument specified (#188).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-1-2","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.1.2","text":"Package deSolve moved import depend (#194).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-111","dir":"Changelog","previous_headings":"","what":"EpiModel 1.1.1","title":"EpiModel 1.1.1","text":"CRAN release: 2014-11-02","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-1-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.1.1","text":"Added dissolution diagnostics netdx, proportion edges dissolve per time step, another diagnostic dissolution model (#53). Network plots plot.netsim now allow specifying \"mean\", \"min\", \"max\" plot network average, maximum, minumum disease prevalence specified time step (#73). Network models may now use time-varying recovery rates, similar previous time-varying infection probabilities act rates. documentation param.net function updated details (#65). New control setting DCMs, param.sens, allows bypassing default behavior evaluating parameters length greater 1 sensitivity analyses. used single-run models passing parameters arbitrary form.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-1-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.1.1","text":"Print functions initial condition processing functions now handle list data frame structures (#135). Fix bug new DCMs initial condition names include standard integrated initial condition names (#160). Several bugs fixes related network diagnostics models offset terms formation model. Also related formation diagnostics plots plot.netsim fixed (#164). Initialization infection time stochastic SIS/SIR models two groups modes now fixed (#102). Edges population size correction module, edges_correct, now runs dependent network simulations, just built-vital dynamics modules called (#141).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-1-1","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.1.1","text":"new website EpiModel project https://www.epimodel.org/ Added new example SEIR Ebola DCM “Solving New DCMs EpiModel” tutorial. shiny apps now use single file method (#155). Exported added documentation verbose.icm function (#71). elements saved network simulations save.control setting control.net now printed output print.netsim (#174).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-11","dir":"Changelog","previous_headings":"","what":"EpiModel 1.1","title":"EpiModel 1.1","text":"CRAN release: 2014-10-01","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.1","text":"Added three new extraction functions network models (get_network, get_transmat, get_nwstats) extract network objects, transmission matrices, data frame network statistics completed netsim simulation. functions also support extraction network model simulations multiple networks (see API note). plot function netsim objects now argument, network, plotting network statistics static networks (type = \"formation\" \"network\", respectively) simulations multiple networks. stochastic epidemic plots, added option mean.smooth. TRUE, uses lowess smoother outcome variables interest. helpful visualization low-count outcomes like disease incidence. Automatic parallelization network models now possible netsim_parallel function. Note experimental tested extensively across platforms, bug reports welcome. Two parallel methods supported: doParallel multiple cores single node, doMPI multiple cores across multiple nodes. latter requires MPI installation linux-based cluster. Network diagnostics netdx also accepts new ncores argument, run diagnostic simulations calculations simulations parallel specified number cores (single node ). Added argument, skip.check, control settings ICM network model classes, overrides default error checking parameters, initial conditions, control settings. used original models new modules may unnecessarily trigger check error. Added argument, save., control settings network models, character vector elements main data list, dat, save simulation. Added argument, start, control settings network models, starting time step resume simulations. case, x argument netsim previously saved netsim object rather netest object. start argument one integer higher nsteps earlier netsim object. nsteps argument now final steps simulation. Note requires specifying save.= \"attr\" control settings, well saving networks. Added progress bars netdx diagnostic simulations computationally intensive parts simulations. Network model estimation netest now provides output argument. using edges dissolution approximation (edapprox = TRUE), one may set output \"sim\" save static simulation network instead ergm object element netest output. mainly file size efficiency.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"user-interface-changes-1-1","dir":"Changelog","previous_headings":"","what":"USER INTERFACE CHANGES","title":"EpiModel 1.1","text":"internal representation disease status individual-level attribute stochastic ICM network models changed number (0, 1, 2) character (\"s\", \"\", \"r\"). changes little running integrated models, greater implications API editing modules. one change integrated models status vector passed initial conditions functions must now new format. also impacts expansion EpiModel original models. zeromarg argument removed plot.netsim static network plots (type = \"network\") reduce potential issues setting default margins plots. Now must explicitly set standard par options.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"api-changes-1-1","dir":"Changelog","previous_headings":"","what":"API CHANGES","title":"EpiModel 1.1","text":"ICMs network models, internal main data object renamed dat prevent function name conflicts. Additionally, summary output now stored within dat$epi, whereas previous location $. ordering built-modules within time step network simulations changed network resimulation module run infection module. substantive differences model results, provides logical consistency edges toggled time step infections may occur edges. network models, two preset functions changed replaceable modules: edges_correct verbose.net. former performs adjustment edges coefficient network models population size changes, order preserve mean degree; mass action epidemic models, example, one want adjustment, module set NULL control.net. latter performs printing simulation results console. functions now listed modules help file accessed : help(modules.net). Evaluation parameters, initial conditions, control settings core parameterization functions now stable, also flexible. Defaults fixed arguments now included documentation. Users may now bypass built-param, init, control functions altogether original ICM network models, definition new replacement modules occurs within control functions . existing control functions used template one considering replacing parameterization functions. Users may also bypass built-modules network models (see list control.net) setting argument module NULL. may replaced future user-defined ordered vector modules. x argument netsim may now list netest objects. used supplying new simulation modules know process data structure. motivation allow original models multiple networks simulated (e.g., main partnership network casual partnership network).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.1","text":"Minor updates bug fixes two built-Shiny applications (accessed via epiweb function). apps now benefit stable parameterization functions. Updated print method param.net class handle parameters lists data frames. merge.netsim now ignores differences environment nwstats.formula control, previously preventing proper merging network model simulations.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-1","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.1","text":"Added new test cases running new DCMs, ICMs, network models, following vignette examples (see https://www.epimodel.org/).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-102","dir":"Changelog","previous_headings":"","what":"EpiModel 1.0.2","title":"EpiModel 1.0.2","text":"CRAN release: 2014-08-30","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"interface-changes-1-0-2","dir":"Changelog","previous_headings":"","what":"INTERFACE CHANGES","title":"EpiModel 1.0.2","text":"trans.rate trans.rate.g2/m2 parameters renamed inf.prob inf.prob.g2/m2 better characterize probabilities, rather rates, towards infection persons group/mode. Added new documentation newly exported utility functions network models, mostly used birth/entry modules. Now users may directly edit modules use utility functions without explicitly adding global environment. Added warning message network models vertex attribute status added network referenced formation formula, case initial conditions status still derived input init.net. apply “serosorting models”, reference status formation formula, require setting status vertex attribute network calling netest.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-0-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.0.2","text":"Network models passed network attributes formation formula open populations now generate error persistent ID numbers latest versions tergm networkDynamic package. Fix bug printing simulation progress network ICM class models verbose specified control settings. Running netdx diagnostics offset terms formation longer generates error. Simulating SIR serosorting network epidemic model (status formation formula) longer stops due missing r.num init.net. Fix bug calling netdx one simulation network model fit full STERGM method (.e., using edapprox = FALSE netest).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-0-2","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.0.2","text":"dissolution_coefs function now stores prints death/exit rate. Removed explicit parameters xlim, ylim, main plot.dcm plot.icm functions, although still may passed … argument. Introduction vignette updated list new EpiModel website.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-101","dir":"Changelog","previous_headings":"","what":"EpiModel 1.0.1","title":"EpiModel 1.0.1","text":"CRAN release: 2014-07-29","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"new-features-1-0-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"EpiModel 1.0.1","text":"Added coef.form argument netest network model formation formulas offset terms. Allow edge duration 1 netest using edges dissolution approximation (handles one-partnerships network models using approximation). Death modules network models now contained one function, deaths.net, facilitate replacement death modules users. also now consistent death module ICMs. Automated plotting target statistic lines plot.netsim formation plots, matching methods plot.netdx formation plots.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"bug-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"EpiModel 1.0.1","text":"netdx now simulates different starting network begining dynamic simulation, eliminating correlation time 1 across simulations. Can now pass status.vector init.net bipartite simulations. Several plotting printing bugs fixed. Fixed bug network models open populations attribute passed network formation formula (e.g., serostatus mixing models).","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"other-1-0-1","dir":"Changelog","previous_headings":"","what":"OTHER","title":"EpiModel 1.0.1","text":"Added internal test structure build checking. Added help file document building ICM modules ?modules.icm. Expanded clarified tutorial documentation, available : https://www.epimodel.org/","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-10","dir":"Changelog","previous_headings":"","what":"EpiModel 1.0","title":"EpiModel 1.0","text":"CRAN release: 2014-06-09 Model parameterization model classes substantially revised improve organization ability expansion. Whereas previous models required input parameters directly main functions (now: dcm, icm, netsim), now parameters input three parameter-processing functions: param, init, control. param function sets core epidemic parameters, init function sets initial conditions, control function specifies model settings. functions class-specific, function .dcm, .icm, .net suffix. Modeling functions renamed clarity consistency: dcm now used deterministic compartmental models (replaces epiDCM) icm now used stochastic individual contact models (replaces epiICM) netest now used network model estimation (replaces epiNet.est) netsim now used network model simulation (replaces epiNet.simTrans) Network models independence epidemic/demographic processes network structures (independent models) previously first simulated epiNet.simNet, pre-simulated networks input epiNet.simTrans. Now network model simulation handled within simulation function, netsim. Network model diagnostics moved within network estimation process (netest) function: netdx. parameter names running, printing, plotting results diagnostics updated consistency. See ?netdx related functions. Internal model functions significantly revised improve efficiency. dcm function can handle model functions, parameter sets, initial conditions arbitrary complexity. See HTML vignette topic : https://www.epimodel.org/ Moved package vignettes external package reduce package size build time.","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"epimodel-095","dir":"Changelog","previous_headings":"","what":"EpiModel 0.95","title":"EpiModel 0.95","text":"CRAN release: 2014-01-23","code":""},{"path":"http://epimodel.github.io/EpiModel/news/index.html","id":"initial-release-0-95","dir":"Changelog","previous_headings":"","what":"INITIAL RELEASE","title":"EpiModel 0.95","text":"EpiModel package provides functions building, solving, plotting mathematical models infectious disease. See main package help function ?EpiModel-package, EpiModel tutorials online.","code":""}]
