% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/netest.R
\name{netest_refit_abc}
\alias{netest_refit_abc}
\title{Refit TERGM with Biased Edges Dissolution Approximation}
\usage{
netest_refit_abc(
  est,
  nsims,
  ncores,
  nsteps,
  coefs.to.fit,
  prior.min = 0,
  prior.max = 0,
  p_acc_min = 0.1
)
}
\arguments{
\item{est}{An object of class \code{netest}, from the
\code{\link{netest}} function.}

\item{nsims}{Number of simulations per sequential ABC wave (more = fewer
waves required for convergence).}

\item{ncores}{Number of cores for each wave of simulations.}

\item{nsteps}{Number of time steps to simulate the TERGM for each refitting.}

\item{coefs.to.fit}{Integer vector of coefficient position to refit. Implicit
default is the full coefficient vector, but use this to
subset fitting to selected coefficients.}

\item{prior.min}{Absolute lower bound of adjustment to be made across all
model coefficients.}

\item{prior.max}{Absolute upper bound of adjustment to be made across all
model coefficients.}

\item{p_acc_min}{Convergence threshold for ABC waves, as a proportion of
simulations accepted (range from 0 to 1, with lower =
greater precision).}
}
\description{
Refits a TERGM estimated with \code{netest} using the edges
             dissolution approximation that had residual biased estimates.
}
\details{
Fitting an TERGM in \code{\link{netest}} can be accelerated with the
edges-dissolution approximation method (\code{edapprox = TRUE}), but this
sometimes results in bias (poor fit to the target statistics) when the mean
network degree is high, mean duration is short, or other combinations. All of
this poor fit is revealed with model diagnostics in \code{\link{netdx}}. If
the approximation method does not work, then the immediate next step is to
try fitting a full TERGM without the approximation (\code{edapprox = FALSE}).
This is often successful must has challenges with larger and more complex
network models, particularly those with longer durations. Therefore, this
function provides an alternative approach using approximate Bayesian
computation (ABC) methods. This function simply wraps a commonly used
sequential ABC approach and does the additional coefficient adjustment
automatically. It may not work for all models, and there is no guarantee of
model convergence or even improvement from the original fit; one should
evaluate that fit with an additional round of model diagnostics after the
ABC algorithm completes.
}
\examples{
\dontrun{
# Original fit with edges dissolution approximation: High mean degree and
# short duration often leads to poor performance of the approximation method
nw <- network_initialize(1000)
formation <- ~edges + concurrent
target.stats <- c(1*(1000/2), 250)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 10)
est <- netest(nw, formation, target.stats, coef.diss)

# Diagnostics will show bias here
dx <- netdx(est, nsims = 10, nsteps = 300, ncores = 4)
print(dx)

# Refit the model with Bayesian ABC, with uniform prior adjustments applying
# to all model coefficients
est_new <- netest_refit_abc(est, nsims = 10, ncores = 5, nsteps = 300,
                            prior.min = -0.5, prior.max = 0)

# Raw output from EasyABC
est_new$refit

# Compare old and new coefficient values
est$coef.form
est_new$coef.form

# Rerun diagnostics to evaluate fit (no guarantee that ABC works)
dx_new <- netdx(est_new, nsims = 10, nsteps = 300, ncores = 4)
dx_new
}

}
