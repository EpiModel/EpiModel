% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{trim_netest}
\alias{trim_netest}
\title{Function to Reduce the Size of the \code{netest} Object}
\usage{
trim_netest(object, as.networkLite = TRUE)
}
\arguments{
\item{object}{A \code{netest} object.}

\item{as.networkLite}{logical; should we convert the retained network object
to a \code{networkLite}?}
}
\value{
A \code{netest} object with formula environments, some networks,
        and sample removed, optionally with the retained network object
        converted to a \code{networkLite}.
}
\description{
Trims formula environments, some networks, and
             \code{fit$sample} from the \code{netest} object.  Optionally
             converts the retained network object to a \code{networkLite}.
}
\details{
Removes \code{environment(object$constraints)},
         \code{environment(object$coef.diss$dissolution)},
         \code{environment(object$formation)},
         \code{object$fit$sample}, and \code{object$fit$newnetworks}.  When
         \code{edapprox = TRUE}, also removes \code{object$fit$network} and
         \code{environment(object$fit$formula)}; when
         \code{edapprox = FALSE}, also removes \code{object$fit$newnetwork}
         and all but \code{formation} and \code{dissolution} from
         \code{environment(object$fit$formula)}, as well as removing
         \code{environment(environment(object$fit$formula)$formation)} and
         \code{environment(environment(object$fit$formula)$dissolution)}.
         Optionally converts the retained network object to a
         \code{networkLite} (if \code{as.networkLite = TRUE}).

         For the output to be usable in simulation, there should not be
         substitutions in the formulas, other than \code{formation} and
         \code{dissolution} in \code{object$fit$formula} when
         \code{edapprox = FALSE}.
}
\examples{
nw <- network_initialize(n = 100)
formation <- ~edges + concurrent
target.stats <- c(50, 25)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 10)
est <- netest(nw, formation, target.stats, coef.diss,
              set.control.ergm = control.ergm(MCMC.burnin = 1e5,
                                              MCMC.interval = 1000))
est <- trim_netest(est)
}
